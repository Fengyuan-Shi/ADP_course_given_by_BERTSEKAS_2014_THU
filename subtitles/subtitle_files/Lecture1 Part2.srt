1
00:00:06,330 --> 00:00:08,630
having done<font color="#CCCCCC"> that</font>

2
00:00:08,630 --> 00:00:11,540
doing<font color="#CCCCCC"> the short</font><font color="#E5E5E5"> break</font><font color="#CCCCCC"> here we go bring a</font>

3
00:00:11,540 --> 00:00:14,510
number<font color="#E5E5E5"> to be that you may address for</font>

4
00:00:14,510 --> 00:00:15,820
the TA

5
00:00:15,820 --> 00:00:17,680
<font color="#E5E5E5">they're teaching the area</font>

6
00:00:17,680 --> 00:00:20,790
<font color="#E5E5E5">as a possible</font>

7
00:00:29,930 --> 00:00:31,390
[Music]

8
00:00:31,390 --> 00:00:34,390
<font color="#CCCCCC">this</font>

9
00:00:37,350 --> 00:00:40,450
[Music]

10
00:00:51,510 --> 00:00:53,840
<font color="#E5E5E5">yeah</font>

11
00:01:02,980 --> 00:01:06,069
[Music]

12
00:01:10,840 --> 00:01:13,900
[Music]

13
00:01:18,340 --> 00:01:23,969
<font color="#E5E5E5">okay maybe we can get started</font>

14
00:01:30,300 --> 00:01:33,640
so I will pick<font color="#CCCCCC"> up again on this dynamic</font>

15
00:01:33,640 --> 00:01:37,270
<font color="#CCCCCC">programming</font><font color="#E5E5E5"> algorithm</font><font color="#CCCCCC"> we define JK's of</font>

16
00:01:37,270 --> 00:01:39,310
<font color="#CCCCCC">xk</font><font color="#E5E5E5"> it will be the optimal cost the</font><font color="#CCCCCC"> tale</font>

17
00:01:39,310 --> 00:01:42,130
<font color="#CCCCCC">problems starting at xk</font><font color="#E5E5E5"> and given the</font>

18
00:01:42,130 --> 00:01:44,350
solution to<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> ten problems</font><font color="#E5E5E5"> of</font>

19
00:01:44,350 --> 00:01:47,350
starting at k plus<font color="#CCCCCC"> one</font><font color="#E5E5E5"> we can generate</font>

20
00:01:47,350 --> 00:01:49,080
by the principle of optimality

21
00:01:49,080 --> 00:01:53,680
essentially the optimal cost of<font color="#E5E5E5"> the tail</font>

22
00:01:53,680 --> 00:01:57,370
<font color="#E5E5E5">problem starting at time k go one step</font>

23
00:01:57,370 --> 00:01:59,680
and then go optimally on the tail

24
00:01:59,680 --> 00:02:02,830
problem at time k plus<font color="#CCCCCC"> one and</font><font color="#E5E5E5"> minimize</font>

25
00:02:02,830 --> 00:02:05,440
choose you to minimize<font color="#E5E5E5"> the sum of the</font>

26
00:02:05,440 --> 00:02:08,530
two<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so this is an algorithm that a</font>

27
00:02:08,530 --> 00:02:10,929
computer can understand<font color="#E5E5E5"> but it can be a</font>

28
00:02:10,929 --> 00:02:13,330
very<font color="#E5E5E5"> very difficult algorithm to execute</font>

29
00:02:13,330 --> 00:02:16,510
<font color="#E5E5E5">and that's the problem</font><font color="#CCCCCC"> here with dynamic</font>

30
00:02:16,510 --> 00:02:19,210
programming<font color="#CCCCCC"> recognized in the very early</font>

31
00:02:19,210 --> 00:02:21,670
days<font color="#E5E5E5"> let's see what are the difficulties</font>

32
00:02:21,670 --> 00:02:24,040
<font color="#E5E5E5">with this algorithm</font><font color="#CCCCCC"> well first of all</font>

33
00:02:24,040 --> 00:02:27,340
the curse of<font color="#E5E5E5"> dimensionality exponential</font>

34
00:02:27,340 --> 00:02:28,570
growth<font color="#CCCCCC"> of the computation</font><font color="#E5E5E5"> and storage</font>

35
00:02:28,570 --> 00:02:30,610
requirements<font color="#CCCCCC"> as the number</font><font color="#E5E5E5"> of state</font>

36
00:02:30,610 --> 00:02:32,410
<font color="#CCCCCC">variables</font><font color="#E5E5E5"> and control variables</font>

37
00:02:32,410 --> 00:02:35,920
<font color="#E5E5E5">increases so for example if you have</font>

38
00:02:35,920 --> 00:02:40,300
motion of<font color="#E5E5E5"> a vehicle in some three</font>

39
00:02:40,300 --> 00:02:42,850
<font color="#CCCCCC">dimensional space</font><font color="#E5E5E5"> we said the six state</font>

40
00:02:42,850 --> 00:02:45,970
variables<font color="#E5E5E5"> okay six state variables if</font>

41
00:02:45,970 --> 00:02:48,580
you discretize<font color="#CCCCCC"> each axis with a</font><font color="#E5E5E5"> hundred</font>

42
00:02:48,580 --> 00:02:51,000
points<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> hundred to the sixth</font>

43
00:02:51,000 --> 00:02:55,239
discretization points so at each one<font color="#E5E5E5"> of</font>

44
00:02:55,239 --> 00:02:56,620
these<font color="#CCCCCC"> ten to the</font><font color="#E5E5E5"> six discretization</font>

45
00:02:56,620 --> 00:02:59,770
points you have<font color="#E5E5E5"> to calculate this</font>

46
00:02:59,770 --> 00:03:02,950
expectation<font color="#E5E5E5"> okay and then minimize</font>

47
00:03:02,950 --> 00:03:05,400
<font color="#CCCCCC">overall you</font><font color="#E5E5E5"> that's a lot of</font>

48
00:03:05,400 --> 00:03:08,500
minimizations to do<font color="#E5E5E5"> and this is only one</font>

49
00:03:08,500 --> 00:03:11,170
<font color="#CCCCCC">time step if you go back many many steps</font>

50
00:03:11,170 --> 00:03:14,370
the requirements<font color="#CCCCCC"> increase proportionally</font>

51
00:03:14,370 --> 00:03:18,390
so<font color="#E5E5E5"> there's this curse of dimensionality</font>

52
00:03:18,390 --> 00:03:21,489
<font color="#E5E5E5">which manifests itself on many many</font>

53
00:03:21,489 --> 00:03:25,510
computations to<font color="#E5E5E5"> be done here and</font><font color="#CCCCCC"> there</font>

54
00:03:25,510 --> 00:03:28,150
is<font color="#E5E5E5"> also a problem of storage because if</font>

55
00:03:28,150 --> 00:03:30,760
you have you<font color="#E5E5E5"> have to store the say a</font>

56
00:03:30,760 --> 00:03:33,140
<font color="#E5E5E5">hundred to</font><font color="#CCCCCC"> the six</font><font color="#E5E5E5"> numbers</font>

57
00:03:33,140 --> 00:03:37,770
to store<font color="#E5E5E5"> this function JK plus 1 so</font>

58
00:03:37,770 --> 00:03:40,980
<font color="#E5E5E5">again and a hundred to</font><font color="#CCCCCC"> the sixth for</font>

59
00:03:40,980 --> 00:03:44,520
problem is relatively small<font color="#CCCCCC"> if we will</font>

60
00:03:44,520 --> 00:03:45,930
<font color="#E5E5E5">look</font><font color="#CCCCCC"> later at</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> problems that</font><font color="#E5E5E5"> are</font>

61
00:03:45,930 --> 00:03:48,990
much much bigger than<font color="#CCCCCC"> that so that's</font><font color="#E5E5E5"> the</font>

62
00:03:48,990 --> 00:03:51,239
curse<font color="#E5E5E5"> of dimensionality</font><font color="#CCCCCC"> it's a real</font>

63
00:03:51,239 --> 00:03:59,000
formidable object object<font color="#CCCCCC"> or obstacle</font>

64
00:03:59,000 --> 00:04:02,700
<font color="#CCCCCC">okay the curse of</font><font color="#E5E5E5"> modeling here in this</font>

65
00:04:02,700 --> 00:04:05,820
<font color="#CCCCCC">algorithm</font><font color="#E5E5E5"> we need to have we transition</font>

66
00:04:05,820 --> 00:04:08,750
the probability distribution of<font color="#E5E5E5"> wk and</font>

67
00:04:08,750 --> 00:04:11,220
<font color="#E5E5E5">that's easy that's not so</font><font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> get</font>

68
00:04:11,220 --> 00:04:13,650
<font color="#CCCCCC">you need</font><font color="#E5E5E5"> to have an equation here</font><font color="#CCCCCC"> FK</font>

69
00:04:13,650 --> 00:04:17,430
<font color="#CCCCCC">that may also be</font><font color="#E5E5E5"> difficult to have in a</font>

70
00:04:17,430 --> 00:04:20,250
give a<font color="#CCCCCC"> practical situation so it would</font>

71
00:04:20,250 --> 00:04:22,079
<font color="#E5E5E5">be nice if</font><font color="#CCCCCC"> we did not</font><font color="#E5E5E5"> have to calculate</font>

72
00:04:22,079 --> 00:04:24,810
this entire thing in detail<font color="#E5E5E5"> then</font>

73
00:04:24,810 --> 00:04:26,550
<font color="#E5E5E5">calculate</font><font color="#CCCCCC"> the whole thing and this</font><font color="#E5E5E5"> is</font>

74
00:04:26,550 --> 00:04:28,320
<font color="#E5E5E5">what you</font><font color="#CCCCCC"> learning</font><font color="#E5E5E5"> does somebody</font>

75
00:04:28,320 --> 00:04:31,169
<font color="#CCCCCC">mentioned</font><font color="#E5E5E5"> Q learning earlier later we're</font>

76
00:04:31,169 --> 00:04:32,790
going<font color="#E5E5E5"> to see that the Q</font><font color="#CCCCCC"> learning</font>

77
00:04:32,790 --> 00:04:35,040
technique is a dynamic program entitled

78
00:04:35,040 --> 00:04:37,770
<font color="#CCCCCC">up of techniques</font><font color="#E5E5E5"> that is model free you</font>

79
00:04:37,770 --> 00:04:40,919
don't need to have a model of<font color="#E5E5E5"> the system</font>

80
00:04:40,919 --> 00:04:45,390
<font color="#E5E5E5">or a model of the uncertainties</font><font color="#CCCCCC"> to apply</font>

81
00:04:45,390 --> 00:04:47,450
it

82
00:04:49,479 --> 00:04:52,210
here's another difficulty there may be

83
00:04:52,210 --> 00:04:56,460
<font color="#CCCCCC">real-time solution constraints</font>

84
00:04:56,460 --> 00:04:59,830
<font color="#CCCCCC">oftentimes you need</font><font color="#E5E5E5"> you have really a</font>

85
00:04:59,830 --> 00:05:02,229
family<font color="#E5E5E5"> of problems and you don't</font><font color="#CCCCCC"> know</font>

86
00:05:02,229 --> 00:05:03,580
which problem you're going<font color="#E5E5E5"> to solve</font>

87
00:05:03,580 --> 00:05:05,800
<font color="#E5E5E5">until the very last minute</font><font color="#CCCCCC"> so for</font>

88
00:05:05,800 --> 00:05:07,479
<font color="#E5E5E5">example</font><font color="#CCCCCC"> suppose you want to dispatch</font>

89
00:05:07,479 --> 00:05:09,610
some<font color="#E5E5E5"> trucks to make deliveries in</font>

90
00:05:09,610 --> 00:05:12,699
various parts of a<font color="#E5E5E5"> certain area</font><font color="#CCCCCC"> you</font>

91
00:05:12,699 --> 00:05:14,650
don't<font color="#E5E5E5"> know you may</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> a good map of</font>

92
00:05:14,650 --> 00:05:17,139
<font color="#E5E5E5">the area but you don't know where the</font>

93
00:05:17,139 --> 00:05:19,330
deliveries are<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be until the</font>

94
00:05:19,330 --> 00:05:22,020
very last minute<font color="#E5E5E5"> when the orders</font><font color="#CCCCCC"> come in</font>

95
00:05:22,020 --> 00:05:26,020
<font color="#E5E5E5">so this has to do also with real-time</font>

96
00:05:26,020 --> 00:05:28,930
operation<font color="#E5E5E5"> the problem being revealed</font><font color="#CCCCCC"> at</font>

97
00:05:28,930 --> 00:05:30,490
you in<font color="#CCCCCC"> real-time</font>

98
00:05:30,490 --> 00:05:36,639
however if you have<font color="#E5E5E5"> real-time situations</font>

99
00:05:36,639 --> 00:05:39,610
<font color="#E5E5E5">required fast solution and the dynamic</font>

100
00:05:39,610 --> 00:05:43,029
programming<font color="#E5E5E5"> algorithm is not fast you</font>

101
00:05:43,029 --> 00:05:46,120
<font color="#CCCCCC">can</font><font color="#E5E5E5"> may take a very long time</font><font color="#CCCCCC"> to produce</font>

102
00:05:46,120 --> 00:05:49,089
a solution<font color="#E5E5E5"> is basically an offline</font>

103
00:05:49,089 --> 00:05:53,159
<font color="#E5E5E5">algorithm and many times you have online</font>

104
00:05:53,159 --> 00:05:54,399
situations

105
00:05:54,399 --> 00:05:57,279
moreover the problem<font color="#E5E5E5"> data may change as</font>

106
00:05:57,279 --> 00:05:59,289
the system is<font color="#CCCCCC"> controlled for example in</font>

107
00:05:59,289 --> 00:06:02,680
<font color="#E5E5E5">the city in deliveries there may be some</font>

108
00:06:02,680 --> 00:06:05,800
new deliveries that<font color="#CCCCCC"> are scheduled as</font>

109
00:06:05,800 --> 00:06:08,469
your trucks<font color="#E5E5E5"> are moving</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so the problem</font>

110
00:06:08,469 --> 00:06:10,449
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the data of the</font><font color="#CCCCCC"> problem may change on</font>

111
00:06:10,449 --> 00:06:12,389
you and then<font color="#E5E5E5"> you need to do online</font>

112
00:06:12,389 --> 00:06:14,740
<font color="#E5E5E5">replanting and the dynamic programming</font>

113
00:06:14,740 --> 00:06:16,930
<font color="#E5E5E5">algorithm is not suitable</font><font color="#CCCCCC"> for this sort</font>

114
00:06:16,930 --> 00:06:21,969
of thing all of these difficulties<font color="#E5E5E5"> are</font>

115
00:06:21,969 --> 00:06:24,729
our motivation<font color="#E5E5E5"> for considering</font>

116
00:06:24,729 --> 00:06:27,779
approximations to<font color="#E5E5E5"> the algorithm and also</font>

117
00:06:27,779 --> 00:06:30,520
<font color="#E5E5E5">simulation to deal with this curse of</font>

118
00:06:30,520 --> 00:06:35,830
modeling so<font color="#CCCCCC"> here's</font><font color="#E5E5E5"> a major idea of</font>

119
00:06:35,830 --> 00:06:37,899
approximation it's not the<font color="#E5E5E5"> only one but</font>

120
00:06:37,899 --> 00:06:42,039
it's an important one<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> using</font>

121
00:06:42,039 --> 00:06:45,310
the optimal cost to go function<font color="#CCCCCC"> JK plus</font>

122
00:06:45,310 --> 00:06:48,430
<font color="#E5E5E5">one in the algorithm we replace</font><font color="#CCCCCC"> it by an</font>

123
00:06:48,430 --> 00:06:50,620
approximation<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is more easily</font>

124
00:06:50,620 --> 00:06:54,969
computable<font color="#CCCCCC"> in other words we use a sub</font>

125
00:06:54,969 --> 00:07:00,339
optimal policy<font color="#CCCCCC"> nu bar not new star</font><font color="#E5E5E5"> nu</font>

126
00:07:00,339 --> 00:07:01,520
bar

127
00:07:01,520 --> 00:07:05,180
<font color="#CCCCCC">which at time K attains the minimum of</font>

128
00:07:05,180 --> 00:07:07,819
this expression<font color="#CCCCCC"> now how is this</font>

129
00:07:07,819 --> 00:07:09,770
expression different than the one<font color="#E5E5E5"> we had</font>

130
00:07:09,770 --> 00:07:10,509
<font color="#CCCCCC">before</font>

131
00:07:10,509 --> 00:07:14,360
<font color="#E5E5E5">instead of having j k plus</font><font color="#CCCCCC"> one we have J</font>

132
00:07:14,360 --> 00:07:19,190
tilde<font color="#E5E5E5"> k plus</font><font color="#CCCCCC"> one an approximation so the</font>

133
00:07:19,190 --> 00:07:21,500
thing<font color="#CCCCCC"> that gives us trouble</font><font color="#E5E5E5"> this JK plus</font>

134
00:07:21,500 --> 00:07:23,900
one<font color="#E5E5E5"> we approximate</font><font color="#CCCCCC"> it with something</font><font color="#E5E5E5"> and</font>

135
00:07:23,900 --> 00:07:28,370
I<font color="#E5E5E5"> haven't told you how and then use the</font>

136
00:07:28,370 --> 00:07:30,740
<font color="#E5E5E5">minimizing control as a substitute</font><font color="#CCCCCC"> for</font>

137
00:07:30,740 --> 00:07:34,130
the object<font color="#E5E5E5"> this is called approximation</font>

138
00:07:34,130 --> 00:07:37,819
in value space<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we approximate the</font>

139
00:07:37,819 --> 00:07:41,180
optimal values here<font color="#E5E5E5"> by something and we</font>

140
00:07:41,180 --> 00:07:43,810
go<font color="#E5E5E5"> from there</font>

141
00:07:45,130 --> 00:07:48,050
how can we compute an approximation to

142
00:07:48,050 --> 00:07:51,830
<font color="#E5E5E5">the optimal cost to go well we may</font>

143
00:07:51,830 --> 00:07:55,580
replace the problem with a simpler

144
00:07:55,580 --> 00:08:00,830
<font color="#CCCCCC">problem and use as J tilde</font><font color="#E5E5E5"> K to be the</font>

145
00:08:00,830 --> 00:08:02,690
optimal cost of that simpler problem

146
00:08:02,690 --> 00:08:05,000
that simpler problem may be<font color="#E5E5E5"> obtained by</font>

147
00:08:05,000 --> 00:08:09,560
discarding some dynamics<font color="#E5E5E5"> by simplifying</font>

148
00:08:09,560 --> 00:08:10,820
<font color="#CCCCCC">the trying to the probability</font>

149
00:08:10,820 --> 00:08:12,949
<font color="#E5E5E5">distributions of the problem make the</font>

150
00:08:12,949 --> 00:08:17,449
problem simpler to<font color="#E5E5E5"> to to solve exactly</font>

151
00:08:17,449 --> 00:08:19,699
perhaps by dynamic programming<font color="#CCCCCC"> be helped</font>

152
00:08:19,699 --> 00:08:22,340
by other means<font color="#CCCCCC"> and stick it in here to</font>

153
00:08:22,340 --> 00:08:25,509
<font color="#E5E5E5">get the benefit of feedback</font>

154
00:08:28,159 --> 00:08:34,549
here's another<font color="#E5E5E5"> example J tilde K is a</font>

155
00:08:34,549 --> 00:08:37,130
high<font color="#E5E5E5"> dimensional object and you remember</font>

156
00:08:37,130 --> 00:08:38,779
that<font color="#CCCCCC"> the state</font><font color="#E5E5E5"> space may be very large</font>

157
00:08:38,779 --> 00:08:41,269
there may be many many states so this is

158
00:08:41,269 --> 00:08:43,818
a function that<font color="#E5E5E5"> is represented by a list</font>

159
00:08:43,818 --> 00:08:48,350
of<font color="#E5E5E5"> many many values</font><font color="#CCCCCC"> okay it may be</font>

160
00:08:48,350 --> 00:08:51,040
possible<font color="#E5E5E5"> to represent this function</font>

161
00:08:51,040 --> 00:08:54,790
<font color="#E5E5E5">approximately with a parametric form a</font>

162
00:08:54,790 --> 00:08:58,610
function<font color="#CCCCCC"> that depends</font><font color="#E5E5E5"> on some parameters</font>

163
00:08:58,610 --> 00:09:01,459
a small<font color="#E5E5E5"> number of parameters which are</font>

164
00:09:01,459 --> 00:09:04,699
tuned or trained by<font color="#CCCCCC"> some heuristic or</font>

165
00:09:04,699 --> 00:09:08,149
systematic scheme<font color="#E5E5E5"> and this is going to</font>

166
00:09:08,149 --> 00:09:14,480
<font color="#E5E5E5">be a major object for us to look into in</font>

167
00:09:14,480 --> 00:09:17,180
a major<font color="#E5E5E5"> portion of</font><font color="#CCCCCC"> new Rosner learning</font>

168
00:09:17,180 --> 00:09:18,230
<font color="#CCCCCC">the approximate dynamic programming</font>

169
00:09:18,230 --> 00:09:21,380
<font color="#CCCCCC">neural dynamic programming deals with</font>

170
00:09:21,380 --> 00:09:25,819
parametric approximations of<font color="#CCCCCC"> the cost to</font>

171
00:09:25,819 --> 00:09:33,560
go function<font color="#CCCCCC"> JK he is a third</font><font color="#E5E5E5"> approach</font>

172
00:09:33,560 --> 00:09:35,689
which is simple but very effective often

173
00:09:35,689 --> 00:09:38,839
called the<font color="#CCCCCC"> roll-out</font><font color="#E5E5E5"> approach in rollout</font>

174
00:09:38,839 --> 00:09:43,040
<font color="#E5E5E5">we use as</font><font color="#CCCCCC"> J as an approximation J tilde</font>

175
00:09:43,040 --> 00:09:46,220
the cost of some other policy<font color="#E5E5E5"> not the</font>

176
00:09:46,220 --> 00:09:48,800
optimal on some<font color="#E5E5E5"> suboptimal policy some</font>

177
00:09:48,800 --> 00:09:52,100
heuristic policy which is calculated

178
00:09:52,100 --> 00:09:54,560
<font color="#CCCCCC">which</font><font color="#E5E5E5"> is such that you can calculate</font><font color="#CCCCCC"> its</font>

179
00:09:54,560 --> 00:09:57,529
cost either analytically or by

180
00:09:57,529 --> 00:10:00,139
simulation<font color="#E5E5E5"> so you have a heuristic</font>

181
00:10:00,139 --> 00:10:02,930
<font color="#E5E5E5">instead of the optimal cost you use the</font>

182
00:10:02,930 --> 00:10:06,069
cost of<font color="#CCCCCC"> agrestic in there</font>

183
00:10:08,730 --> 00:10:10,980
<font color="#E5E5E5">the rollout as I mentioned is a is a</font>

184
00:10:10,980 --> 00:10:14,610
very<font color="#CCCCCC"> effective technique</font><font color="#E5E5E5"> very simple</font><font color="#CCCCCC"> but</font>

185
00:10:14,610 --> 00:10:17,460
we're not<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to go into</font><font color="#E5E5E5"> it much in</font>

186
00:10:17,460 --> 00:10:18,990
this<font color="#E5E5E5"> course because we just don't have</font>

187
00:10:18,990 --> 00:10:22,110
<font color="#CCCCCC">time but</font><font color="#E5E5E5"> let me spend one slide</font><font color="#CCCCCC"> on it</font>

188
00:10:22,110 --> 00:10:24,420
because I think<font color="#CCCCCC"> it's an important</font>

189
00:10:24,420 --> 00:10:27,750
algorithm okay so here's our all-out

190
00:10:27,750 --> 00:10:31,730
algorithm I have some heuristic policy

191
00:10:31,730 --> 00:10:35,690
which I call<font color="#CCCCCC"> the base policy</font><font color="#E5E5E5"> and I</font>

192
00:10:35,690 --> 00:10:39,900
calculate somehow the cost of that

193
00:10:39,900 --> 00:10:43,110
policy<font color="#E5E5E5"> associated with the next</font><font color="#CCCCCC"> states</font>

194
00:10:43,110 --> 00:10:47,370
that<font color="#E5E5E5"> I may land using</font><font color="#CCCCCC"> control</font><font color="#E5E5E5"> UK and I</font>

195
00:10:47,370 --> 00:10:50,250
minimize this<font color="#CCCCCC"> expression</font><font color="#E5E5E5"> so I calculate</font>

196
00:10:50,250 --> 00:10:54,980
this in some way<font color="#CCCCCC"> and here's the</font>

197
00:10:54,980 --> 00:11:00,150
important property the<font color="#E5E5E5"> roll out policy</font>

198
00:11:00,150 --> 00:11:02,550
the roll<font color="#CCCCCC"> out the policy that you are</font>

199
00:11:02,550 --> 00:11:04,040
going<font color="#E5E5E5"> to obtain from this minimization</font>

200
00:11:04,040 --> 00:11:07,650
<font color="#E5E5E5">is always no worse and usually much</font>

201
00:11:07,650 --> 00:11:10,950
<font color="#CCCCCC">better than the base policy</font><font color="#E5E5E5"> so starting</font>

202
00:11:10,950 --> 00:11:13,050
from any heuristic<font color="#E5E5E5"> if you can calculate</font>

203
00:11:13,050 --> 00:11:15,570
<font color="#E5E5E5">this cost you can stick it in here and</font>

204
00:11:15,570 --> 00:11:18,480
get a better heuristic often

205
00:11:18,480 --> 00:11:20,670
significantly better offer<font color="#E5E5E5"> pretty close</font>

206
00:11:20,670 --> 00:11:23,160
to<font color="#E5E5E5"> optimal and this is</font><font color="#CCCCCC"> suitable for</font>

207
00:11:23,160 --> 00:11:26,850
online operation because as you go<font color="#CCCCCC"> on</font>

208
00:11:26,850 --> 00:11:29,520
then what you need in order to<font color="#E5E5E5"> apply</font>

209
00:11:29,520 --> 00:11:32,340
<font color="#E5E5E5">controller time UK</font><font color="#CCCCCC"> you need to calculate</font>

210
00:11:32,340 --> 00:11:35,130
<font color="#E5E5E5">this expression here and you can do it</font>

211
00:11:35,130 --> 00:11:38,700
by forward simulation often so<font color="#E5E5E5"> you are</font>

212
00:11:38,700 --> 00:11:41,700
<font color="#E5E5E5">at</font><font color="#CCCCCC"> IMAX that at time estate</font><font color="#E5E5E5"> XK you</font>

213
00:11:41,700 --> 00:11:44,340
calculate you consider all possible use

214
00:11:44,340 --> 00:11:46,920
and then from the state<font color="#E5E5E5"> whether you land</font>

215
00:11:46,920 --> 00:11:49,950
you run the heuristic from there and get

216
00:11:49,950 --> 00:11:52,710
a number that will give you a number<font color="#CCCCCC"> for</font>

217
00:11:52,710 --> 00:11:55,260
every control and you pick the control

218
00:11:55,260 --> 00:11:58,160
that minimizes

219
00:12:01,260 --> 00:12:03,660
there is a potential<font color="#CCCCCC"> difficulty</font>

220
00:12:03,660 --> 00:12:05,890
calculating<font color="#E5E5E5"> the cost of a heuristic may</font>

221
00:12:05,890 --> 00:12:10,860
itself be computationally<font color="#E5E5E5"> intensive and</font>

222
00:12:10,860 --> 00:12:13,630
one possibility is<font color="#E5E5E5"> to use Monte Carlo</font>

223
00:12:13,630 --> 00:12:14,530
simulation

224
00:12:14,530 --> 00:12:17,530
if the problem is stochastic<font color="#E5E5E5"> however if</font>

225
00:12:17,530 --> 00:12:21,420
the problem is<font color="#E5E5E5"> deterministic then this</font>

226
00:12:21,420 --> 00:12:23,470
calculating this quantity does not

227
00:12:23,470 --> 00:12:26,170
require Monte Carlo simulation it can be

228
00:12:26,170 --> 00:12:29,530
done by a single<font color="#E5E5E5"> run of the</font>

229
00:12:29,530 --> 00:12:32,500
<font color="#E5E5E5">deterministic heuristic and this is a</font>

230
00:12:32,500 --> 00:12:35,830
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is this this</font><font color="#E5E5E5"> is important in</font>

231
00:12:35,830 --> 00:12:38,170
discrete optimization problems where<font color="#CCCCCC"> you</font>

232
00:12:38,170 --> 00:12:40,180
have combinatorial problems<font color="#E5E5E5"> you're</font>

233
00:12:40,180 --> 00:12:42,220
breaking them up<font color="#E5E5E5"> into decisions over</font>

234
00:12:42,220 --> 00:12:44,890
stages and<font color="#E5E5E5"> you have a heuristic</font><font color="#CCCCCC"> which</font>

235
00:12:44,890 --> 00:12:46,450
<font color="#CCCCCC">are at certain point you've calculated</font>

236
00:12:46,450 --> 00:12:49,060
the solution a partial solution<font color="#CCCCCC"> to</font>

237
00:12:49,060 --> 00:12:50,590
calculate the remainder of the solution

238
00:12:50,590 --> 00:12:54,400
you use this heuristic<font color="#E5E5E5"> and calculating</font>

239
00:12:54,400 --> 00:12:56,620
the<font color="#CCCCCC"> associated</font><font color="#E5E5E5"> cost requires only a</font>

240
00:12:56,620 --> 00:13:01,570
single<font color="#E5E5E5"> trajectory simulation there is</font>

241
00:13:01,570 --> 00:13:03,340
also a methodology<font color="#CCCCCC"> that's very important</font>

242
00:13:03,340 --> 00:13:05,740
in control theory<font color="#E5E5E5"> model</font><font color="#CCCCCC"> predicted</font>

243
00:13:05,740 --> 00:13:08,380
<font color="#E5E5E5">control control system design in these</font>

244
00:13:08,380 --> 00:13:10,330
days is done to a large extent with this

245
00:13:10,330 --> 00:13:13,480
model predictive control and<font color="#CCCCCC"> control</font>

246
00:13:13,480 --> 00:13:15,640
<font color="#E5E5E5">turns out to be a special case of</font>

247
00:13:15,640 --> 00:13:18,280
<font color="#CCCCCC">rollout with a special heuristic</font><font color="#E5E5E5"> in the</font>

248
00:13:18,280 --> 00:13:23,920
special context of this<font color="#CCCCCC"> NPC I'm not</font>

249
00:13:23,920 --> 00:13:26,410
going to get into this like I can post

250
00:13:26,410 --> 00:13:29,200
literature on the website but<font color="#CCCCCC"> an</font>

251
00:13:29,200 --> 00:13:31,510
<font color="#E5E5E5">interesting connection because MPC has</font>

252
00:13:31,510 --> 00:13:33,600
been hugely<font color="#CCCCCC"> successful in control theory</font>

253
00:13:33,600 --> 00:13:36,340
<font color="#CCCCCC">and it and then this connection</font>

254
00:13:36,340 --> 00:13:38,440
indicates of how things may go<font color="#E5E5E5"> from here</font>

255
00:13:38,440 --> 00:13:41,680
<font color="#E5E5E5">and why</font><font color="#CCCCCC"> rollout is also is could be a</font>

256
00:13:41,680 --> 00:13:43,750
very<font color="#CCCCCC"> effective technique it's a success</font>

257
00:13:43,750 --> 00:13:46,090
stories were all out<font color="#E5E5E5"> as well as the</font>

258
00:13:46,090 --> 00:13:48,690
control theory

259
00:13:49,900 --> 00:13:54,370
<font color="#CCCCCC">okay so now I'm going to turn</font><font color="#E5E5E5"> to</font>

260
00:13:54,370 --> 00:13:56,170
infinite horizon problems for final

261
00:13:56,170 --> 00:13:58,060
<font color="#E5E5E5">equalizer problems we have one algorithm</font>

262
00:13:58,060 --> 00:14:00,610
<font color="#E5E5E5">we can consider approximations but</font>

263
00:14:00,610 --> 00:14:02,200
basically that's<font color="#E5E5E5"> it there's not much</font>

264
00:14:02,200 --> 00:14:05,080
<font color="#E5E5E5">more</font><font color="#CCCCCC"> Theory for finite horizon problems</font>

265
00:14:05,080 --> 00:14:07,180
<font color="#E5E5E5">the interesting theory comes</font><font color="#CCCCCC"> foot to</font>

266
00:14:07,180 --> 00:14:10,800
infinite for infinite<font color="#CCCCCC"> horizon problems</font>

267
00:14:10,800 --> 00:14:13,420
<font color="#CCCCCC">points</font><font color="#E5E5E5"> an infinite horizon problem is</font>

268
00:14:13,420 --> 00:14:15,610
the same as the basic<font color="#CCCCCC"> -</font><font color="#E5E5E5"> operation</font>

269
00:14:15,610 --> 00:14:18,339
problem except<font color="#E5E5E5"> that the number of stages</font>

270
00:14:18,339 --> 00:14:21,670
is infinite<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the system and cost is</font>

271
00:14:21,670 --> 00:14:25,110
stationary there is no dependence<font color="#E5E5E5"> on J</font>

272
00:14:25,110 --> 00:14:28,660
if I can<font color="#E5E5E5"> turn</font><font color="#CCCCCC"> you back to this model</font>

273
00:14:28,660 --> 00:14:32,790
<font color="#E5E5E5">here sorry for the flipping backwards</font>

274
00:14:32,790 --> 00:14:35,800
<font color="#CCCCCC">okay so this is</font><font color="#E5E5E5"> our generic fine horizon</font>

275
00:14:35,800 --> 00:14:38,250
model<font color="#E5E5E5"> if there is no dependence</font><font color="#CCCCCC"> on K</font>

276
00:14:38,250 --> 00:14:42,279
here no dependence on K here and<font color="#CCCCCC"> the</font>

277
00:14:42,279 --> 00:14:44,440
horizon<font color="#CCCCCC"> is infinite we get an infinite</font>

278
00:14:44,440 --> 00:14:47,430
horizon<font color="#E5E5E5"> problem</font>

279
00:14:56,870 --> 00:14:59,620
<font color="#E5E5E5">okay</font>

280
00:15:00,380 --> 00:15:02,610
<font color="#E5E5E5">now</font>

281
00:15:02,610 --> 00:15:07,110
we want to minimize<font color="#E5E5E5"> in a major class</font><font color="#CCCCCC"> of</font>

282
00:15:07,110 --> 00:15:09,089
problems we want<font color="#E5E5E5"> to minimize the total</font>

283
00:15:09,089 --> 00:15:13,110
infinite horizon cost so<font color="#E5E5E5"> we form the</font>

284
00:15:13,110 --> 00:15:16,230
finite horizon cost<font color="#E5E5E5"> and we introduce a</font>

285
00:15:16,230 --> 00:15:20,130
discount factor alpha to the K alpha may

286
00:15:20,130 --> 00:15:22,980
be either 1 or<font color="#E5E5E5"> less than 1</font><font color="#CCCCCC"> if it's less</font>

287
00:15:22,980 --> 00:15:26,610
than<font color="#CCCCCC"> 1 then it discounts it diminishes</font>

288
00:15:26,610 --> 00:15:29,880
<font color="#E5E5E5">future cause it makes this expression</font>

289
00:15:29,880 --> 00:15:36,200
bounded it keeps it real number<font color="#CCCCCC"> so</font>

290
00:15:36,200 --> 00:15:39,930
plugging<font color="#E5E5E5"> in a policy for any finite</font>

291
00:15:39,930 --> 00:15:42,750
horizon<font color="#E5E5E5"> gives us a number and take this</font>

292
00:15:42,750 --> 00:15:45,810
number<font color="#E5E5E5"> to go to</font><font color="#CCCCCC"> 4</font><font color="#E5E5E5"> n to go to</font><font color="#CCCCCC"> infinity</font>

293
00:15:45,810 --> 00:15:47,130
the sequence of numbers<font color="#CCCCCC"> to go to</font>

294
00:15:47,130 --> 00:15:49,260
<font color="#E5E5E5">infinity and</font><font color="#CCCCCC"> that gives you the infinite</font>

295
00:15:49,260 --> 00:15:51,529
horizon cost associated with<font color="#E5E5E5"> a policy</font>

296
00:15:51,529 --> 00:15:56,040
<font color="#E5E5E5">and with an initial state and there</font><font color="#CCCCCC"> are</font>

297
00:15:56,040 --> 00:15:59,310
several<font color="#CCCCCC"> categories of problems</font><font color="#E5E5E5"> here one</font>

298
00:15:59,310 --> 00:16:02,880
is discounted problems<font color="#E5E5E5"> where alpha</font><font color="#CCCCCC"> is</font>

299
00:16:02,880 --> 00:16:07,200
less than<font color="#E5E5E5"> 1</font><font color="#CCCCCC"> and G is bounded okay</font>

300
00:16:07,200 --> 00:16:10,070
<font color="#CCCCCC">it's values right within</font><font color="#E5E5E5"> a bounded range</font>

301
00:16:10,070 --> 00:16:13,470
and<font color="#E5E5E5"> this makes this series convergent</font>

302
00:16:13,470 --> 00:16:17,010
<font color="#CCCCCC">okay G is bounded alpha goes down as a</font>

303
00:16:17,010 --> 00:16:19,640
<font color="#E5E5E5">geometric progression makes the series</font>

304
00:16:19,640 --> 00:16:23,130
convergent<font color="#E5E5E5"> and therefore the optimal</font>

305
00:16:23,130 --> 00:16:25,500
could<font color="#E5E5E5"> be the cost of any policy is</font>

306
00:16:25,500 --> 00:16:30,060
finite there are other<font color="#E5E5E5"> ways to keep</font>

307
00:16:30,060 --> 00:16:33,029
across finite and not explode to

308
00:16:33,029 --> 00:16:36,959
infinity<font color="#E5E5E5"> even</font><font color="#CCCCCC"> with alpha equals to</font><font color="#E5E5E5"> 1 if</font>

309
00:16:36,959 --> 00:16:39,870
there is a termination<font color="#CCCCCC"> state</font><font color="#E5E5E5"> consider</font>

310
00:16:39,870 --> 00:16:42,060
the following problem<font color="#CCCCCC"> you want to go to</font>

311
00:16:42,060 --> 00:16:44,790
some gold<font color="#E5E5E5"> stay for something where you</font>

312
00:16:44,790 --> 00:16:47,190
<font color="#E5E5E5">want that you</font><font color="#CCCCCC"> want to reach and go there</font>

313
00:16:47,190 --> 00:16:53,310
in<font color="#E5E5E5"> a in with minimum</font><font color="#CCCCCC"> cost now this is</font>

314
00:16:53,310 --> 00:16:55,829
really<font color="#CCCCCC"> a finite horizon</font><font color="#E5E5E5"> problem because</font>

315
00:16:55,829 --> 00:16:57,720
you will be at<font color="#E5E5E5"> the termination</font><font color="#CCCCCC"> state</font>

316
00:16:57,720 --> 00:17:00,779
within a finite<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of steps but the</font>

317
00:17:00,779 --> 00:17:03,600
horizon is not fixed<font color="#E5E5E5"> rather it is</font><font color="#CCCCCC"> random</font>

318
00:17:03,600 --> 00:17:07,079
<font color="#E5E5E5">and the corresponding cost is finite if</font>

319
00:17:07,079 --> 00:17:09,750
the<font color="#CCCCCC"> expected time by which we reach the</font>

320
00:17:09,750 --> 00:17:12,020
<font color="#E5E5E5">world is</font><font color="#CCCCCC"> also finite</font>

321
00:17:12,020 --> 00:17:14,539
so that's a major<font color="#E5E5E5"> class</font><font color="#CCCCCC"> of problems so</font>

322
00:17:14,539 --> 00:17:16,250
<font color="#CCCCCC">Kasich's showed this</font><font color="#E5E5E5"> path problems and</font>

323
00:17:16,250 --> 00:17:17,359
you make me familiar with<font color="#CCCCCC"> a</font>

324
00:17:17,359 --> 00:17:19,039
deterministic version of<font color="#E5E5E5"> this problem</font>

325
00:17:19,039 --> 00:17:21,500
<font color="#E5E5E5">the deterministic shortest path problem</font>

326
00:17:21,500 --> 00:17:24,140
<font color="#E5E5E5">within</font><font color="#CCCCCC"> a graph</font><font color="#E5E5E5"> go from</font><font color="#CCCCCC"> a node of a graph</font>

327
00:17:24,140 --> 00:17:26,169
to another destination node in<font color="#CCCCCC"> the graph</font>

328
00:17:26,169 --> 00:17:28,940
<font color="#CCCCCC">traversing</font><font color="#E5E5E5"> arcs which some is whose</font>

329
00:17:28,940 --> 00:17:32,570
heart<font color="#E5E5E5"> length is minimum</font><font color="#CCCCCC"> so stochastic</font>

330
00:17:32,570 --> 00:17:35,270
extension it's an important model<font color="#E5E5E5"> but</font>

331
00:17:35,270 --> 00:17:36,890
we're not going to<font color="#E5E5E5"> discuss</font><font color="#CCCCCC"> it very much</font>

332
00:17:36,890 --> 00:17:39,049
<font color="#E5E5E5">in this course</font><font color="#CCCCCC"> because we just don't</font>

333
00:17:39,049 --> 00:17:46,549
<font color="#E5E5E5">have a time problems involving unbounded</font>

334
00:17:46,549 --> 00:17:50,210
<font color="#E5E5E5">cost per stage either the scandal or</font>

335
00:17:50,210 --> 00:17:53,120
undiscounted<font color="#E5E5E5"> are more</font><font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> than</font>

336
00:17:53,120 --> 00:17:55,700
these two<font color="#E5E5E5"> and we are not going to cover</font>

337
00:17:55,700 --> 00:17:59,630
and actually there<font color="#E5E5E5"> is only</font><font color="#CCCCCC"> now emerging</font>

338
00:17:59,630 --> 00:18:02,870
<font color="#E5E5E5">theory of approximations for problems</font>

339
00:18:02,870 --> 00:18:06,919
like<font color="#CCCCCC"> that it's also another major</font>

340
00:18:06,919 --> 00:18:10,250
<font color="#E5E5E5">infinite horizon model average cost</font>

341
00:18:10,250 --> 00:18:13,100
problems for problems where there is no

342
00:18:13,100 --> 00:18:16,460
discounting<font color="#E5E5E5"> in this term here the sum of</font>

343
00:18:16,460 --> 00:18:19,789
the finite horizon<font color="#CCCCCC"> cost may explode to</font>

344
00:18:19,789 --> 00:18:24,830
infinity you may divide by 1 over<font color="#CCCCCC"> n here</font>

345
00:18:24,830 --> 00:18:29,750
and make the average<font color="#E5E5E5"> cost finite these</font>

346
00:18:29,750 --> 00:18:32,720
problems are a little bit more<font color="#E5E5E5"> difficult</font>

347
00:18:32,720 --> 00:18:35,659
than<font color="#CCCCCC"> v's but we are not going to</font><font color="#E5E5E5"> cover</font>

348
00:18:35,659 --> 00:18:37,370
them again<font color="#E5E5E5"> because we don't</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> time</font>

349
00:18:37,370 --> 00:18:38,929
they have a substantial<font color="#CCCCCC"> theory</font>

350
00:18:38,929 --> 00:18:41,450
associated with them<font color="#E5E5E5"> these</font><font color="#CCCCCC"> are the four</font>

351
00:18:41,450 --> 00:18:43,669
major<font color="#CCCCCC"> classes of infant horizon problems</font>

352
00:18:43,669 --> 00:18:45,289
there are<font color="#E5E5E5"> some others but these are the</font>

353
00:18:45,289 --> 00:18:50,120
major ones<font color="#CCCCCC"> ok</font>

354
00:18:50,120 --> 00:18:52,549
now why do<font color="#E5E5E5"> we want</font><font color="#CCCCCC"> to deal with infinite</font>

355
00:18:52,549 --> 00:18:54,320
horizon<font color="#CCCCCC"> in</font><font color="#E5E5E5"> reality we never have</font>

356
00:18:54,320 --> 00:18:56,600
infinite horizon<font color="#CCCCCC"> life is finite you know</font>

357
00:18:56,600 --> 00:18:59,289
it's always a finite number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> steps</font>

358
00:18:59,289 --> 00:19:02,179
<font color="#E5E5E5">there</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> some mathematical benefit in</font>

359
00:19:02,179 --> 00:19:04,150
dealing with infinite horizon problems

360
00:19:04,150 --> 00:19:09,260
solutions<font color="#CCCCCC"> are more elegant we can</font>

361
00:19:09,260 --> 00:19:12,169
restrict<font color="#E5E5E5"> attention very often to</font>

362
00:19:12,169 --> 00:19:15,590
<font color="#E5E5E5">stationary policies policies that do not</font>

363
00:19:15,590 --> 00:19:20,240
change<font color="#E5E5E5"> over time what you apply</font><font color="#CCCCCC"> today is</font>

364
00:19:20,240 --> 00:19:22,070
the same rule<font color="#CCCCCC"> that you'll</font><font color="#E5E5E5"> apply tomorrow</font>

365
00:19:22,070 --> 00:19:24,919
<font color="#E5E5E5">and the day</font><font color="#CCCCCC"> after tomorrow</font><font color="#E5E5E5"> basically</font>

366
00:19:24,919 --> 00:19:27,080
<font color="#E5E5E5">because you are</font><font color="#CCCCCC"> facing</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> tale</font>

367
00:19:27,080 --> 00:19:29,690
problem the<font color="#E5E5E5"> tale problem is from now to</font>

368
00:19:29,690 --> 00:19:32,360
infinity it doesn't become shorter at

369
00:19:32,360 --> 00:19:35,470
any with any<font color="#E5E5E5"> passing day as a result</font>

370
00:19:35,470 --> 00:19:38,779
<font color="#E5E5E5">policies turned out to be stationary</font><font color="#CCCCCC"> so</font>

371
00:19:38,779 --> 00:19:41,210
you have to remember<font color="#E5E5E5"> only one meal as</font>

372
00:19:41,210 --> 00:19:46,820
opposed to<font color="#E5E5E5"> a sequence of</font><font color="#CCCCCC"> memes also</font>

373
00:19:46,820 --> 00:19:48,230
there<font color="#E5E5E5"> are some interesting new</font>

374
00:19:48,230 --> 00:19:50,750
algorithms<font color="#E5E5E5"> that arise</font><font color="#CCCCCC"> in this infinite</font>

375
00:19:50,750 --> 00:19:53,899
<font color="#E5E5E5">tourism context and very often the</font>

376
00:19:53,899 --> 00:19:56,450
solution turns out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be more</font><font color="#E5E5E5"> elegant</font>

377
00:19:56,450 --> 00:19:59,750
<font color="#CCCCCC">and for the</font><font color="#E5E5E5"> mathematicians among you</font>

378
00:19:59,750 --> 00:20:01,880
<font color="#E5E5E5">there's much more interesting</font>

379
00:20:01,880 --> 00:20:04,220
mathematics in this area than there is

380
00:20:04,220 --> 00:20:08,090
for finite horizon problems also the

381
00:20:08,090 --> 00:20:10,010
<font color="#E5E5E5">theory of approximations is typically</font>

382
00:20:10,010 --> 00:20:11,899
developed for infinite horizon problems

383
00:20:11,899 --> 00:20:14,419
<font color="#E5E5E5">so that's an extra motivation for us to</font>

384
00:20:14,419 --> 00:20:17,350
focus<font color="#E5E5E5"> on infinite horizon</font>

385
00:20:20,030 --> 00:20:22,770
<font color="#CCCCCC">okay so we have gone from final Horizon</font>

386
00:20:22,770 --> 00:20:25,230
to infinity horizon<font color="#E5E5E5"> and now let's focus</font>

387
00:20:25,230 --> 00:20:27,870
<font color="#E5E5E5">on</font><font color="#CCCCCC"> discounted problems with bounded cost</font>

388
00:20:27,870 --> 00:20:30,210
<font color="#E5E5E5">this is the most well behaved</font><font color="#CCCCCC"> class of</font>

389
00:20:30,210 --> 00:20:32,370
infinite horizon problems<font color="#E5E5E5"> we have a</font>

390
00:20:32,370 --> 00:20:35,640
stationary system<font color="#E5E5E5"> notice no dependence</font>

391
00:20:35,640 --> 00:20:40,470
on<font color="#E5E5E5"> K XK and XK plus 1 and</font><font color="#CCCCCC"> XK</font><font color="#E5E5E5"> plus 2 they</font>

392
00:20:40,470 --> 00:20:42,630
all<font color="#E5E5E5"> live in the</font><font color="#CCCCCC"> same space everything</font>

393
00:20:42,630 --> 00:20:46,050
stationary here<font color="#CCCCCC"> wk also has the same</font>

394
00:20:46,050 --> 00:20:48,480
distribution for each<font color="#CCCCCC"> K</font><font color="#E5E5E5"> it's a</font>

395
00:20:48,480 --> 00:20:52,590
stationary system and the cost of<font color="#E5E5E5"> a</font>

396
00:20:52,590 --> 00:20:55,050
policy<font color="#E5E5E5"> which is a sequence of</font><font color="#CCCCCC"> functions</font>

397
00:20:55,050 --> 00:20:58,920
is obtained<font color="#E5E5E5"> like so it is the sum of the</font>

398
00:20:58,920 --> 00:21:03,120
discounted<font color="#E5E5E5"> cost from 0 to infinity</font>

399
00:21:03,120 --> 00:21:05,790
so for each<font color="#CCCCCC"> PI</font><font color="#E5E5E5"> you plug it in here you</font>

400
00:21:05,790 --> 00:21:09,150
<font color="#E5E5E5">get a random variable you average it you</font>

401
00:21:09,150 --> 00:21:11,100
get a number<font color="#E5E5E5"> and take the limit as n</font>

402
00:21:11,100 --> 00:21:13,950
goes<font color="#CCCCCC"> to infinity you get you get a</font>

403
00:21:13,950 --> 00:21:18,570
number again if G is bounded for some

404
00:21:18,570 --> 00:21:20,520
capital<font color="#CCCCCC"> when you assume that</font><font color="#E5E5E5"> G is</font>

405
00:21:20,520 --> 00:21:22,350
bounded for some<font color="#E5E5E5"> capital M we assume</font>

406
00:21:22,350 --> 00:21:25,410
that<font color="#E5E5E5"> the values of</font><font color="#CCCCCC"> the G</font><font color="#E5E5E5"> takes but</font><font color="#CCCCCC"> its</font>

407
00:21:25,410 --> 00:21:29,340
absolute<font color="#CCCCCC"> value is</font><font color="#E5E5E5"> bounded by M then it</font>

408
00:21:29,340 --> 00:21:31,980
<font color="#CCCCCC">is easy to verify</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> this quantity</font>

409
00:21:31,980 --> 00:21:34,920
<font color="#E5E5E5">here</font><font color="#CCCCCC"> is a real value function is</font><font color="#E5E5E5"> bounded</font>

410
00:21:34,920 --> 00:21:40,110
in fact and and and that's<font color="#E5E5E5"> the nice</font>

411
00:21:40,110 --> 00:21:42,240
<font color="#CCCCCC">thing about this</font><font color="#E5E5E5"> model the boundedness</font>

412
00:21:42,240 --> 00:21:45,180
of G guarantees at all costs<font color="#E5E5E5"> the course</font>

413
00:21:45,180 --> 00:21:47,190
of all the policies are bounded by<font color="#CCCCCC"> this</font>

414
00:21:47,190 --> 00:21:49,680
<font color="#CCCCCC">expression in</font><font color="#E5E5E5"> tract M is an upper bound</font>

415
00:21:49,680 --> 00:21:52,860
<font color="#E5E5E5">on G 1 over 1 minus a is the sum of a</font>

416
00:21:52,860 --> 00:21:58,560
geometric<font color="#CCCCCC"> progression the space is that</font>

417
00:21:58,560 --> 00:22:02,400
<font color="#E5E5E5">X and you live are arbitrary only the</font>

418
00:22:02,400 --> 00:22:07,590
boundedness of<font color="#E5E5E5"> G is important some of</font>

419
00:22:07,590 --> 00:22:10,520
you that may<font color="#CCCCCC"> have mathematical</font><font color="#E5E5E5"> interest</font>

420
00:22:10,520 --> 00:22:13,110
<font color="#E5E5E5">for continuous spaces there are some</font>

421
00:22:13,110 --> 00:22:15,810
<font color="#E5E5E5">that very fine mathematical points</font>

422
00:22:15,810 --> 00:22:18,060
<font color="#CCCCCC">having to do with measure theory but in</font>

423
00:22:18,060 --> 00:22:19,860
practice they<font color="#CCCCCC"> are not so important and</font>

424
00:22:19,860 --> 00:22:23,270
we're not going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> deal</font><font color="#CCCCCC"> with them</font>

425
00:22:23,990 --> 00:22:27,540
an important special<font color="#CCCCCC"> case is when all</font>

426
00:22:27,540 --> 00:22:31,470
the<font color="#E5E5E5"> spaces are finite</font><font color="#CCCCCC"> okay the finite</font>

427
00:22:31,470 --> 00:22:35,670
<font color="#CCCCCC">spaces case X takes only a finite</font><font color="#E5E5E5"> number</font>

428
00:22:35,670 --> 00:22:38,580
<font color="#E5E5E5">of values so the system is a Markov</font>

429
00:22:38,580 --> 00:22:41,640
chain<font color="#E5E5E5"> in a finite</font><font color="#CCCCCC"> state Markov chain so</font>

430
00:22:41,640 --> 00:22:43,050
finite<font color="#E5E5E5"> number of states and</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> move</font>

431
00:22:43,050 --> 00:22:45,050
<font color="#CCCCCC">randomly within</font><font color="#E5E5E5"> the states of that chain</font>

432
00:22:45,050 --> 00:22:47,790
<font color="#E5E5E5">the control takes also a finite</font><font color="#CCCCCC"> number</font>

433
00:22:47,790 --> 00:22:50,550
of<font color="#CCCCCC"> values and usually such a problem is</font>

434
00:22:50,550 --> 00:22:52,590
called<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Markovian decision problem or</font>

435
00:22:52,590 --> 00:22:53,550
<font color="#CCCCCC">MVP</font>

436
00:22:53,550 --> 00:22:56,640
some people use<font color="#E5E5E5"> MVPs the</font><font color="#CCCCCC"> name MVP for</font>

437
00:22:56,640 --> 00:22:58,830
arbitrary spaces<font color="#CCCCCC"> but they tend to</font>

438
00:22:58,830 --> 00:23:01,710
qualify it as much as infinite spaces

439
00:23:01,710 --> 00:23:04,590
and<font color="#E5E5E5"> repeat when I talk about MVP I mean</font>

440
00:23:04,590 --> 00:23:09,150
finite spaces<font color="#E5E5E5"> here if you want to solve</font>

441
00:23:09,150 --> 00:23:11,580
the<font color="#CCCCCC"> problem algorithmically</font><font color="#E5E5E5"> ultimately</font>

442
00:23:11,580 --> 00:23:13,920
you have<font color="#CCCCCC"> to work with a finite spaces</font>

443
00:23:13,920 --> 00:23:15,750
approximation<font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> discretize the</font>

444
00:23:15,750 --> 00:23:17,850
problem have discretized space space to

445
00:23:17,850 --> 00:23:20,220
<font color="#E5E5E5">control space and so</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> so in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> end</font>

446
00:23:20,220 --> 00:23:22,200
it's going to be a<font color="#E5E5E5"> finite space</font><font color="#CCCCCC"> SMD</font>

447
00:23:22,200 --> 00:23:24,720
<font color="#CCCCCC">field which is why this model is</font>

448
00:23:24,720 --> 00:23:26,880
important and people artificial

449
00:23:26,880 --> 00:23:31,290
intelligence almost<font color="#E5E5E5"> uniformly use finite</font>

450
00:23:31,290 --> 00:23:34,230
spaces<font color="#E5E5E5"> and DP as the starting</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> for</font>

451
00:23:34,230 --> 00:23:37,970
their analysis and<font color="#CCCCCC"> their algorithms</font>

452
00:23:40,539 --> 00:23:42,759
<font color="#E5E5E5">okay so this is the problem we are going</font>

453
00:23:42,759 --> 00:23:47,440
to consider first and the analysis of

454
00:23:47,440 --> 00:23:50,529
<font color="#E5E5E5">this</font><font color="#CCCCCC"> problem becomes very</font><font color="#E5E5E5"> complicated</font>

455
00:23:50,529 --> 00:23:54,129
<font color="#CCCCCC">because</font><font color="#E5E5E5"> of notation notation dynamic</font>

456
00:23:54,129 --> 00:23:55,690
<font color="#E5E5E5">programming is a bit of a curse</font>

457
00:23:55,690 --> 00:23:57,519
maybe<font color="#E5E5E5"> you should add it</font><font color="#CCCCCC"> to the curse of</font>

458
00:23:57,519 --> 00:23:59,320
dimensionality or the curse of<font color="#E5E5E5"> modeling</font>

459
00:23:59,320 --> 00:24:02,049
<font color="#E5E5E5">the curse of notation long expressions</font>

460
00:24:02,049 --> 00:24:07,719
which clutter your<font color="#CCCCCC"> clutter</font><font color="#E5E5E5"> be your</font>

461
00:24:07,719 --> 00:24:12,209
<font color="#E5E5E5">vision and there is a shorthand notation</font>

462
00:24:12,209 --> 00:24:18,789
which facilitates very much<font color="#CCCCCC"> the B both</font>

463
00:24:18,789 --> 00:24:21,399
the analysis in<font color="#E5E5E5"> the insight</font><font color="#CCCCCC"> that you get</font>

464
00:24:21,399 --> 00:24:25,509
into<font color="#CCCCCC"> problems</font><font color="#E5E5E5"> and it may be a little</font>

465
00:24:25,509 --> 00:24:27,579
<font color="#E5E5E5">challenge because it's abstract</font><font color="#CCCCCC"> but it's</font>

466
00:24:27,579 --> 00:24:30,849
really<font color="#E5E5E5"> very convenient</font><font color="#CCCCCC"> if you want to do</font>

467
00:24:30,849 --> 00:24:32,529
a short course<font color="#E5E5E5"> there's no other way to</font>

468
00:24:32,529 --> 00:24:34,779
do it<font color="#E5E5E5"> than to resort to some kind of</font>

469
00:24:34,779 --> 00:24:37,719
shorthand notation so let's<font color="#E5E5E5"> introduce</font>

470
00:24:37,719 --> 00:24:42,999
the shorthand notation<font color="#E5E5E5"> okay for any</font>

471
00:24:42,999 --> 00:24:45,579
<font color="#CCCCCC">function of</font><font color="#E5E5E5"> X remember we're looking</font><font color="#CCCCCC"> at</font>

472
00:24:45,579 --> 00:24:48,279
cost function any function of<font color="#E5E5E5"> X let's</font>

473
00:24:48,279 --> 00:24:50,949
consider the product of the dynamic

474
00:24:50,949 --> 00:24:53,739
programming<font color="#CCCCCC"> step starting with</font><font color="#E5E5E5"> this</font>

475
00:24:53,739 --> 00:24:56,859
function J<font color="#CCCCCC"> can you recognize</font><font color="#E5E5E5"> here the</font>

476
00:24:56,859 --> 00:24:59,019
current stage cost and the cost to<font color="#E5E5E5"> go</font>

477
00:24:59,019 --> 00:25:02,859
alpha<font color="#E5E5E5"> is the discount factor and many</font>

478
00:25:02,859 --> 00:25:06,249
more<font color="#CCCCCC"> plays</font><font color="#E5E5E5"> so TJ is another function so</font>

479
00:25:06,249 --> 00:25:09,489
beauty as a box you put J N and T

480
00:25:09,489 --> 00:25:11,649
produces is an operator that produces

481
00:25:11,649 --> 00:25:15,789
another function TJ and<font color="#CCCCCC"> its values are</font>

482
00:25:15,789 --> 00:25:18,489
given<font color="#E5E5E5"> by this expression more concretely</font>

483
00:25:18,489 --> 00:25:21,669
TJ is the optimal cost function for<font color="#CCCCCC"> a</font>

484
00:25:21,669 --> 00:25:24,579
<font color="#CCCCCC">one-stage problem with stage cost g +</font>

485
00:25:24,579 --> 00:25:29,489
<font color="#E5E5E5">terminal cost function alpha</font><font color="#CCCCCC"> j</font>

486
00:25:30,260 --> 00:25:33,350
now for discounted problems<font color="#CCCCCC"> she operates</font>

487
00:25:33,350 --> 00:25:35,210
on bounded functions to produce<font color="#E5E5E5"> other</font>

488
00:25:35,210 --> 00:25:41,090
bounded functions<font color="#E5E5E5"> okay and we can</font>

489
00:25:41,090 --> 00:25:44,780
introduce a similar mapping for any

490
00:25:44,780 --> 00:25:47,179
stationary policy<font color="#CCCCCC"> remember a stationary</font>

491
00:25:47,179 --> 00:25:49,040
policy is one that does not<font color="#CCCCCC"> depend</font><font color="#E5E5E5"> on</font>

492
00:25:49,040 --> 00:25:52,570
time<font color="#E5E5E5"> you plug it in here in place</font><font color="#CCCCCC"> of you</font>

493
00:25:52,570 --> 00:25:56,450
<font color="#CCCCCC">and you get another black box that</font>

494
00:25:56,450 --> 00:26:00,320
generates from given a function J it

495
00:26:00,320 --> 00:26:03,470
generates another function<font color="#CCCCCC"> team use of J</font>

496
00:26:03,470 --> 00:26:08,690
<font color="#E5E5E5">by means of this formula now the key</font>

497
00:26:08,690 --> 00:26:11,390
point<font color="#E5E5E5"> is that the details of the problem</font>

498
00:26:11,390 --> 00:26:14,419
<font color="#CCCCCC">do</font><font color="#E5E5E5"> not really matter what really matters</font>

499
00:26:14,419 --> 00:26:16,910
is the<font color="#E5E5E5"> structure</font><font color="#CCCCCC"> of the map</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> stee and</font>

500
00:26:16,910 --> 00:26:19,220
<font color="#CCCCCC">comune</font><font color="#E5E5E5"> the dynamic programming mapping</font>

501
00:26:19,220 --> 00:26:22,220
all the<font color="#E5E5E5"> interesting structure from a</font>

502
00:26:22,220 --> 00:26:23,780
theoretical point of view<font color="#E5E5E5"> in an</font>

503
00:26:23,780 --> 00:26:25,790
algorithmic point of view all the

504
00:26:25,790 --> 00:26:28,160
interesting structure of the problem<font color="#E5E5E5"> is</font>

505
00:26:28,160 --> 00:26:32,870
captured by<font color="#E5E5E5"> T and</font><font color="#CCCCCC"> T mu and the entire</font>

506
00:26:32,870 --> 00:26:35,090
theory<font color="#CCCCCC"> of discounted problems can be</font>

507
00:26:35,090 --> 00:26:37,669
developed<font color="#E5E5E5"> in shorthand</font><font color="#CCCCCC"> instead of</font>

508
00:26:37,669 --> 00:26:40,429
<font color="#E5E5E5">spending like 15 pages you can do it in</font>

509
00:26:40,429 --> 00:26:45,140
three slides<font color="#CCCCCC"> or four</font><font color="#E5E5E5"> slides maybe four</font>

510
00:26:45,140 --> 00:26:46,940
this is important to get used<font color="#E5E5E5"> to this</font>

511
00:26:46,940 --> 00:26:49,640
<font color="#CCCCCC">idea of a black box operator that takes</font>

512
00:26:49,640 --> 00:26:53,780
<font color="#E5E5E5">J's and produces T news of J's or</font><font color="#CCCCCC"> PC but</font>

513
00:26:53,780 --> 00:26:55,400
<font color="#E5E5E5">actually it's</font><font color="#CCCCCC"> not so</font><font color="#E5E5E5"> hard because this</font>

514
00:26:55,400 --> 00:26:57,470
is<font color="#E5E5E5"> really the operator</font><font color="#CCCCCC"> of the dynamic</font>

515
00:26:57,470 --> 00:26:59,990
<font color="#E5E5E5">programming algorithm that's about goes</font>

516
00:26:59,990 --> 00:27:02,860
backwards<font color="#E5E5E5"> using this operator</font><font color="#CCCCCC"> many times</font>

517
00:27:02,860 --> 00:27:06,320
so<font color="#CCCCCC"> TNT new provide a powerful unifying</font>

518
00:27:06,320 --> 00:27:08,900
framework for dynamic programming<font color="#CCCCCC"> and</font>

519
00:27:08,900 --> 00:27:10,790
this<font color="#E5E5E5"> is the essence of this book but</font>

520
00:27:10,790 --> 00:27:12,740
listed in<font color="#CCCCCC"> your list of reference to</font><font color="#E5E5E5"> the</font>

521
00:27:12,740 --> 00:27:14,600
abstract dynamic programming book that I

522
00:27:14,600 --> 00:27:18,200
wrote last year instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> focusing on</font>

523
00:27:18,200 --> 00:27:20,780
specific problems<font color="#CCCCCC"> focusing on properties</font>

524
00:27:20,780 --> 00:27:23,419
of<font color="#E5E5E5"> T</font><font color="#CCCCCC"> and T new that give you</font><font color="#E5E5E5"> the basic</font>

525
00:27:23,419 --> 00:27:27,950
theory now we are going<font color="#E5E5E5"> to use this</font>

526
00:27:27,950 --> 00:27:29,929
abstract notation<font color="#E5E5E5"> to develop the theory</font>

527
00:27:29,929 --> 00:27:32,799
<font color="#CCCCCC">of infinite horizon</font><font color="#E5E5E5"> discounted problems</font>

528
00:27:32,799 --> 00:27:35,840
but let's see how<font color="#E5E5E5"> you can use it for</font>

529
00:27:35,840 --> 00:27:36,740
final<font color="#CCCCCC"> quarter</font>

530
00:27:36,740 --> 00:27:44,660
produce okay so let's<font color="#CCCCCC"> consider an</font><font color="#E5E5E5"> end</font>

531
00:27:44,660 --> 00:27:49,630
<font color="#E5E5E5">stage policy with terminal cost</font><font color="#CCCCCC"> J and</font>

532
00:27:49,630 --> 00:27:53,360
discounted cost per stage<font color="#E5E5E5"> okay so the</font>

533
00:27:53,360 --> 00:27:56,270
cost here of this policy starting at<font color="#CCCCCC"> X 0</font>

534
00:27:56,270 --> 00:28:00,590
<font color="#E5E5E5">is the cost of the end stages discounted</font>

535
00:28:00,590 --> 00:28:02,929
<font color="#E5E5E5">plus a terminal</font><font color="#CCCCCC"> cause that's also</font>

536
00:28:02,929 --> 00:28:06,920
<font color="#E5E5E5">discounted by alpha now you can write</font>

537
00:28:06,920 --> 00:28:11,140
this<font color="#CCCCCC"> as</font><font color="#E5E5E5"> okay take the first stage cost</font>

538
00:28:11,140 --> 00:28:14,870
<font color="#CCCCCC">so take</font><font color="#E5E5E5"> it out of here and then take a</font>

539
00:28:14,870 --> 00:28:17,390
common factor alpha<font color="#CCCCCC"> and then what you</font>

540
00:28:17,390 --> 00:28:20,420
have is<font color="#CCCCCC"> that this can be written as the</font>

541
00:28:20,420 --> 00:28:23,000
cost<font color="#E5E5E5"> of the first stage plus the cost of</font>

542
00:28:23,000 --> 00:28:29,590
<font color="#CCCCCC">the remaining</font><font color="#E5E5E5"> stages so using our our</font>

543
00:28:29,590 --> 00:28:35,330
notation<font color="#E5E5E5"> 14 you this this is this is</font>

544
00:28:35,330 --> 00:28:36,679
<font color="#CCCCCC">obtained by applying</font>

545
00:28:36,679 --> 00:28:43,429
<font color="#CCCCCC">tinu 0 to take by ones of 10 where PI 1</font>

546
00:28:43,429 --> 00:28:46,130
is the tail policy<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is really</font>

547
00:28:46,130 --> 00:28:47,300
expression<font color="#CCCCCC"> to the principle of</font>

548
00:28:47,300 --> 00:28:50,780
optimality<font color="#CCCCCC"> the original problem can be</font>

549
00:28:50,780 --> 00:28:54,950
obtained by<font color="#E5E5E5"> from the cost of the tail</font>

550
00:28:54,950 --> 00:28:58,070
problem of one stage less by applying

551
00:28:58,070 --> 00:29:02,090
this in<font color="#CCCCCC"> new 0 operator</font><font color="#E5E5E5"> and if you take</font>

552
00:29:02,090 --> 00:29:05,600
this and apply successfully<font color="#E5E5E5"> n times you</font>

553
00:29:05,600 --> 00:29:07,760
<font color="#E5E5E5">come up</font><font color="#CCCCCC"> with an expression</font><font color="#E5E5E5"> of the cost</font>

554
00:29:07,760 --> 00:29:10,850
<font color="#E5E5E5">of any policy that's very succinct very</font>

555
00:29:10,850 --> 00:29:13,520
compact<font color="#E5E5E5"> you start with J the terminal</font>

556
00:29:13,520 --> 00:29:15,800
cost this<font color="#E5E5E5"> is the first step of the</font>

557
00:29:15,800 --> 00:29:17,929
dynamic<font color="#CCCCCC"> programming algorithm the second</font>

558
00:29:17,929 --> 00:29:20,420
step operates on whatever you get from

559
00:29:20,420 --> 00:29:22,820
<font color="#CCCCCC">the first</font><font color="#E5E5E5"> step in going forward</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the</font>

560
00:29:22,820 --> 00:29:27,309
<font color="#E5E5E5">way to the initial State</font>

561
00:29:29,560 --> 00:29:31,840
if you have a stationary policy as

562
00:29:31,840 --> 00:29:34,480
opposed to<font color="#E5E5E5"> a</font><font color="#CCCCCC"> time-varying</font><font color="#E5E5E5"> policy then</font>

563
00:29:34,480 --> 00:29:36,910
this<font color="#CCCCCC"> expression simplifies further it</font>

564
00:29:36,910 --> 00:29:39,840
can be written in<font color="#E5E5E5"> this very compact form</font>

565
00:29:39,840 --> 00:29:43,630
starting with<font color="#E5E5E5"> J apply n times the</font>

566
00:29:43,630 --> 00:29:46,740
composition of n times of this operation

567
00:29:46,740 --> 00:29:50,290
<font color="#E5E5E5">and get the cost of the stationary</font>

568
00:29:50,290 --> 00:29:56,320
<font color="#E5E5E5">policy over n stages so this is</font><font color="#CCCCCC"> T nu</font><font color="#E5E5E5"> T</font>

569
00:29:56,320 --> 00:29:59,170
nu square<font color="#CCCCCC"> Tim</font><font color="#E5E5E5"> youth to the cubed power</font>

570
00:29:59,170 --> 00:30:01,450
<font color="#E5E5E5">to the end</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> n fold convolution</font><font color="#E5E5E5"> of</font>

571
00:30:01,450 --> 00:30:05,650
<font color="#CCCCCC">T new the composition continue and</font>

572
00:30:05,650 --> 00:30:07,900
similarly the optimal<font color="#E5E5E5"> end stage cost</font>

573
00:30:07,900 --> 00:30:11,350
function is T to<font color="#E5E5E5"> the end</font><font color="#CCCCCC"> t is the</font>

574
00:30:11,350 --> 00:30:14,620
minimization operation and you have this

575
00:30:14,620 --> 00:30:16,600
formula<font color="#E5E5E5"> which is just the dynamic</font>

576
00:30:16,600 --> 00:30:19,540
programming<font color="#E5E5E5"> algorithm</font><font color="#CCCCCC"> Anik program now</font>

577
00:30:19,540 --> 00:30:20,920
<font color="#CCCCCC">it can</font><font color="#E5E5E5"> be written in this short</font>

578
00:30:20,920 --> 00:30:24,820
expression n minus<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> tail problem</font>

579
00:30:24,820 --> 00:30:28,360
optimal cost<font color="#CCCCCC"> is used to obtain the</font><font color="#E5E5E5"> end</font>

580
00:30:28,360 --> 00:30:31,590
stages<font color="#E5E5E5"> tail problem course by applying</font>

581
00:30:31,590 --> 00:30:35,520
<font color="#CCCCCC">dynamic</font><font color="#E5E5E5"> programming mapping</font>

582
00:30:38,630 --> 00:30:43,580
<font color="#E5E5E5">okay just to take you back</font>

583
00:30:43,580 --> 00:30:46,130
<font color="#CCCCCC">tea involves the minimization</font><font color="#E5E5E5"> team you</font>

584
00:30:46,130 --> 00:30:49,690
involves just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> poly senior</font>

585
00:30:52,280 --> 00:30:57,160
<font color="#E5E5E5">okay so this map is give you a succinct</font>

586
00:30:57,160 --> 00:30:59,930
<font color="#E5E5E5">expression a succinct form of the finite</font>

587
00:30:59,930 --> 00:31:02,270
correlation theory and now we are going

588
00:31:02,270 --> 00:31:05,570
<font color="#E5E5E5">to use it to express the entire theory</font>

589
00:31:05,570 --> 00:31:08,660
of infinite horizon discounted problems

590
00:31:08,660 --> 00:31:14,030
in one slide we're talking<font color="#CCCCCC"> about the</font>

591
00:31:14,030 --> 00:31:17,120
infinite horizon problem<font color="#E5E5E5"> for any policy</font>

592
00:31:17,120 --> 00:31:21,830
<font color="#CCCCCC">PI</font><font color="#E5E5E5"> the the cost of that policy starting</font>

593
00:31:21,830 --> 00:31:25,460
from state<font color="#CCCCCC"> X is obtained by taking</font><font color="#E5E5E5"> the</font>

594
00:31:25,460 --> 00:31:28,580
limit<font color="#E5E5E5"> of the finite horizon</font><font color="#CCCCCC"> cost</font><font color="#E5E5E5"> which</font>

595
00:31:28,580 --> 00:31:31,760
is<font color="#E5E5E5"> given by</font><font color="#CCCCCC"> this expression and for</font><font color="#E5E5E5"> a</font>

596
00:31:31,760 --> 00:31:34,220
stationary policy<font color="#E5E5E5"> you have even</font>

597
00:31:34,220 --> 00:31:37,070
<font color="#E5E5E5">something it's even simpler and j0 now</font>

598
00:31:37,070 --> 00:31:39,410
<font color="#CCCCCC">is</font><font color="#E5E5E5"> zero okay the terminal cost is zero</font>

599
00:31:39,410 --> 00:31:41,180
for<font color="#CCCCCC"> the event horizon problem we</font><font color="#E5E5E5"> don't</font>

600
00:31:41,180 --> 00:31:43,330
have

601
00:31:47,660 --> 00:31:51,110
now the optimal cost function satisfies

602
00:31:51,110 --> 00:31:53,060
a fundamental equation for infinite

603
00:31:53,060 --> 00:31:55,100
correlation problems in this fundamental

604
00:31:55,100 --> 00:31:58,100
<font color="#E5E5E5">equation is precisely this J star is the</font>

605
00:31:58,100 --> 00:32:01,280
optimal cost<font color="#E5E5E5"> and it is a fixed point of</font>

606
00:32:01,280 --> 00:32:05,600
<font color="#E5E5E5">this mapping T</font><font color="#CCCCCC"> okay in other words if</font>

607
00:32:05,600 --> 00:32:09,110
you plug in<font color="#E5E5E5"> J star within T you get back</font>

608
00:32:09,110 --> 00:32:14,240
<font color="#E5E5E5">J star moreover for every policy</font><font color="#CCCCCC"> mu</font>

609
00:32:14,240 --> 00:32:18,650
again you have<font color="#E5E5E5"> balanced equation J nu is</font>

610
00:32:18,650 --> 00:32:21,110
the<font color="#E5E5E5"> solution of this equation</font>

611
00:32:21,110 --> 00:32:22,760
in fact turns out to be the unique

612
00:32:22,760 --> 00:32:25,720
solution of this equation

613
00:32:28,840 --> 00:32:31,130
another<font color="#CCCCCC"> result has to do with the</font>

614
00:32:31,130 --> 00:32:34,370
optimality condition<font color="#CCCCCC"> a</font><font color="#E5E5E5"> policy a</font>

615
00:32:34,370 --> 00:32:37,670
stationary policy<font color="#E5E5E5"> is optimal if and only</font>

616
00:32:37,670 --> 00:32:41,060
if it attains the minimum<font color="#E5E5E5"> on this</font>

617
00:32:41,060 --> 00:32:45,020
bellman<font color="#E5E5E5"> equation the seer may have a</font>

618
00:32:45,020 --> 00:32:47,650
<font color="#E5E5E5">better slide</font>

619
00:32:49,540 --> 00:32:53,370
<font color="#E5E5E5">okay okay</font>

620
00:32:56,230 --> 00:32:58,749
there's an<font color="#CCCCCC"> algorithm called value</font>

621
00:32:58,749 --> 00:33:01,749
iteration<font color="#E5E5E5"> value iteration is simply the</font>

622
00:33:01,749 --> 00:33:04,210
dynamic<font color="#E5E5E5"> programming algorithm</font><font color="#CCCCCC"> applied an</font>

623
00:33:04,210 --> 00:33:05,769
infinite<font color="#CCCCCC"> number of times</font>

624
00:33:05,769 --> 00:33:11,200
starting with heavy<font color="#E5E5E5"> J compute apply</font>

625
00:33:11,200 --> 00:33:14,619
dynamic programming once twice many

626
00:33:14,619 --> 00:33:17,889
times and take<font color="#CCCCCC"> HK to go to</font><font color="#E5E5E5"> infinity and</font>

627
00:33:17,889 --> 00:33:21,149
then you get the optimal<font color="#E5E5E5"> cross function</font>

628
00:33:21,149 --> 00:33:23,679
another<font color="#E5E5E5"> way to say this</font><font color="#CCCCCC"> is that the</font>

629
00:33:23,679 --> 00:33:27,580
<font color="#E5E5E5">limit of the optimal finite horizon cost</font>

630
00:33:27,580 --> 00:33:32,919
is the optimal infinite horizon cost and

631
00:33:32,919 --> 00:33:34,809
the<font color="#CCCCCC"> other major algorithm is the so</font>

632
00:33:34,809 --> 00:33:38,909
<font color="#CCCCCC">called policy duration algorithm given</font><font color="#E5E5E5"> a</font>

633
00:33:38,909 --> 00:33:44,169
stationary policy<font color="#E5E5E5"> new K find the cost of</font>

634
00:33:44,169 --> 00:33:47,999
that policy<font color="#CCCCCC"> by</font><font color="#E5E5E5"> solving this equation</font>

635
00:33:47,999 --> 00:33:52,269
then you<font color="#CCCCCC"> do a policy improvement</font><font color="#E5E5E5"> five</font>

636
00:33:52,269 --> 00:33:56,379
<font color="#E5E5E5">new J plus 1 such that new k plus 1</font>

637
00:33:56,379 --> 00:33:58,809
attains the minimum in the minimization

638
00:33:58,809 --> 00:34:02,739
operation involved here and so from<font color="#CCCCCC"> UK</font>

639
00:34:02,739 --> 00:34:05,230
<font color="#E5E5E5">you get new</font><font color="#CCCCCC"> K plus 1 mu K plus 2 and so</font>

640
00:34:05,230 --> 00:34:08,739
<font color="#CCCCCC">on</font><font color="#E5E5E5"> and it's a basic algorithm that has</font>

641
00:34:08,739 --> 00:34:10,869
the property that it<font color="#E5E5E5"> converges</font><font color="#CCCCCC"> to the</font>

642
00:34:10,869 --> 00:34:13,449
optimal policy these are the two major

643
00:34:13,449 --> 00:34:15,460
algorithms these are the two major

644
00:34:15,460 --> 00:34:18,069
results<font color="#CCCCCC"> I haven't proved any of those so</font>

645
00:34:18,069 --> 00:34:21,849
far but<font color="#E5E5E5"> I'm I want to tell you that with</font>

646
00:34:21,849 --> 00:34:25,089
<font color="#E5E5E5">shorthand notation you have it all in</font>

647
00:34:25,089 --> 00:34:27,540
<font color="#CCCCCC">one page</font>

648
00:34:34,060 --> 00:34:37,449
<font color="#E5E5E5">okay so maybe we can take a little break</font>

649
00:34:37,449 --> 00:34:41,409
<font color="#CCCCCC">now</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then I'm going to go into into</font>

650
00:34:41,409 --> 00:34:44,620
how we<font color="#E5E5E5"> address these results and what we</font>

651
00:34:44,620 --> 00:34:48,550
get what<font color="#CCCCCC"> we get</font><font color="#E5E5E5"> from the theory are</font><font color="#CCCCCC"> they</font>

652
00:34:48,550 --> 00:34:51,030
<font color="#CCCCCC">questions</font>

653
00:34:57,100 --> 00:35:00,690
<font color="#E5E5E5">is there any patient</font>

654
00:35:08,200 --> 00:35:11,140
for the<font color="#CCCCCC"> polish</font><font color="#E5E5E5"> duration algorithm under</font>

655
00:35:11,140 --> 00:35:13,480
<font color="#CCCCCC">what</font><font color="#E5E5E5"> conditions it is valid is like a</font>

656
00:35:13,480 --> 00:35:15,780
question

657
00:35:20,100 --> 00:35:24,310
the initial policy<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be arbitrary</font><font color="#E5E5E5"> any</font>

658
00:35:24,310 --> 00:35:26,020
policy will<font color="#CCCCCC"> be sufficient</font>

659
00:35:26,020 --> 00:35:31,620
within this discounted problem<font color="#E5E5E5"> context</font>

660
00:35:31,620 --> 00:35:34,540
any policy yes and you<font color="#CCCCCC"> get</font><font color="#E5E5E5"> convergence</font>

661
00:35:34,540 --> 00:35:36,610
<font color="#E5E5E5">in a finite number of steps</font><font color="#CCCCCC"> here of</font>

662
00:35:36,610 --> 00:35:40,890
course<font color="#CCCCCC"> we</font><font color="#E5E5E5"> remember</font><font color="#CCCCCC"> discounted problems</font>

663
00:35:41,400 --> 00:35:43,810
finite<font color="#CCCCCC"> spaces discard the problems</font>

664
00:35:43,810 --> 00:35:46,840
that's what I'm talking about<font color="#CCCCCC"> for finite</font>

665
00:35:46,840 --> 00:35:49,270
space is discounted problems<font color="#CCCCCC"> it's a</font>

666
00:35:49,270 --> 00:35:50,950
finite<font color="#E5E5E5"> number of states</font><font color="#CCCCCC"> fine number of</font>

667
00:35:50,950 --> 00:35:52,570
controls to<font color="#E5E5E5"> find a number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> policies</font>

668
00:35:52,570 --> 00:35:56,590
stationary policies so you terminate in

669
00:35:56,590 --> 00:35:59,580
<font color="#CCCCCC">a finite number of</font><font color="#E5E5E5"> steps</font>

670
00:36:02,170 --> 00:36:20,710
yes<font color="#CCCCCC"> okay what happens well those are all</font>

671
00:36:20,710 --> 00:36:22,900
<font color="#CCCCCC">outfit into this</font><font color="#E5E5E5"> it turns out that the</font>

672
00:36:22,900 --> 00:36:25,180
<font color="#E5E5E5">rollout is simply one iteration of this</font>

673
00:36:25,180 --> 00:36:27,849
<font color="#CCCCCC">algorithm you start with a base</font><font color="#E5E5E5"> for this</font>

674
00:36:27,849 --> 00:36:30,400
<font color="#E5E5E5">some heuristic and through this policy</font>

675
00:36:30,400 --> 00:36:32,230
evaluation and improvement you get a

676
00:36:32,230 --> 00:36:35,140
rollout policy<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so your question has</font>

677
00:36:35,140 --> 00:36:37,329
to do with<font color="#E5E5E5"> error bounds unfortunately</font>

678
00:36:37,329 --> 00:36:38,859
there is<font color="#E5E5E5"> very little in the way</font><font color="#CCCCCC"> of error</font>

679
00:36:38,859 --> 00:36:41,380
bounds<font color="#E5E5E5"> all you really have is that the</font>

680
00:36:41,380 --> 00:36:44,579
base policy the rollout policy is better

681
00:36:44,579 --> 00:36:48,250
<font color="#E5E5E5">okay is upper bounded</font><font color="#CCCCCC"> by the cost of the</font>

682
00:36:48,250 --> 00:36:52,180
<font color="#E5E5E5">of the base policy and it's very</font>

683
00:36:52,180 --> 00:36:54,910
difficult<font color="#CCCCCC"> except in some special cases</font>

684
00:36:54,910 --> 00:36:58,089
people<font color="#E5E5E5"> have been this recent research in</font>

685
00:36:58,089 --> 00:37:00,819
specific types<font color="#E5E5E5"> of problems like knapsack</font>

686
00:37:00,819 --> 00:37:03,940
type problems or<font color="#E5E5E5"> other problems of you</font>

687
00:37:03,940 --> 00:37:06,519
know specialized problems where people

688
00:37:06,519 --> 00:37:08,859
<font color="#CCCCCC">have been able to obtain bounds</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> the</font>

689
00:37:08,859 --> 00:37:11,109
performance of rolla<font color="#CCCCCC"> but in general</font>

690
00:37:11,109 --> 00:37:16,329
there is<font color="#E5E5E5"> no result</font><font color="#CCCCCC"> it's the claim to</font>

691
00:37:16,329 --> 00:37:18,670
success is based entirely on

692
00:37:18,670 --> 00:37:22,200
experimental evidence here

693
00:37:23,860 --> 00:37:28,150
<font color="#E5E5E5">one</font><font color="#CCCCCC"> predicted control</font><font color="#E5E5E5"> well okay</font><font color="#CCCCCC"> I</font>

694
00:37:28,150 --> 00:37:30,940
mentioned<font color="#E5E5E5"> earlier the the result that</font>

695
00:37:30,940 --> 00:37:35,490
the rollout policy is<font color="#E5E5E5"> better than the</font>

696
00:37:35,490 --> 00:37:39,430
base policy in model predictive control

697
00:37:39,430 --> 00:37:42,490
<font color="#E5E5E5">this results translates the following if</font>

698
00:37:42,490 --> 00:37:46,120
you start with<font color="#CCCCCC"> a stable policy</font><font color="#E5E5E5"> you're</font>

699
00:37:46,120 --> 00:37:48,640
going to get by<font color="#E5E5E5"> NPC you're going to get</font>

700
00:37:48,640 --> 00:37:52,840
<font color="#E5E5E5">hey also another stable policy and</font>

701
00:37:52,840 --> 00:37:56,410
that's that's<font color="#E5E5E5"> not very much but but but</font>

702
00:37:56,410 --> 00:37:58,870
<font color="#E5E5E5">still is important because it</font><font color="#CCCCCC"> provides a</font>

703
00:37:58,870 --> 00:38:01,780
guarantee of stability<font color="#CCCCCC"> of the what you</font>

704
00:38:01,780 --> 00:38:05,260
get<font color="#CCCCCC"> Randy's this of course under some</font>

705
00:38:05,260 --> 00:38:07,960
assumptions<font color="#E5E5E5"> people have been using</font><font color="#CCCCCC"> MPC</font>

706
00:38:07,960 --> 00:38:09,190
in other<font color="#E5E5E5"> contexts but there are no</font>

707
00:38:09,190 --> 00:38:12,090
guarantees<font color="#CCCCCC"> at all</font>

708
00:38:27,660 --> 00:38:30,160
yeah if you do<font color="#CCCCCC"> multiple</font><font color="#E5E5E5"> rollout and</font>

709
00:38:30,160 --> 00:38:31,890
you'll be doing this policy direction

710
00:38:31,890 --> 00:38:37,720
but all<font color="#E5E5E5"> out is just one step of this but</font>

711
00:38:37,720 --> 00:38:39,940
it's<font color="#E5E5E5"> not so easy</font><font color="#CCCCCC"> to do this by</font>

712
00:38:39,940 --> 00:38:41,860
<font color="#E5E5E5">simulation at least in the traction</font><font color="#CCCCCC"> that</font>

713
00:38:41,860 --> 00:38:44,500
people use<font color="#E5E5E5"> rollout</font><font color="#CCCCCC"> no two states are</font>

714
00:38:44,500 --> 00:38:46,180
allowed is computationally very

715
00:38:46,180 --> 00:39:04,420
intensive<font color="#E5E5E5"> yes yes if you could do it but</font>

716
00:39:04,420 --> 00:39:07,210
unfortunately<font color="#E5E5E5"> this policy evaluation has</font>

717
00:39:07,210 --> 00:39:08,530
to be done efficiently for<font color="#E5E5E5"> this</font>

718
00:39:08,530 --> 00:39:12,310
algorithm<font color="#CCCCCC"> to to be viable and</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> rollout</font>

719
00:39:12,310 --> 00:39:13,720
<font color="#E5E5E5">the policy evaluation is very</font>

720
00:39:13,720 --> 00:39:15,400
time-consuming<font color="#E5E5E5"> because</font><font color="#CCCCCC"> you do it</font><font color="#E5E5E5"> by</font>

721
00:39:15,400 --> 00:39:18,190
simulation<font color="#CCCCCC"> Monte</font><font color="#E5E5E5"> Carlo simulation so you</font>

722
00:39:18,190 --> 00:39:23,590
have to<font color="#CCCCCC"> - to roll Monte Carlo simulation</font>

723
00:39:23,590 --> 00:39:25,570
<font color="#CCCCCC">within</font><font color="#E5E5E5"> Monte</font><font color="#CCCCCC"> Carlo simulation and pretty</font>

724
00:39:25,570 --> 00:39:30,580
<font color="#E5E5E5">soon it becomes not viable but</font><font color="#CCCCCC"> if you</font>

725
00:39:30,580 --> 00:39:32,740
were to do it theoretically<font color="#E5E5E5"> would lead</font>

726
00:39:32,740 --> 00:39:35,670
to the object

727
00:39:37,120 --> 00:39:46,420
I wouldn't say that<font color="#E5E5E5"> value iteration</font><font color="#CCCCCC"> does</font>

728
00:39:46,420 --> 00:39:50,950
not use policies<font color="#E5E5E5"> okay it applies a</font>

729
00:39:50,950 --> 00:39:54,790
minimization operation does<font color="#E5E5E5"> not use any</font>

730
00:39:54,790 --> 00:39:57,070
policy evaluation nor does it compute

731
00:39:57,070 --> 00:40:15,280
intermediate policies yes okay let me

732
00:40:15,280 --> 00:40:17,620
take<font color="#E5E5E5"> you back to to this slide</font><font color="#CCCCCC"> and roll</font>

733
00:40:17,620 --> 00:40:22,750
<font color="#CCCCCC">out okay</font>

734
00:40:22,750 --> 00:40:25,990
in<font color="#CCCCCC"> rollout we have some base policy some</font>

735
00:40:25,990 --> 00:40:28,420
heuristic and we simulate it in order<font color="#CCCCCC"> to</font>

736
00:40:28,420 --> 00:40:31,810
calculate this expression<font color="#E5E5E5"> here so each</font>

737
00:40:31,810 --> 00:40:33,310
<font color="#E5E5E5">time</font><font color="#CCCCCC"> we need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> calculate this</font>

738
00:40:33,310 --> 00:40:37,060
expression for a given value of<font color="#CCCCCC"> FK and</font>

739
00:40:37,060 --> 00:40:39,370
so on<font color="#CCCCCC"> for given value of next state from</font>

740
00:40:39,370 --> 00:40:43,510
<font color="#CCCCCC">that state</font><font color="#E5E5E5"> we simulate the the the base</font>

741
00:40:43,510 --> 00:40:46,930
policy many many times<font color="#E5E5E5"> and then we take</font>

742
00:40:46,930 --> 00:40:50,020
the expected<font color="#CCCCCC"> value of</font><font color="#E5E5E5"> that that's that</font>

743
00:40:50,020 --> 00:40:53,110
<font color="#E5E5E5">it's very simple</font><font color="#CCCCCC"> just you</font><font color="#E5E5E5"> have a random</font>

744
00:40:53,110 --> 00:40:55,480
<font color="#CCCCCC">number generator calculate a lot of</font>

745
00:40:55,480 --> 00:40:58,870
<font color="#CCCCCC">Monte Carlo</font><font color="#E5E5E5"> trajectories starting from</font>

746
00:40:58,870 --> 00:41:01,960
this and you get<font color="#E5E5E5"> a number that's</font><font color="#CCCCCC"> the</font>

747
00:41:01,960 --> 00:41:03,100
<font color="#CCCCCC">number that</font><font color="#E5E5E5"> you plug</font><font color="#CCCCCC"> in to this</font>

748
00:41:03,100 --> 00:41:06,010
<font color="#E5E5E5">algorithm but you have to do it for</font>

749
00:41:06,010 --> 00:41:09,010
every possible value<font color="#E5E5E5"> of U okay for every</font>

750
00:41:09,010 --> 00:41:10,630
<font color="#CCCCCC">possible here for every possible</font><font color="#E5E5E5"> value</font>

751
00:41:10,630 --> 00:41:16,680
of<font color="#E5E5E5"> U and so that's a lot of</font><font color="#CCCCCC"> computation</font>

752
00:41:16,700 --> 00:41:19,050
<font color="#CCCCCC">ok let's take a break because</font><font color="#E5E5E5"> we're</font>

753
00:41:19,050 --> 00:41:22,770
running<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> late</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm going to</font>

754
00:41:22,770 --> 00:41:26,130
get into<font color="#E5E5E5"> I want you to take if you could</font>

755
00:41:26,130 --> 00:41:28,290
use the break<font color="#E5E5E5"> to eyeball these two</font>

756
00:41:28,290 --> 00:41:31,170
expressions here<font color="#E5E5E5"> and because they are</font>

757
00:41:31,170 --> 00:41:33,420
<font color="#E5E5E5">going to figure importantly in the in</font>

758
00:41:33,420 --> 00:41:36,080
the<font color="#E5E5E5"> next few slides</font>

759
00:41:42,150 --> 00:41:46,009
seven<font color="#CCCCCC"> minutes please</font><font color="#E5E5E5"> okay</font>

760
00:41:53,860 --> 00:00:00,000
[Music]

