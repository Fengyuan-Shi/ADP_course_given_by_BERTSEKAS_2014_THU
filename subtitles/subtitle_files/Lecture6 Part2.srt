1
00:00:37,079 --> 00:00:43,110
so okay<font color="#CCCCCC"> so as we</font><font color="#E5E5E5"> want to go</font><font color="#CCCCCC"> through the</font>

2
00:00:43,110 --> 00:00:45,170
subject<font color="#CCCCCC"> of adaptive control control of</font>

3
00:00:45,170 --> 00:00:48,180
dynamic systems with unknown<font color="#E5E5E5"> dynamics</font>

4
00:00:48,180 --> 00:00:49,860
and<font color="#E5E5E5"> used to learning</font><font color="#CCCCCC"> for that purpose</font>

5
00:00:49,860 --> 00:00:54,680
<font color="#E5E5E5">let me review this slide we want to do</font>

6
00:00:54,680 --> 00:00:59,010
<font color="#E5E5E5">approximate policy iteration for two</font>

7
00:00:59,010 --> 00:01:02,760
factors where policy evaluation is<font color="#CCCCCC"> done</font>

8
00:01:02,760 --> 00:01:05,670
by solving the by minimizing the<font color="#CCCCCC"> squared</font>

9
00:01:05,670 --> 00:01:09,080
error<font color="#E5E5E5"> in satisfying the bellman equation</font>

10
00:01:09,080 --> 00:01:12,539
<font color="#CCCCCC">and so this is the</font><font color="#E5E5E5"> mapping associated</font>

11
00:01:12,539 --> 00:01:16,020
with<font color="#E5E5E5"> mu and use a Euclidean norm circle</font>

12
00:01:16,020 --> 00:01:18,600
<font color="#CCCCCC">to some distribution</font><font color="#E5E5E5"> and now we focus on</font>

13
00:01:18,600 --> 00:01:20,729
deterministic systems<font color="#E5E5E5"> while we consider</font>

14
00:01:20,729 --> 00:01:23,880
samples of state and<font color="#E5E5E5"> control because the</font>

15
00:01:23,880 --> 00:01:25,560
system is deterministic<font color="#E5E5E5"> the next state</font>

16
00:01:25,560 --> 00:01:28,440
is completely<font color="#CCCCCC"> determined and then the</font>

17
00:01:28,440 --> 00:01:32,940
<font color="#E5E5E5">transition is to a Q factor involving</font>

18
00:01:32,940 --> 00:01:37,800
the people<font color="#E5E5E5"> the the current policy and we</font>

19
00:01:37,800 --> 00:01:40,170
set up this least squares problem in

20
00:01:40,170 --> 00:01:43,590
this form<font color="#CCCCCC"> in fact this would</font><font color="#E5E5E5"> be exactly</font>

21
00:01:43,590 --> 00:01:46,649
<font color="#E5E5E5">the</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> squares problem if we were to</font>

22
00:01:46,649 --> 00:01:50,369
<font color="#E5E5E5">use many many samples of state control</font>

23
00:01:50,369 --> 00:01:52,229
<font color="#E5E5E5">pairs but in practice we would use</font>

24
00:01:52,229 --> 00:01:54,149
<font color="#CCCCCC">perhaps a limited set of state control</font>

25
00:01:54,149 --> 00:01:58,110
pairs<font color="#E5E5E5"> solve this get our</font><font color="#CCCCCC"> selenium</font>

26
00:01:58,110 --> 00:02:00,899
<font color="#E5E5E5">squares problem and then that's the</font>

27
00:02:00,899 --> 00:02:04,410
that's our mu for the<font color="#E5E5E5"> for the for this</font>

28
00:02:04,410 --> 00:02:06,629
<font color="#E5E5E5">policy</font><font color="#CCCCCC"> and then we can use policy</font>

29
00:02:06,629 --> 00:02:10,470
improvement<font color="#E5E5E5"> to get to define the new</font>

30
00:02:10,470 --> 00:02:12,030
policy which is going<font color="#E5E5E5"> to be used to</font>

31
00:02:12,030 --> 00:02:14,930
drive<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> cycle of policy direction</font>

32
00:02:14,930 --> 00:02:17,760
<font color="#E5E5E5">okay so now</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> going to look into</font>

33
00:02:17,760 --> 00:02:20,340
this<font color="#E5E5E5"> in the context of continuous space</font>

34
00:02:20,340 --> 00:02:22,890
and control systems<font color="#E5E5E5"> and we're going to</font>

35
00:02:22,890 --> 00:02:28,069
<font color="#E5E5E5">consider a classical example</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> control</font>

36
00:02:28,129 --> 00:02:33,870
<font color="#E5E5E5">involving a linear system</font><font color="#CCCCCC"> XK plus 1</font>

37
00:02:33,870 --> 00:02:38,069
equals a<font color="#E5E5E5"> XJ plus bu K XK is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> state</font>

38
00:02:38,069 --> 00:02:40,500
vector<font color="#E5E5E5"> the state vector is a vector in</font>

39
00:02:40,500 --> 00:02:43,959
<font color="#E5E5E5">RN</font><font color="#CCCCCC"> okay so it's a vector of n</font>

40
00:02:43,959 --> 00:02:47,439
continues<font color="#E5E5E5"> state variables okay has n</font>

41
00:02:47,439 --> 00:02:52,299
components<font color="#CCCCCC"> and UK is a vector of</font><font color="#E5E5E5"> control</font>

42
00:02:52,299 --> 00:02:55,750
components of<font color="#CCCCCC"> M control components okay</font>

43
00:02:55,750 --> 00:03:00,040
<font color="#CCCCCC">a is an N by n matrix</font><font color="#E5E5E5"> B is an N by M</font>

44
00:03:00,040 --> 00:03:04,389
matrix<font color="#E5E5E5"> and this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> standard</font>

45
00:03:04,389 --> 00:03:06,700
<font color="#E5E5E5">discrete-time linear system time</font>

46
00:03:06,700 --> 00:03:08,889
invariant because<font color="#E5E5E5"> a and B</font><font color="#CCCCCC"> do not change</font>

47
00:03:08,889 --> 00:03:12,250
<font color="#E5E5E5">over time and</font><font color="#CCCCCC"> a classical problem</font><font color="#E5E5E5"> is to</font>

48
00:03:12,250 --> 00:03:15,159
find<font color="#E5E5E5"> the control sequence from 0 to</font>

49
00:03:15,159 --> 00:03:18,299
infinity<font color="#CCCCCC"> that minimizes a</font><font color="#E5E5E5"> quadratic cost</font>

50
00:03:18,299 --> 00:03:23,260
<font color="#CCCCCC">ok now Q is an N by n positive</font>

51
00:03:23,260 --> 00:03:27,099
<font color="#CCCCCC">semi-definite</font><font color="#E5E5E5"> matrix X prime Q X is the</font>

52
00:03:27,099 --> 00:03:30,669
<font color="#E5E5E5">quadratic form associated with Q X prime</font>

53
00:03:30,669 --> 00:03:34,599
<font color="#CCCCCC">is a row vector Q</font><font color="#E5E5E5"> a column vector</font><font color="#CCCCCC"> such a</font>

54
00:03:34,599 --> 00:03:37,599
<font color="#E5E5E5">scalar quadratic form that penalizes</font>

55
00:03:37,599 --> 00:03:42,579
<font color="#E5E5E5">large values of</font><font color="#CCCCCC"> XJ</font><font color="#E5E5E5"> similarly here we</font>

56
00:03:42,579 --> 00:03:46,120
<font color="#CCCCCC">have a quadratic cost on control R is a</font>

57
00:03:46,120 --> 00:03:49,510
positive<font color="#CCCCCC"> definite matrix and it</font>

58
00:03:49,510 --> 00:03:54,040
penalizes<font color="#E5E5E5"> large values of control so</font>

59
00:03:54,040 --> 00:03:55,690
basically we<font color="#E5E5E5"> want to drive the state</font>

60
00:03:55,690 --> 00:04:00,310
towards<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> with small with relatively</font>

61
00:04:00,310 --> 00:04:02,650
<font color="#E5E5E5">small amounts of control</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we want to</font>

62
00:04:02,650 --> 00:04:04,680
do it gradually over an infinite horizon

63
00:04:04,680 --> 00:04:07,209
<font color="#CCCCCC">it's a classical formulation</font><font color="#E5E5E5"> and that</font>

64
00:04:07,209 --> 00:04:10,030
<font color="#CCCCCC">meets a</font><font color="#E5E5E5"> very elegant solution</font><font color="#CCCCCC"> the</font>

65
00:04:10,030 --> 00:04:13,150
optimal policy is linear so the optimal

66
00:04:13,150 --> 00:04:15,720
<font color="#CCCCCC">pulse is some matrix multiplying X</font>

67
00:04:15,720 --> 00:04:19,899
that's the optimal gain matrix of the

68
00:04:19,899 --> 00:04:22,509
problem<font color="#E5E5E5"> and if we can find that we</font>

69
00:04:22,509 --> 00:04:24,280
measure the state then we multiply<font color="#CCCCCC"> it</font>

70
00:04:24,280 --> 00:04:26,320
with L<font color="#E5E5E5"> and get to control</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> linear</font>

71
00:04:26,320 --> 00:04:29,229
feedback control scheme and it works

72
00:04:29,229 --> 00:04:36,130
<font color="#CCCCCC">very nicely ok now how about few factors</font>

73
00:04:36,130 --> 00:04:39,909
<font color="#E5E5E5">well actually does the given any linear</font>

74
00:04:39,909 --> 00:04:42,190
<font color="#E5E5E5">part suppose you have a linear policy it</font>

75
00:04:42,190 --> 00:04:46,750
turns out that the Q factor of a state

76
00:04:46,750 --> 00:04:50,710
control pair is a quadratic involving

77
00:04:50,710 --> 00:04:53,260
some matrix<font color="#CCCCCC"> chain you the same matrix</font>

78
00:04:53,260 --> 00:04:56,349
for all state control pairs<font color="#CCCCCC"> okay the</font>

79
00:04:56,349 --> 00:04:57,540
optimal cost is<font color="#E5E5E5"> actually</font>

80
00:04:57,540 --> 00:05:00,030
quadratic<font color="#E5E5E5"> function of X the optimal</font><font color="#CCCCCC"> Q</font>

81
00:05:00,030 --> 00:05:02,460
<font color="#CCCCCC">factor</font><font color="#E5E5E5"> were more generally the Q factor</font>

82
00:05:02,460 --> 00:05:06,830
of any linear policy is a quadratic

83
00:05:06,830 --> 00:05:12,510
involving some matrix here<font color="#E5E5E5"> J mu that can</font>

84
00:05:12,510 --> 00:05:16,950
be<font color="#E5E5E5"> calculated</font><font color="#CCCCCC"> if we knew a and B however</font>

85
00:05:16,950 --> 00:05:18,960
<font color="#CCCCCC">we want to look</font><font color="#E5E5E5"> at the case where</font><font color="#CCCCCC"> a and</font>

86
00:05:18,960 --> 00:05:21,480
B<font color="#CCCCCC"> are not known and when you want</font><font color="#E5E5E5"> to</font>

87
00:05:21,480 --> 00:05:24,060
evaluate policies by finding the scale

88
00:05:24,060 --> 00:05:27,450
mu using a simulator<font color="#CCCCCC"> of the system as</font>

89
00:05:27,450 --> 00:05:31,500
opposed to using a and B and for this we

90
00:05:31,500 --> 00:05:38,010
will<font color="#CCCCCC"> use Q</font><font color="#E5E5E5"> learning or Q factor policy</font>

91
00:05:38,010 --> 00:05:42,660
iteration approximate policy duration

92
00:05:42,660 --> 00:05:45,390
with a Q factors represented as a linear

93
00:05:45,390 --> 00:05:50,250
combination of basis functions but<font color="#E5E5E5"> here</font>

94
00:05:50,250 --> 00:05:52,470
we are<font color="#E5E5E5"> very fortunate because we know</font>

95
00:05:52,470 --> 00:05:57,000
<font color="#E5E5E5">ahead of time that the two factors of a</font>

96
00:05:57,000 --> 00:06:00,900
<font color="#E5E5E5">policy are quadratic so the thing that's</font>

97
00:06:00,900 --> 00:06:04,140
<font color="#E5E5E5">unknown here is this K nu but the basis</font>

98
00:06:04,140 --> 00:06:06,510
functions<font color="#E5E5E5"> are the quadratic functions</font>

99
00:06:06,510 --> 00:06:08,400
the right but the right basis functions

100
00:06:08,400 --> 00:06:10,770
are<font color="#CCCCCC"> quadratic functions</font><font color="#E5E5E5"> in this game you</font>

101
00:06:10,770 --> 00:06:13,770
can<font color="#E5E5E5"> be viewed as a vector</font><font color="#CCCCCC"> of ways that</font>

102
00:06:13,770 --> 00:06:18,330
ways<font color="#E5E5E5"> the quadratic basis functions so</font>

103
00:06:18,330 --> 00:06:20,220
we're going<font color="#CCCCCC"> to use as basis functions of</font>

104
00:06:20,220 --> 00:06:25,470
these things here all possible products

105
00:06:25,470 --> 00:06:28,170
of state components with other state

106
00:06:28,170 --> 00:06:32,520
components so X<font color="#E5E5E5"> 1 squared X 1</font><font color="#CCCCCC"> 2 X 1 3</font>

107
00:06:32,520 --> 00:06:36,180
and so 1 X<font color="#E5E5E5"> 2 squared and so on similarly</font>

108
00:06:36,180 --> 00:06:38,130
<font color="#CCCCCC">we're going to use all quadratic</font>

109
00:06:38,130 --> 00:06:41,940
components involving control u 1<font color="#E5E5E5"> square</font>

110
00:06:41,940 --> 00:06:44,340
<font color="#E5E5E5">u 2 square and so one you want you to</font>

111
00:06:44,340 --> 00:06:46,550
all the possible cross terms<font color="#E5E5E5"> and</font>

112
00:06:46,550 --> 00:06:48,810
similarly<font color="#CCCCCC"> all the possible cross terms</font>

113
00:06:48,810 --> 00:06:54,540
between state<font color="#E5E5E5"> and control so what is the</font>

114
00:06:54,540 --> 00:06:58,650
the the<font color="#E5E5E5"> matrix</font><font color="#CCCCCC"> fee here it is for a</font>

115
00:06:58,650 --> 00:07:01,890
given<font color="#E5E5E5"> X and</font><font color="#CCCCCC"> u the role of fee of course</font>

116
00:07:01,890 --> 00:07:05,250
<font color="#CCCCCC">fee has an infinite number</font><font color="#E5E5E5"> of component</font>

117
00:07:05,250 --> 00:07:05,860
<font color="#CCCCCC">row</font>

118
00:07:05,860 --> 00:07:08,949
<font color="#E5E5E5">Rose okay</font><font color="#CCCCCC"> but it has a</font><font color="#E5E5E5"> finite number of</font>

119
00:07:08,949 --> 00:07:11,620
columns which correspond<font color="#E5E5E5"> to these basis</font>

120
00:07:11,620 --> 00:07:15,400
functions<font color="#E5E5E5"> and for a given X you the row</font>

121
00:07:15,400 --> 00:07:18,039
<font color="#E5E5E5">of fee is</font><font color="#CCCCCC"> part precisely of all these</font>

122
00:07:18,039 --> 00:07:22,780
<font color="#CCCCCC">components so if you</font><font color="#E5E5E5"> can give me if I if</font>

123
00:07:22,780 --> 00:07:24,669
you can hear me<font color="#CCCCCC"> acts on you I can</font>

124
00:07:24,669 --> 00:07:29,289
calculate the the<font color="#E5E5E5"> corresponding row very</font>

125
00:07:29,289 --> 00:07:41,830
easily and the Q factor<font color="#E5E5E5"> of a linear</font>

126
00:07:41,830 --> 00:07:43,960
policy because<font color="#CCCCCC"> we know that it has this</font>

127
00:07:43,960 --> 00:07:47,139
form it can<font color="#E5E5E5"> be exactly represented</font>

128
00:07:47,139 --> 00:07:50,800
within the approximation subspace okay

129
00:07:50,800 --> 00:07:53,050
we're very<font color="#E5E5E5"> fortunate here because we</font>

130
00:07:53,050 --> 00:07:55,449
<font color="#E5E5E5">know good basis functions ahead of time</font>

131
00:07:55,449 --> 00:07:58,479
<font color="#E5E5E5">and if I can find the</font><font color="#CCCCCC"> corresponding</font>

132
00:07:58,479 --> 00:08:00,520
weight vector this is<font color="#E5E5E5"> the same as</font>

133
00:08:00,520 --> 00:08:03,610
finding<font color="#E5E5E5"> this matrix chase of Nu and Q</font>

134
00:08:03,610 --> 00:08:05,169
<font color="#CCCCCC">learning is</font><font color="#E5E5E5"> going to be used to find</font>

135
00:08:05,169 --> 00:08:08,080
this way to weight vector<font color="#E5E5E5"> without</font>

136
00:08:08,080 --> 00:08:12,009
knowing and a and you<font color="#E5E5E5"> just by use it you</font>

137
00:08:12,009 --> 00:08:15,009
a and B just<font color="#CCCCCC"> by using a simulator</font><font color="#E5E5E5"> of a</font>

138
00:08:15,009 --> 00:08:17,500
system in other words instead<font color="#E5E5E5"> of having</font>

139
00:08:17,500 --> 00:08:20,349
<font color="#CCCCCC">area B</font><font color="#E5E5E5"> I got the system and when I put</font>

140
00:08:20,349 --> 00:08:22,300
in here<font color="#CCCCCC"> to I measure the state</font><font color="#E5E5E5"> you need</font>

141
00:08:22,300 --> 00:08:24,669
<font color="#E5E5E5">to put in certain control it generates</font>

142
00:08:24,669 --> 00:08:27,880
another state<font color="#E5E5E5"> and that's all I know</font>

143
00:08:27,880 --> 00:08:31,449
<font color="#CCCCCC">either all I need in order</font><font color="#E5E5E5"> to apply to</font>

144
00:08:31,449 --> 00:08:38,349
<font color="#CCCCCC">learning more precisely</font><font color="#E5E5E5"> suppose I have a</font>

145
00:08:38,349 --> 00:08:40,929
<font color="#E5E5E5">policy new and I want to evaluate it and</font>

146
00:08:40,929 --> 00:08:43,229
find the<font color="#CCCCCC"> corresponding set of weights</font><font color="#E5E5E5"> I</font>

147
00:08:43,229 --> 00:08:49,199
set up the bellman<font color="#E5E5E5"> error squared</font><font color="#CCCCCC"> I</font>

148
00:08:49,199 --> 00:08:53,550
generate a set of state control pairs

149
00:08:53,550 --> 00:08:57,010
<font color="#E5E5E5">and write down the bellman equation</font>

150
00:08:57,010 --> 00:09:00,490
<font color="#E5E5E5">error</font><font color="#CCCCCC"> form</font><font color="#E5E5E5"> this least squares problem</font>

151
00:09:00,490 --> 00:09:02,910
which is<font color="#CCCCCC"> linearly</font><font color="#E5E5E5"> squares</font>

152
00:09:02,910 --> 00:09:05,649
remember these<font color="#CCCCCC"> are the</font><font color="#E5E5E5"> rows</font><font color="#CCCCCC"> of the</font>

153
00:09:05,649 --> 00:09:09,040
matrix<font color="#E5E5E5"> P okay for a given X in U and</font>

154
00:09:09,040 --> 00:09:13,029
similarly here and R is a vector

155
00:09:13,029 --> 00:09:15,790
multiplying with<font color="#E5E5E5"> growth</font>

156
00:09:15,790 --> 00:09:17,740
a column<font color="#CCCCCC"> that my prince Robert</font><font color="#E5E5E5"> is</font>

157
00:09:17,740 --> 00:09:20,170
awaiting before all this<font color="#E5E5E5"> this basis</font>

158
00:09:20,170 --> 00:09:22,990
functions<font color="#E5E5E5"> this is the one stage cost so</font>

159
00:09:22,990 --> 00:09:24,460
this is a<font color="#E5E5E5"> linear least squares problem</font>

160
00:09:24,460 --> 00:09:29,020
and XJ U K XK plus<font color="#CCCCCC"> one are many samples</font>

161
00:09:29,020 --> 00:09:31,540
generated<font color="#CCCCCC"> by a</font><font color="#E5E5E5"> system or a simulator of</font>

162
00:09:31,540 --> 00:09:39,070
<font color="#E5E5E5">the system and after</font><font color="#CCCCCC"> I find after</font><font color="#E5E5E5"> I do</font>

163
00:09:39,070 --> 00:09:41,800
the policy evaluation<font color="#E5E5E5"> I can do policy</font>

164
00:09:41,800 --> 00:09:44,080
<font color="#E5E5E5">improvement by doing this minimization</font>

165
00:09:44,080 --> 00:09:47,370
<font color="#CCCCCC">at a</font><font color="#E5E5E5"> given state X I minimize over here</font>

166
00:09:47,370 --> 00:09:50,650
<font color="#E5E5E5">but this minimization can be done in</font>

167
00:09:50,650 --> 00:09:53,530
<font color="#E5E5E5">closed form because this</font><font color="#CCCCCC"> FS here</font><font color="#E5E5E5"> are</font>

168
00:09:53,530 --> 00:09:58,780
what are this are quadratic in U<font color="#CCCCCC"> so I</font>

169
00:09:58,780 --> 00:10:04,270
can very simply<font color="#E5E5E5"> do this calculation so</font>

170
00:10:04,270 --> 00:10:08,890
that<font color="#E5E5E5"> exact policy</font><font color="#CCCCCC"> duration</font><font color="#E5E5E5"> for Q factors</font>

171
00:10:08,890 --> 00:10:11,440
<font color="#CCCCCC">exact</font><font color="#E5E5E5"> because I'm fortunate to know good</font>

172
00:10:11,440 --> 00:10:13,960
basis functions and knowledge of<font color="#E5E5E5"> alien</font><font color="#CCCCCC"> B</font>

173
00:10:13,960 --> 00:10:19,660
is not required it's quite remarkable

174
00:10:19,660 --> 00:10:21,070
<font color="#E5E5E5">actually because people have been</font>

175
00:10:21,070 --> 00:10:22,750
<font color="#CCCCCC">working</font><font color="#E5E5E5"> on adaptive control of linear</font>

176
00:10:22,750 --> 00:10:24,970
systems<font color="#E5E5E5"> since time immemorial since the</font>

177
00:10:24,970 --> 00:10:27,970
50s<font color="#CCCCCC"> okay this approach is relatively</font><font color="#E5E5E5"> new</font>

178
00:10:27,970 --> 00:10:30,430
<font color="#E5E5E5">but actually discovered in the early</font>

179
00:10:30,430 --> 00:10:33,160
<font color="#E5E5E5">days of approximate</font><font color="#CCCCCC"> dynamic program in</font>

180
00:10:33,160 --> 00:10:35,340
the<font color="#CCCCCC"> early nineties but</font><font color="#E5E5E5"> it has picked up</font>

181
00:10:35,340 --> 00:10:39,130
<font color="#E5E5E5">it has been picked up by control in the</font>

182
00:10:39,130 --> 00:10:47,230
control field<font color="#E5E5E5"> quite strong recently okay</font>

183
00:10:47,230 --> 00:10:49,150
so because<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> is essentially</font>

184
00:10:49,150 --> 00:10:54,280
exact<font color="#CCCCCC"> if you use a sufficient number of</font>

185
00:10:54,280 --> 00:10:56,800
state control pairs here and in fact<font color="#E5E5E5"> you</font>

186
00:10:56,800 --> 00:10:58,450
<font color="#E5E5E5">need only a finite number in this</font>

187
00:10:58,450 --> 00:11:00,580
particular case

188
00:11:00,580 --> 00:11:02,980
convergence to an optimal policy can be

189
00:11:02,980 --> 00:11:09,430
<font color="#E5E5E5">shown now the basic idea</font><font color="#CCCCCC"> of this example</font>

190
00:11:09,430 --> 00:11:11,230
has been<font color="#E5E5E5"> carried further within the</font>

191
00:11:11,230 --> 00:11:14,100
field of adaptive dynamic programming

192
00:11:14,100 --> 00:11:19,390
where<font color="#E5E5E5"> you may have a nonlinear discrete</font>

193
00:11:19,390 --> 00:11:21,700
time system or you may have<font color="#CCCCCC"> a cost</font>

194
00:11:21,700 --> 00:11:25,390
<font color="#E5E5E5">that's not quadratic and then what you</font>

195
00:11:25,390 --> 00:11:27,390
need<font color="#E5E5E5"> to do is</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> approximate</font>

196
00:11:27,390 --> 00:11:30,620
<font color="#CCCCCC">patience of these things here but still</font>

197
00:11:30,620 --> 00:11:38,070
you may with with with model free policy

198
00:11:38,070 --> 00:11:42,300
duration ideas you can obtain<font color="#E5E5E5"> viable</font>

199
00:11:42,300 --> 00:11:46,100
schemes that people<font color="#E5E5E5"> have been have been</font>

200
00:11:46,100 --> 00:11:50,430
have been dealing<font color="#CCCCCC"> with or experimenting</font>

201
00:11:50,430 --> 00:12:12,270
with for<font color="#CCCCCC"> quite a few years now yes this</font>

202
00:12:12,270 --> 00:12:15,420
<font color="#E5E5E5">is</font><font color="#CCCCCC"> XJ plus</font><font color="#E5E5E5"> one because that's this</font><font color="#CCCCCC"> is</font>

203
00:12:15,420 --> 00:12:17,820
the the cost approximation at the next

204
00:12:17,820 --> 00:12:20,910
state<font color="#E5E5E5"> right according</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the formula of</font>

205
00:12:20,910 --> 00:12:26,580
<font color="#E5E5E5">Q</font><font color="#CCCCCC"> learning so give an XK and UK</font><font color="#E5E5E5"> you</font>

206
00:12:26,580 --> 00:12:31,200
generate XK plus<font color="#CCCCCC"> one</font><font color="#E5E5E5"> from that okay and</font>

207
00:12:31,200 --> 00:12:34,590
that's the yeah you need<font color="#CCCCCC"> the</font><font color="#E5E5E5"> XJ plus one</font>

208
00:12:34,590 --> 00:12:38,580
here not<font color="#E5E5E5"> XJ if you go back to the Q</font>

209
00:12:38,580 --> 00:12:42,710
learning formulas<font color="#E5E5E5"> let me just go</font><font color="#CCCCCC"> back</font>

210
00:12:44,900 --> 00:12:51,440
<font color="#E5E5E5">okay the next state comes in here and</font>

211
00:13:07,450 --> 00:13:12,600
I'm sorry I can find it<font color="#E5E5E5"> but</font>

212
00:13:27,209 --> 00:13:30,459
yeah<font color="#CCCCCC"> actually here</font><font color="#E5E5E5"> okay it's the next</font>

213
00:13:30,459 --> 00:14:06,940
state<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> okay so you're looking the</font><font color="#E5E5E5"> so</font>

214
00:14:06,940 --> 00:14:09,839
I think<font color="#E5E5E5"> your question</font><font color="#CCCCCC"> is okay i i i i</font>

215
00:14:09,839 --> 00:14:14,320
use this algorithm<font color="#CCCCCC"> i calculate our new</font>

216
00:14:14,320 --> 00:14:16,720
by solving this problem<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that gives</font>

217
00:14:16,720 --> 00:14:19,540
me<font color="#E5E5E5"> the matrix</font><font color="#CCCCCC"> chain new for the policy</font>

218
00:14:19,540 --> 00:14:22,930
<font color="#E5E5E5">that policy and then but i generate a</font>

219
00:14:22,930 --> 00:14:26,950
sequence of policies<font color="#E5E5E5"> and the k news of</font>

220
00:14:26,950 --> 00:14:28,959
the different policies will converge the

221
00:14:28,959 --> 00:14:31,600
k star let's say the<font color="#E5E5E5"> k star</font>

222
00:14:31,600 --> 00:14:35,520
corresponding to the optimal few factors

223
00:14:51,050 --> 00:14:53,310
I'm not sure I understand<font color="#CCCCCC"> complete your</font>

224
00:14:53,310 --> 00:14:55,530
question you ask you the question of

225
00:14:55,530 --> 00:14:57,630
convergence of<font color="#E5E5E5"> this algorithm</font><font color="#CCCCCC"> this</font>

226
00:14:57,630 --> 00:14:59,220
algorithm generates a sequence<font color="#E5E5E5"> of</font>

227
00:14:59,220 --> 00:15:00,990
policies<font color="#CCCCCC"> and the sequence of weights</font>

228
00:15:00,990 --> 00:15:04,140
weight vectors so where do these weight

229
00:15:04,140 --> 00:15:08,010
vectors converge to they will<font color="#E5E5E5"> converge</font>

230
00:15:08,010 --> 00:15:11,340
to<font color="#E5E5E5"> the optimal weights that correspond</font>

231
00:15:11,340 --> 00:15:20,760
to<font color="#E5E5E5"> the optimal matrix can you not argue</font>

232
00:15:20,760 --> 00:15:23,220
does not converge to you have<font color="#E5E5E5"> our new</font>

233
00:15:23,220 --> 00:15:27,660
<font color="#CCCCCC">zero R mu 1 mu</font><font color="#E5E5E5"> 2 and so</font><font color="#CCCCCC"> on and these are</font>

234
00:15:27,660 --> 00:15:30,060
<font color="#E5E5E5">going to converge to</font><font color="#CCCCCC"> our new star let's</font>

235
00:15:30,060 --> 00:15:38,700
say<font color="#CCCCCC"> okay the our new corresponds to a</font>

236
00:15:38,700 --> 00:15:41,480
single<font color="#E5E5E5"> policy</font>

237
00:15:46,109 --> 00:15:48,369
incidentally I'm asserted here

238
00:15:48,369 --> 00:15:51,720
convergence but<font color="#E5E5E5"> there is something</font><font color="#CCCCCC"> that</font>

239
00:15:51,720 --> 00:15:53,799
<font color="#CCCCCC">but-but-but</font><font color="#E5E5E5"> we have discussed</font>

240
00:15:53,799 --> 00:15:56,980
convergence of policy<font color="#E5E5E5"> direction only for</font>

241
00:15:56,980 --> 00:15:59,369
the case of<font color="#E5E5E5"> a finite</font><font color="#CCCCCC"> number of states</font>

242
00:15:59,369 --> 00:16:01,720
where<font color="#E5E5E5"> you have convergence in a finite</font>

243
00:16:01,720 --> 00:16:03,669
<font color="#CCCCCC">number</font><font color="#E5E5E5"> of iterations</font><font color="#CCCCCC"> right that's what</font>

244
00:16:03,669 --> 00:16:05,759
the only<font color="#E5E5E5"> thing that we have talked about</font>

245
00:16:05,759 --> 00:16:08,379
<font color="#E5E5E5">convergence of policy direction in an</font>

246
00:16:08,379 --> 00:16:11,439
infinite space context is<font color="#E5E5E5"> not a foregone</font>

247
00:16:11,439 --> 00:16:12,850
conclusion<font color="#CCCCCC"> okay</font>

248
00:16:12,850 --> 00:16:16,480
it turns out however that<font color="#CCCCCC"> for this</font>

249
00:16:16,480 --> 00:16:18,970
<font color="#E5E5E5">linear quadratic problem</font><font color="#CCCCCC"> and also for</font>

250
00:16:18,970 --> 00:16:20,769
other related problems you get

251
00:16:20,769 --> 00:16:25,499
asymptotic convergence<font color="#E5E5E5"> of the optimum of</font>

252
00:16:25,499 --> 00:16:28,660
asymptotic convergence of the of the

253
00:16:28,660 --> 00:16:30,669
generated<font color="#E5E5E5"> few factors to the optimal</font><font color="#CCCCCC"> new</font>

254
00:16:30,669 --> 00:16:32,980
factors and asymptotic<font color="#E5E5E5"> convergence to an</font>

255
00:16:32,980 --> 00:16:35,649
optimal<font color="#E5E5E5"> policy</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> only because you have</font>

256
00:16:35,649 --> 00:16:37,869
<font color="#CCCCCC">a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of assumptions here it's a linear</font>

257
00:16:37,869 --> 00:16:40,809
quadratic problem<font color="#E5E5E5"> has involved a lot of</font>

258
00:16:40,809 --> 00:16:45,279
<font color="#E5E5E5">structure</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> again a result that</font>

259
00:16:45,279 --> 00:16:47,439
goes back<font color="#E5E5E5"> to the late 60s convergence of</font>

260
00:16:47,439 --> 00:16:49,329
policy<font color="#CCCCCC"> duration for the linear</font><font color="#E5E5E5"> quadratic</font>

261
00:16:49,329 --> 00:16:56,439
problem<font color="#E5E5E5"> okay now if this is a vast</font>

262
00:16:56,439 --> 00:17:01,269
<font color="#E5E5E5">subject and I we're not going to go into</font>

263
00:17:01,269 --> 00:17:05,939
<font color="#CCCCCC">it let's talk about</font><font color="#E5E5E5"> another major</font><font color="#CCCCCC"> area</font>

264
00:17:05,939 --> 00:17:08,470
but we also<font color="#E5E5E5"> are</font><font color="#CCCCCC"> not going to go in</font><font color="#E5E5E5"> very</font>

265
00:17:08,470 --> 00:17:10,869
<font color="#E5E5E5">deeply</font><font color="#CCCCCC"> what just summarize we have been</font>

266
00:17:10,869 --> 00:17:13,269
talking<font color="#CCCCCC"> so far about</font><font color="#E5E5E5"> approximation in</font>

267
00:17:13,269 --> 00:17:16,329
value space<font color="#E5E5E5"> or approximation in q-factor</font>

268
00:17:16,329 --> 00:17:18,789
space now let's talk about approximation

269
00:17:18,789 --> 00:17:21,279
in policy space<font color="#CCCCCC"> where instead of</font>

270
00:17:21,279 --> 00:17:25,179
parameterizing<font color="#E5E5E5"> costs or few factors we</font>

271
00:17:25,179 --> 00:17:28,559
parameterize policies so we<font color="#CCCCCC"> parameterize</font>

272
00:17:28,559 --> 00:17:33,519
<font color="#E5E5E5">policies by a vector R of weights and</font>

273
00:17:33,519 --> 00:17:36,570
the corresponding weights or parameters

274
00:17:36,570 --> 00:17:39,519
<font color="#CCCCCC">this is an</font><font color="#E5E5E5"> approximation architecture</font>

275
00:17:39,519 --> 00:17:44,049
for policies so the policy that

276
00:17:44,049 --> 00:17:47,230
corresponds<font color="#E5E5E5"> to a weight vector R gives</font>

277
00:17:47,230 --> 00:17:50,740
you<font color="#E5E5E5"> controls to apply at every possible</font>

278
00:17:50,740 --> 00:17:55,389
<font color="#CCCCCC">state which depend on R now for a</font><font color="#E5E5E5"> given</font>

279
00:17:55,389 --> 00:17:57,559
R the policy is defined

280
00:17:57,559 --> 00:17:59,600
and therefore the corresponding cost

281
00:17:59,600 --> 00:18:03,220
vector<font color="#E5E5E5"> is defined as a function</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our</font>

282
00:18:03,220 --> 00:18:05,059
so ours

283
00:18:05,059 --> 00:18:07,580
give me policies and I want to find good

284
00:18:07,580 --> 00:18:10,039
<font color="#CCCCCC">arts that give me</font><font color="#E5E5E5"> good policies</font><font color="#CCCCCC"> that's</font>

285
00:18:10,039 --> 00:18:14,620
the idea<font color="#E5E5E5"> and to do this we may wish to</font>

286
00:18:14,620 --> 00:18:17,600
optimize some measure of this cost

287
00:18:17,600 --> 00:18:22,250
<font color="#CCCCCC">corresponding to R over R for example we</font>

288
00:18:22,250 --> 00:18:24,830
may formulate a cost function<font color="#CCCCCC"> that</font>

289
00:18:24,830 --> 00:18:29,240
involves<font color="#E5E5E5"> the weighted sum</font><font color="#CCCCCC"> of costs</font>

290
00:18:29,240 --> 00:18:32,049
corresponding<font color="#E5E5E5"> to the policy that</font>

291
00:18:32,049 --> 00:18:36,080
<font color="#CCCCCC">corresponds to R and X I</font><font color="#E5E5E5"> are some state</font>

292
00:18:36,080 --> 00:18:38,900
dependent weights<font color="#E5E5E5"> this is a scalar cost</font>

293
00:18:38,900 --> 00:18:42,740
function<font color="#CCCCCC"> that depends</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> R</font><font color="#E5E5E5"> minimize this</font>

294
00:18:42,740 --> 00:18:45,890
with respect to R gives you an optimal

295
00:18:45,890 --> 00:18:48,799
parameterization<font color="#E5E5E5"> of policy in an optimal</font>

296
00:18:48,799 --> 00:18:52,039
<font color="#E5E5E5">policy within</font><font color="#CCCCCC"> this class optimal with</font>

297
00:18:52,039 --> 00:18:54,140
respect<font color="#CCCCCC"> to this cost function</font><font color="#E5E5E5"> there is</font>

298
00:18:54,140 --> 00:18:55,520
<font color="#E5E5E5">an issue here</font><font color="#CCCCCC"> how do you</font><font color="#E5E5E5"> weigh the</font>

299
00:18:55,520 --> 00:18:57,679
<font color="#CCCCCC">various states and so on but let's</font>

300
00:18:57,679 --> 00:19:03,080
bypass<font color="#E5E5E5"> this ratio you may use any of a</font>

301
00:19:03,080 --> 00:19:07,460
large number of at least in principle

302
00:19:07,460 --> 00:19:10,460
<font color="#E5E5E5">you may use any of a large number of the</font>

303
00:19:10,460 --> 00:19:12,679
term<font color="#E5E5E5"> of optimization algorithms</font>

304
00:19:12,679 --> 00:19:14,600
iterative optimization algorithms for

305
00:19:14,600 --> 00:19:16,880
<font color="#E5E5E5">minimizing subjecting for example a</font>

306
00:19:16,880 --> 00:19:19,100
random search method<font color="#E5E5E5"> for a</font><font color="#CCCCCC"> gradient</font>

307
00:19:19,100 --> 00:19:21,520
method or some other kind<font color="#CCCCCC"> of method</font>

308
00:19:21,520 --> 00:19:25,549
that's the basic idea<font color="#E5E5E5"> now there's the</font>

309
00:19:25,549 --> 00:19:27,049
question<font color="#E5E5E5"> of how do you</font><font color="#CCCCCC"> parameterize</font>

310
00:19:27,049 --> 00:19:31,340
policies generally<font color="#E5E5E5"> the parameterization</font>

311
00:19:31,340 --> 00:19:34,070
<font color="#CCCCCC">is problem</font><font color="#E5E5E5"> dependent you</font><font color="#CCCCCC"> look at your</font>

312
00:19:34,070 --> 00:19:36,350
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> you know what is a good special</font>

313
00:19:36,350 --> 00:19:42,919
structure you look at you you<font color="#CCCCCC"> know that</font>

314
00:19:42,919 --> 00:19:47,000
for simpler you<font color="#CCCCCC"> have some idea about</font><font color="#E5E5E5"> the</font>

315
00:19:47,000 --> 00:19:49,610
<font color="#CCCCCC">structure of optimal policies you try to</font>

316
00:19:49,610 --> 00:19:52,250
match the approximation architecture to

317
00:19:52,250 --> 00:19:55,789
that<font color="#E5E5E5"> structure</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> but here's one</font>

318
00:19:55,789 --> 00:19:59,480
general way<font color="#E5E5E5"> to use state features to</font>

319
00:19:59,480 --> 00:20:03,230
<font color="#E5E5E5">parameterize policies introduce a cost</font>

320
00:20:03,230 --> 00:20:06,320
approximation architecture we shall call

321
00:20:06,320 --> 00:20:07,240
<font color="#E5E5E5">V here</font>

322
00:20:07,240 --> 00:20:12,870
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> depending on a parameter vector R</font>

323
00:20:12,870 --> 00:20:16,300
<font color="#CCCCCC">which and define indirectly a</font>

324
00:20:16,300 --> 00:20:19,570
parameterization<font color="#E5E5E5"> of policies by means of</font>

325
00:20:19,570 --> 00:20:23,350
<font color="#E5E5E5">this minimization</font><font color="#CCCCCC"> so if you know good</font>

326
00:20:23,350 --> 00:20:24,970
features you can still parameterize

327
00:20:24,970 --> 00:20:28,360
these policies<font color="#E5E5E5"> this way however</font><font color="#CCCCCC"> it's</font>

328
00:20:28,360 --> 00:20:29,950
also possible<font color="#E5E5E5"> to use different</font>

329
00:20:29,950 --> 00:20:32,350
parameterizations for state and<font color="#E5E5E5"> for</font>

330
00:20:32,350 --> 00:20:35,559
policies<font color="#E5E5E5"> in the parlance of this field a</font>

331
00:20:35,559 --> 00:20:37,840
policy approximate is called<font color="#E5E5E5"> an actor</font>

332
00:20:37,840 --> 00:20:38,559
<font color="#E5E5E5">okay</font>

333
00:20:38,559 --> 00:20:41,620
and the cost approximation is called<font color="#E5E5E5"> a</font>

334
00:20:41,620 --> 00:20:45,040
critic and many times and<font color="#E5E5E5"> often</font><font color="#CCCCCC"> these</font>

335
00:20:45,040 --> 00:20:46,570
<font color="#E5E5E5">type of systems and involve our</font>

336
00:20:46,570 --> 00:20:49,300
imaginations<font color="#E5E5E5"> of one or</font><font color="#CCCCCC"> both are</font><font color="#E5E5E5"> called</font>

337
00:20:49,300 --> 00:20:52,090
<font color="#CCCCCC">act or critic systems or critic systems</font>

338
00:20:52,090 --> 00:20:54,940
or actor system actor only<font color="#E5E5E5"> systems and</font>

339
00:20:54,940 --> 00:21:03,880
so on now let's look<font color="#E5E5E5"> more specifically</font>

340
00:21:03,880 --> 00:21:10,440
at<font color="#E5E5E5"> just</font><font color="#CCCCCC"> be parameterization</font><font color="#E5E5E5"> of policies</font>

341
00:21:10,440 --> 00:21:13,780
<font color="#CCCCCC">and this kind</font><font color="#E5E5E5"> of objective how do you</font>

342
00:21:13,780 --> 00:21:18,280
minimize it one possibility is to<font color="#CCCCCC"> use a</font>

343
00:21:18,280 --> 00:21:21,309
random<font color="#E5E5E5"> search method there are many many</font>

344
00:21:21,309 --> 00:21:24,670
<font color="#E5E5E5">methods of this type</font><font color="#CCCCCC"> very old and very</font>

345
00:21:24,670 --> 00:21:28,630
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> to apply</font><font color="#E5E5E5"> the idea is</font>

346
00:21:28,630 --> 00:21:31,570
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are at a given point at a given</font>

347
00:21:31,570 --> 00:21:34,720
set of parameters<font color="#CCCCCC"> you look around this</font>

348
00:21:34,720 --> 00:21:39,600
set of parameters<font color="#CCCCCC"> you search around</font><font color="#E5E5E5"> and</font>

349
00:21:40,679 --> 00:21:44,590
<font color="#E5E5E5">you look for a better are so I'm at</font><font color="#CCCCCC"> the</font>

350
00:21:44,590 --> 00:21:47,170
given<font color="#CCCCCC"> are I know the cost here because I</font>

351
00:21:47,170 --> 00:21:48,610
have<font color="#E5E5E5"> evaluated</font><font color="#CCCCCC"> by simulation</font><font color="#E5E5E5"> or</font>

352
00:21:48,610 --> 00:21:52,059
something then I generate<font color="#CCCCCC"> different</font>

353
00:21:52,059 --> 00:21:55,440
values<font color="#CCCCCC"> around it</font><font color="#E5E5E5"> I calculate the cost</font>

354
00:21:55,440 --> 00:21:59,260
<font color="#E5E5E5">corresponding to each new value and</font><font color="#CCCCCC"> I</font>

355
00:21:59,260 --> 00:22:02,679
<font color="#E5E5E5">move to another point that has better</font>

356
00:22:02,679 --> 00:22:06,220
cost<font color="#CCCCCC"> okay this the rough idea</font><font color="#E5E5E5"> there are</font>

357
00:22:06,220 --> 00:22:07,330
many many ways<font color="#CCCCCC"> to construct</font>

358
00:22:07,330 --> 00:22:08,800
neighborhoods to search among

359
00:22:08,800 --> 00:22:12,070
neighborhoods and is a method<font color="#CCCCCC"> that has</font>

360
00:22:12,070 --> 00:22:14,559
gotten<font color="#E5E5E5"> good publicity</font><font color="#CCCCCC"> recently</font><font color="#E5E5E5"> called</font>

361
00:22:14,559 --> 00:22:15,510
<font color="#E5E5E5">the cross</font><font color="#CCCCCC"> enter</font>

362
00:22:15,510 --> 00:22:17,730
method<font color="#E5E5E5"> which you can find in the</font>

363
00:22:17,730 --> 00:22:20,670
literature<font color="#E5E5E5"> among others it has been very</font>

364
00:22:20,670 --> 00:22:23,370
<font color="#CCCCCC">successful for</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> tetris problem</font><font color="#E5E5E5"> the</font>

365
00:22:23,370 --> 00:22:25,230
test case of the tetris problem that we

366
00:22:25,230 --> 00:22:28,590
have talked<font color="#E5E5E5"> in earlier lectures and it</font>

367
00:22:28,590 --> 00:22:33,270
beat by a large margin<font color="#CCCCCC"> approximate</font>

368
00:22:33,270 --> 00:22:37,230
policy duration methods<font color="#CCCCCC"> value</font>

369
00:22:37,230 --> 00:22:42,930
approximation value space<font color="#CCCCCC"> you can apply</font>

370
00:22:42,930 --> 00:22:45,630
<font color="#CCCCCC">this to</font><font color="#E5E5E5"> discrete</font><font color="#CCCCCC"> state spaces</font><font color="#E5E5E5"> or</font>

371
00:22:45,630 --> 00:22:47,520
continuous state spaces and control

372
00:22:47,520 --> 00:22:52,800
spaces<font color="#CCCCCC"> and the performance</font><font color="#E5E5E5"> of random</font>

373
00:22:52,800 --> 00:22:55,410
search methods is notoriously<font color="#E5E5E5"> inducing</font>

374
00:22:55,410 --> 00:22:58,380
<font color="#CCCCCC">kradic you may get</font><font color="#E5E5E5"> excellent</font><font color="#CCCCCC"> results or</font>

375
00:22:58,380 --> 00:23:02,640
you may get abysmal failures they can be

376
00:23:02,640 --> 00:23:05,120
very slow it<font color="#E5E5E5"> can be very unpredictable</font>

377
00:23:05,120 --> 00:23:12,360
<font color="#E5E5E5">but you can get success often enough to</font>

378
00:23:12,360 --> 00:23:16,430
consider them as viable<font color="#E5E5E5"> possibilities</font>

379
00:23:16,430 --> 00:23:18,900
they are very simple<font color="#CCCCCC"> that's that's</font>

380
00:23:18,900 --> 00:23:21,000
what's great about random search method

381
00:23:21,000 --> 00:23:25,170
very simple<font color="#E5E5E5"> and they in theory in paper</font>

382
00:23:25,170 --> 00:23:29,910
<font color="#E5E5E5">they they are guaranteed</font><font color="#CCCCCC"> to converge in</font>

383
00:23:29,910 --> 00:23:32,040
practice<font color="#E5E5E5"> that's not so but in theory</font>

384
00:23:32,040 --> 00:23:33,960
<font color="#E5E5E5">they're guaranteed converge to a global</font>

385
00:23:33,960 --> 00:23:42,330
optimum<font color="#CCCCCC"> okay an alternative</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> a random</font>

386
00:23:42,330 --> 00:23:45,480
search<font color="#E5E5E5"> is a gradient type of method like</font>

387
00:23:45,480 --> 00:23:47,220
the ones<font color="#E5E5E5"> that you use in nonlinear</font>

388
00:23:47,220 --> 00:23:52,130
programming<font color="#E5E5E5"> but perhaps adapted to the</font>

389
00:23:52,130 --> 00:23:55,290
context that<font color="#E5E5E5"> we have here including the</font>

390
00:23:55,290 --> 00:23:57,680
stochastic<font color="#E5E5E5"> context simulation so on</font>

391
00:23:57,680 --> 00:24:00,120
these<font color="#E5E5E5"> maps are called policy gradient</font>

392
00:24:00,120 --> 00:24:01,260
methods they have also been<font color="#CCCCCC"> used</font>

393
00:24:01,260 --> 00:24:03,450
<font color="#CCCCCC">extensively</font><font color="#E5E5E5"> they have been</font><font color="#CCCCCC"> researched on</font>

394
00:24:03,450 --> 00:24:06,090
extensively studied extensively<font color="#E5E5E5"> again</font>

395
00:24:06,090 --> 00:24:08,460
they<font color="#E5E5E5"> are also very unpredictable in</font>

396
00:24:08,460 --> 00:24:11,040
<font color="#CCCCCC">terms of their behavior the idea is</font><font color="#E5E5E5"> to</font>

397
00:24:11,040 --> 00:24:12,510
move along the direction<font color="#E5E5E5"> of the gradient</font>

398
00:24:12,510 --> 00:24:15,060
<font color="#CCCCCC">you have this cost function that depends</font>

399
00:24:15,060 --> 00:24:17,940
<font color="#E5E5E5">on</font><font color="#CCCCCC"> R you calculate its gradient or an</font>

400
00:24:17,940 --> 00:24:20,190
<font color="#E5E5E5">approximation to the gradient</font><font color="#CCCCCC"> perhaps a</font>

401
00:24:20,190 --> 00:24:21,090
sampled

402
00:24:21,090 --> 00:24:23,070
version of the gradient<font color="#E5E5E5"> by taking some</font>

403
00:24:23,070 --> 00:24:25,980
<font color="#CCCCCC">samples of this this cost function</font><font color="#E5E5E5"> and</font>

404
00:24:25,980 --> 00:24:27,720
then you move in the<font color="#CCCCCC"> direction of that</font>

405
00:24:27,720 --> 00:24:31,350
gradient according to some step size<font color="#E5E5E5"> in</font>

406
00:24:31,350 --> 00:24:33,330
dynamic<font color="#CCCCCC"> programming for particular</font>

407
00:24:33,330 --> 00:24:35,820
formulations<font color="#E5E5E5"> there are formulas or</font>

408
00:24:35,820 --> 00:24:37,530
<font color="#E5E5E5">convenient formulas that give you</font>

409
00:24:37,530 --> 00:24:39,780
expressions for this gradient<font color="#E5E5E5"> that you</font>

410
00:24:39,780 --> 00:24:41,760
can use and<font color="#E5E5E5"> these formulas can</font><font color="#CCCCCC"> be</font>

411
00:24:41,760 --> 00:24:45,630
approximated<font color="#E5E5E5"> by simulation all gradient</font>

412
00:24:45,630 --> 00:24:47,850
methods suffer in principle by slow

413
00:24:47,850 --> 00:24:51,060
convergence<font color="#E5E5E5"> local minima and these are</font>

414
00:24:51,060 --> 00:24:53,130
no exception and because these are

415
00:24:53,130 --> 00:24:56,790
<font color="#CCCCCC">implemented usually with simulation the</font>

416
00:24:56,790 --> 00:24:58,970
simulation<font color="#CCCCCC"> noise</font><font color="#E5E5E5"> can be</font><font color="#CCCCCC"> a real problem</font>

417
00:24:58,970 --> 00:25:01,980
<font color="#E5E5E5">there have been successes here but they</font>

418
00:25:01,980 --> 00:25:04,950
<font color="#E5E5E5">have also been don't don't count on it</font>

419
00:25:04,950 --> 00:25:07,530
<font color="#E5E5E5">okay don't count on success you may be</font>

420
00:25:07,530 --> 00:25:14,730
likely<font color="#E5E5E5"> but but</font><font color="#CCCCCC"> but chances are</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> that</font>

421
00:25:14,730 --> 00:25:17,910
to have success you<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> experiment a</font>

422
00:25:17,910 --> 00:25:23,480
lot<font color="#E5E5E5"> and the outcome is</font><font color="#CCCCCC"> still uncertain</font>

423
00:25:26,010 --> 00:25:30,200
<font color="#E5E5E5">okay so now let's look how</font>

424
00:25:30,200 --> 00:25:32,250
parameterization of point system<font color="#CCCCCC"> work in</font>

425
00:25:32,250 --> 00:25:33,960
<font color="#CCCCCC">the context of approximate policy</font>

426
00:25:33,960 --> 00:25:39,480
<font color="#CCCCCC">direction in in in</font><font color="#E5E5E5"> policy direction you</font>

427
00:25:39,480 --> 00:25:42,210
have<font color="#CCCCCC"> policy evaluation and you also have</font>

428
00:25:42,210 --> 00:25:44,940
policy improvement<font color="#E5E5E5"> policy improvement</font>

429
00:25:44,940 --> 00:25:48,510
involves a minimization<font color="#E5E5E5"> overall policies</font>

430
00:25:48,510 --> 00:25:52,169
right<font color="#CCCCCC"> over all</font><font color="#E5E5E5"> controls suppose</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> try</font>

431
00:25:52,169 --> 00:25:54,690
to do the minimization<font color="#E5E5E5"> only over the</font>

432
00:25:54,690 --> 00:25:58,160
parametrized<font color="#E5E5E5"> class then you get</font>

433
00:25:58,160 --> 00:26:01,620
approximate policy improvement<font color="#E5E5E5"> you may</font>

434
00:26:01,620 --> 00:26:03,900
have approximate policy<font color="#CCCCCC"> duration but</font><font color="#E5E5E5"> you</font>

435
00:26:03,900 --> 00:26:06,110
get approximate policy improvement

436
00:26:06,110 --> 00:26:09,480
involving the<font color="#E5E5E5"> parametrized class so</font>

437
00:26:09,480 --> 00:26:10,950
let's look at those a<font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more</font>

438
00:26:10,950 --> 00:26:19,590
closely given a certain<font color="#E5E5E5"> policy defined</font>

439
00:26:19,590 --> 00:26:24,059
by<font color="#E5E5E5"> its it's a parameter vector we</font>

440
00:26:24,059 --> 00:26:26,640
<font color="#CCCCCC">evaluated</font><font color="#E5E5E5"> perhaps approximately with</font>

441
00:26:26,640 --> 00:26:28,860
some critics<font color="#CCCCCC"> some kind of approximate</font>

442
00:26:28,860 --> 00:26:31,890
policy evaluation that produces some J

443
00:26:31,890 --> 00:26:35,790
<font color="#E5E5E5">tilde of</font><font color="#CCCCCC"> mu</font><font color="#E5E5E5"> okay so this is a legitimate</font>

444
00:26:35,790 --> 00:26:40,669
<font color="#E5E5E5">cost approximator of policy and then</font>

445
00:26:40,669 --> 00:26:43,950
instead of<font color="#E5E5E5"> using the policy improvement</font>

446
00:26:43,950 --> 00:26:46,799
process which is like so minimizing<font color="#E5E5E5"> this</font>

447
00:26:46,799 --> 00:26:49,860
expression we do it approximately<font color="#E5E5E5"> by</font>

448
00:26:49,860 --> 00:26:53,250
minimizing over<font color="#E5E5E5"> a parametric class of</font>

449
00:26:53,250 --> 00:26:58,110
policies<font color="#E5E5E5"> now that means</font><font color="#CCCCCC"> that we minimize</font>

450
00:26:58,110 --> 00:27:01,200
over weight vectors<font color="#E5E5E5"> of the parametric</font>

451
00:27:01,200 --> 00:27:05,250
class some kind<font color="#E5E5E5"> of cost function</font><font color="#CCCCCC"> that</font>

452
00:27:05,250 --> 00:27:09,530
weights the various components here so

453
00:27:09,530 --> 00:27:14,429
you want to to minimize over<font color="#CCCCCC"> R</font><font color="#E5E5E5"> this</font>

454
00:27:14,429 --> 00:27:17,010
expression<font color="#E5E5E5"> and you take</font><font color="#CCCCCC"> weight and you</font>

455
00:27:17,010 --> 00:27:20,309
weigh the various states<font color="#E5E5E5"> with with</font>

456
00:27:20,309 --> 00:27:25,080
<font color="#E5E5E5">different weights</font><font color="#CCCCCC"> and you can try to do</font>

457
00:27:25,080 --> 00:27:27,780
this<font color="#E5E5E5"> by some means some type</font><font color="#CCCCCC"> of gradient</font>

458
00:27:27,780 --> 00:27:30,240
<font color="#CCCCCC">method but in the space of parameter</font>

459
00:27:30,240 --> 00:27:32,630
vectors

460
00:27:34,840 --> 00:27:38,620
so here a<font color="#E5E5E5"> gradient type of method given</font>

461
00:27:38,620 --> 00:27:42,010
<font color="#CCCCCC">a set of parameters of the actor</font><font color="#E5E5E5"> moves</font>

462
00:27:42,010 --> 00:27:44,410
along the direction<font color="#E5E5E5"> of this of the</font>

463
00:27:44,410 --> 00:27:46,630
gradient of this expression<font color="#CCCCCC"> to get a new</font>

464
00:27:46,630 --> 00:27:49,210
actor value than a new actor value and

465
00:27:49,210 --> 00:27:49,960
so<font color="#E5E5E5"> on</font>

466
00:27:49,960 --> 00:27:53,200
perhaps one or more several steps so

467
00:27:53,200 --> 00:27:57,430
it's an alternation<font color="#CCCCCC"> of critic</font><font color="#E5E5E5"> implement</font>

468
00:27:57,430 --> 00:28:03,190
critic approximations<font color="#E5E5E5"> and actor steps in</font>

469
00:28:03,190 --> 00:28:10,930
between<font color="#E5E5E5"> the critic changes schemes like</font>

470
00:28:10,930 --> 00:28:12,880
<font color="#CCCCCC">that have</font><font color="#E5E5E5"> been used</font><font color="#CCCCCC"> extensively in</font><font color="#E5E5E5"> the</font>

471
00:28:12,880 --> 00:28:14,860
field of adaptive dynamic programming

472
00:28:14,860 --> 00:28:16,810
<font color="#E5E5E5">for</font><font color="#CCCCCC"> continuous pace deterministic</font>

473
00:28:16,810 --> 00:28:19,290
problems particular this adaptive

474
00:28:19,290 --> 00:28:22,690
<font color="#E5E5E5">capable systems unknown parameters</font><font color="#CCCCCC"> it's</font>

475
00:28:22,690 --> 00:28:24,790
<font color="#E5E5E5">a lot of research here very active field</font>

476
00:28:24,790 --> 00:28:29,830
of research<font color="#CCCCCC"> and there are</font><font color="#E5E5E5"> considerable</font>

477
00:28:29,830 --> 00:28:31,740
theoretical issues to be resolved

478
00:28:31,740 --> 00:28:34,180
particularly for stochastic problems

479
00:28:34,180 --> 00:28:35,290
most of<font color="#E5E5E5"> the work has been for</font>

480
00:28:35,290 --> 00:28:37,780
deterministic problems and even<font color="#E5E5E5"> for</font>

481
00:28:37,780 --> 00:28:42,400
those there<font color="#CCCCCC"> is a lot</font><font color="#E5E5E5"> of a lot of mystery</font>

482
00:28:42,400 --> 00:28:50,050
about<font color="#E5E5E5"> how these methods work any</font>

483
00:28:50,050 --> 00:28:52,440
questions

484
00:28:53,929 --> 00:29:06,330
yeah this can be different<font color="#E5E5E5"> yeah this is</font>

485
00:29:06,330 --> 00:29:09,120
an this<font color="#CCCCCC"> is in the context of actor</font>

486
00:29:09,120 --> 00:29:15,179
critic<font color="#E5E5E5"> methods a critic is okay an actor</font>

487
00:29:15,179 --> 00:29:18,809
is evaluated by<font color="#CCCCCC"> a critic and</font><font color="#E5E5E5"> then the</font>

488
00:29:18,809 --> 00:29:24,200
actor<font color="#CCCCCC"> tries to perform</font><font color="#E5E5E5"> approximate</font>

489
00:29:24,200 --> 00:29:26,640
policy improvement<font color="#CCCCCC"> the critic does</font>

490
00:29:26,640 --> 00:29:29,070
approximate policy evaluation the actor

491
00:29:29,070 --> 00:29:31,770
does approximate policy improvement each

492
00:29:31,770 --> 00:29:35,480
one within<font color="#E5E5E5"> its own parameter space</font>

493
00:29:35,480 --> 00:29:38,599
[Applause]

494
00:29:41,850 --> 00:29:47,100
the<font color="#CCCCCC"> nation policy</font><font color="#E5E5E5"> space</font>

495
00:29:57,960 --> 00:30:00,610
<font color="#E5E5E5">okay your question has to do with this</font>

496
00:30:00,610 --> 00:30:02,710
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> we mentioned it's possible to</font><font color="#E5E5E5"> have</font>

497
00:30:02,710 --> 00:30:06,730
a different<font color="#E5E5E5"> approximation for the cost</font>

498
00:30:06,730 --> 00:30:08,380
function a different approximation for

499
00:30:08,380 --> 00:30:11,409
the policy now in this stage here in

500
00:30:11,409 --> 00:30:12,850
<font color="#E5E5E5">this equation there is only one</font>

501
00:30:12,850 --> 00:30:16,179
approximator<font color="#E5E5E5"> the approximator is in R</font>

502
00:30:16,179 --> 00:30:19,570
but<font color="#CCCCCC"> it is defined implicitly by an</font>

503
00:30:19,570 --> 00:30:22,929
<font color="#CCCCCC">approximator</font><font color="#E5E5E5"> of cost okay so this is</font>

504
00:30:22,929 --> 00:30:26,139
really<font color="#E5E5E5"> an actor system which uses</font>

505
00:30:26,139 --> 00:30:30,570
<font color="#E5E5E5">acrylic</font><font color="#CCCCCC"> in order to define</font><font color="#E5E5E5"> the actor</font>

506
00:30:38,820 --> 00:30:42,370
this R is defined implicitly through the

507
00:30:42,370 --> 00:30:45,669
critic approximation but you will use

508
00:30:45,669 --> 00:30:48,789
this in a scheme which minimizes this

509
00:30:48,789 --> 00:30:51,480
expression

510
00:30:56,440 --> 00:31:00,140
<font color="#E5E5E5">okay so let's take a break for</font><font color="#CCCCCC"> 5-10</font>

511
00:31:00,140 --> 00:31:03,350
minutes<font color="#CCCCCC"> and we'll close the course</font><font color="#E5E5E5"> and</font>

512
00:31:03,350 --> 00:31:05,390
you may ask<font color="#E5E5E5"> also your questions</font>

513
00:31:05,390 --> 00:31:11,570
and and and so let's<font color="#E5E5E5"> get back in the ten</font>

514
00:31:11,570 --> 00:31:13,870
<font color="#E5E5E5">minutes</font>

515
00:31:31,620 --> 00:31:38,020
<font color="#E5E5E5">okay so we are very close</font><font color="#CCCCCC"> to the end of</font>

516
00:31:38,020 --> 00:31:43,270
the course<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> carried a lot of</font>

517
00:31:43,270 --> 00:31:46,000
<font color="#E5E5E5">material</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> than I thought actually</font><font color="#CCCCCC"> we</font>

518
00:31:46,000 --> 00:31:48,430
would but<font color="#E5E5E5"> still there are many many</font>

519
00:31:48,430 --> 00:31:50,620
topics<font color="#CCCCCC"> that we have not covered</font><font color="#E5E5E5"> I'll</font>

520
00:31:50,620 --> 00:31:53,290
just make a list<font color="#E5E5E5"> of those cases someone</font>

521
00:31:53,290 --> 00:31:55,420
<font color="#E5E5E5">wants to ask some questions</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> know</font>

522
00:31:55,420 --> 00:31:59,020
or after the end of<font color="#E5E5E5"> the class</font><font color="#CCCCCC"> we have</font>

523
00:31:59,020 --> 00:32:01,060
focused on discounted<font color="#E5E5E5"> finite state</font>

524
00:32:01,060 --> 00:32:05,980
problems<font color="#CCCCCC"> but with but</font><font color="#E5E5E5"> that there are</font>

525
00:32:05,980 --> 00:32:07,750
continuous time version of those the

526
00:32:07,750 --> 00:32:10,690
semi<font color="#E5E5E5"> Markov problems the theory for</font>

527
00:32:10,690 --> 00:32:12,670
those the approximation algorithms and

528
00:32:12,670 --> 00:32:15,280
all that are very similar<font color="#CCCCCC"> to the</font>

529
00:32:15,280 --> 00:32:16,870
<font color="#E5E5E5">discounted case it's just that the</font>

530
00:32:16,870 --> 00:32:21,780
discount<font color="#E5E5E5"> factor</font><font color="#CCCCCC"> is a state dependent we</font>

531
00:32:21,780 --> 00:32:23,980
there<font color="#E5E5E5"> are stochastic shortest path</font>

532
00:32:23,980 --> 00:32:25,600
problems there are<font color="#E5E5E5"> discounted and</font>

533
00:32:25,600 --> 00:32:28,030
involves a terminal<font color="#CCCCCC"> stay to which you</font>

534
00:32:28,030 --> 00:32:30,480
going to go with minimum<font color="#E5E5E5"> expected cost</font>

535
00:32:30,480 --> 00:32:33,820
they<font color="#CCCCCC"> have similar theory to discounted</font>

536
00:32:33,820 --> 00:32:36,940
problems but<font color="#E5E5E5"> it's it's a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit more</font>

537
00:32:36,940 --> 00:32:39,790
tricky<font color="#E5E5E5"> but a lot of the theory extends</font>

538
00:32:39,790 --> 00:32:42,340
average cost problems are still<font color="#E5E5E5"> more</font>

539
00:32:42,340 --> 00:32:44,200
tricky but some of the theory expand

540
00:32:44,200 --> 00:32:47,440
extends sequential games where in

541
00:32:47,440 --> 00:32:49,360
addition<font color="#CCCCCC"> to the expectation it's</font><font color="#E5E5E5"> the</font>

542
00:32:49,360 --> 00:32:51,640
<font color="#E5E5E5">stochastic nature of the problem there's</font>

543
00:32:51,640 --> 00:32:54,640
also an antagonistic opponent the the

544
00:32:54,640 --> 00:32:58,150
approximation<font color="#E5E5E5"> theory for those is is</font>

545
00:32:58,150 --> 00:33:00,450
more<font color="#CCCCCC"> complicated as far as I know</font>

546
00:33:00,450 --> 00:33:03,670
<font color="#E5E5E5">incomplete</font><font color="#CCCCCC"> because this is</font><font color="#E5E5E5"> they're just</font>

547
00:33:03,670 --> 00:33:06,460
<font color="#CCCCCC">more difficult</font><font color="#E5E5E5"> problems and this</font><font color="#CCCCCC"> is the</font>

548
00:33:06,460 --> 00:33:08,590
maximization operation that makes<font color="#E5E5E5"> things</font>

549
00:33:08,590 --> 00:33:12,390
complicated when you try<font color="#E5E5E5"> to do sampling</font>

550
00:33:12,630 --> 00:33:15,130
<font color="#CCCCCC">continuous space problems well we talked</font>

551
00:33:15,130 --> 00:33:18,940
<font color="#CCCCCC">about them this at some points in</font><font color="#E5E5E5"> the</font>

552
00:33:18,940 --> 00:33:26,430
class we mentioned that that when well

553
00:33:26,430 --> 00:33:28,660
they are<font color="#E5E5E5"> interesting in the context of</font>

554
00:33:28,660 --> 00:33:31,540
adaptive dynamic programming and we

555
00:33:31,540 --> 00:33:32,310
haven't<font color="#E5E5E5"> gone too</font>

556
00:33:32,310 --> 00:33:34,680
into<font color="#E5E5E5"> this subject it's a very fertile</font>

557
00:33:34,680 --> 00:33:36,570
<font color="#E5E5E5">ground</font><font color="#CCCCCC"> for further research and</font>

558
00:33:36,570 --> 00:33:40,650
application<font color="#CCCCCC"> continuous</font><font color="#E5E5E5"> time problems to</font>

559
00:33:40,650 --> 00:33:42,810
<font color="#CCCCCC">have with continuous space</font><font color="#E5E5E5"> these are</font>

560
00:33:42,810 --> 00:33:47,300
<font color="#E5E5E5">continuous time optimal control problems</font>

561
00:33:47,300 --> 00:33:51,420
<font color="#CCCCCC">they're very interesting</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we have not</font>

562
00:33:51,420 --> 00:33:53,520
discussed them and they also have this

563
00:33:53,520 --> 00:33:57,090
<font color="#E5E5E5">interesting idea of</font><font color="#CCCCCC"> Amy to approximate</font>

564
00:33:57,090 --> 00:33:59,670
the derivative<font color="#E5E5E5"> of the cost to go</font>

565
00:33:59,670 --> 00:34:01,740
function as opposed<font color="#E5E5E5"> to the cost to the</font>

566
00:34:01,740 --> 00:34:05,010
cost function itself<font color="#CCCCCC"> this is an area</font>

567
00:34:05,010 --> 00:34:08,940
where there's a<font color="#E5E5E5"> lot of a lot of things</font>

568
00:34:08,940 --> 00:34:13,620
<font color="#E5E5E5">to be</font><font color="#CCCCCC"> done to clarify and and some of</font>

569
00:34:13,620 --> 00:34:16,920
you may<font color="#E5E5E5"> want to look into those adaptive</font>

570
00:34:16,920 --> 00:34:20,429
dynamic programming for deterministic

571
00:34:20,429 --> 00:34:23,520
optimal control problems<font color="#E5E5E5"> there is the</font>

572
00:34:23,520 --> 00:34:26,190
issue<font color="#E5E5E5"> of again if you have continuous</font>

573
00:34:26,190 --> 00:34:28,590
time problems<font color="#E5E5E5"> then there's the issue of</font>

574
00:34:28,590 --> 00:34:30,780
cost function approximation of<font color="#E5E5E5"> cost</font>

575
00:34:30,780 --> 00:34:32,219
<font color="#CCCCCC">functions everybody's or cost function</font>

576
00:34:32,219 --> 00:34:34,290
differences<font color="#CCCCCC"> I think this is an area</font>

577
00:34:34,290 --> 00:34:38,280
<font color="#CCCCCC">where that's not</font><font color="#E5E5E5"> very clear and needs a</font>

578
00:34:38,280 --> 00:34:42,060
lot<font color="#CCCCCC"> of research approximation policy</font>

579
00:34:42,060 --> 00:34:44,280
space<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think from my comments you may</font>

580
00:34:44,280 --> 00:34:46,290
have<font color="#CCCCCC"> realized that it's</font><font color="#E5E5E5"> not a</font><font color="#CCCCCC"> failsafe</font>

581
00:34:46,290 --> 00:34:48,239
type of method there's a lot of research

582
00:34:48,239 --> 00:34:52,770
<font color="#CCCCCC">to be done</font><font color="#E5E5E5"> in random search</font><font color="#CCCCCC"> and gradient</font>

583
00:34:52,770 --> 00:34:56,400
type methods<font color="#E5E5E5"> here's a subject</font><font color="#CCCCCC"> that we</font>

584
00:34:56,400 --> 00:34:59,630
did not discuss<font color="#E5E5E5"> how do we pick the the</font>

585
00:34:59,630 --> 00:35:02,820
<font color="#E5E5E5">the approximation architecture how do we</font>

586
00:35:02,820 --> 00:35:05,340
pick the basis functions<font color="#E5E5E5"> suppose</font><font color="#CCCCCC"> that we</font>

587
00:35:05,340 --> 00:35:07,320
have our collection of basis functions

588
00:35:07,320 --> 00:35:08,750
to choose<font color="#E5E5E5"> from which are parameterized</font>

589
00:35:08,750 --> 00:35:11,310
<font color="#CCCCCC">can we make an optimal choice between</font>

590
00:35:11,310 --> 00:35:14,760
them<font color="#E5E5E5"> bye-bye within this parametric</font>

591
00:35:14,760 --> 00:35:18,000
class is it possible to generate basis

592
00:35:18,000 --> 00:35:20,250
functions automatically<font color="#E5E5E5"> some very very</font>

593
00:35:20,250 --> 00:35:21,210
important questions

594
00:35:21,210 --> 00:35:25,920
<font color="#E5E5E5">but not enough has been</font><font color="#CCCCCC"> done in this</font>

595
00:35:25,920 --> 00:35:30,830
area<font color="#E5E5E5"> yet fertile ground for research</font>

596
00:35:31,310 --> 00:35:33,990
<font color="#E5E5E5">okay here's another area from discussed</font>

597
00:35:33,990 --> 00:35:37,410
at all<font color="#CCCCCC"> a lot of the things</font><font color="#E5E5E5"> that we</font>

598
00:35:37,410 --> 00:35:40,290
covered had to do with<font color="#E5E5E5"> solving linear</font>

599
00:35:40,290 --> 00:35:44,100
problems such as<font color="#E5E5E5"> linear equations</font><font color="#CCCCCC"> or</font>

600
00:35:44,100 --> 00:35:45,060
least squares

601
00:35:45,060 --> 00:35:47,670
<font color="#E5E5E5">squares problems and solve</font><font color="#CCCCCC"> them by</font>

602
00:35:47,670 --> 00:35:51,120
simulation<font color="#E5E5E5"> in other words using Monte</font>

603
00:35:51,120 --> 00:35:54,180
Carlo methods to solve<font color="#E5E5E5"> linear problems</font>

604
00:35:54,180 --> 00:35:58,290
<font color="#E5E5E5">now these problems arose in dynamic</font>

605
00:35:58,290 --> 00:36:01,470
programming<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> class but the ideas</font>

606
00:36:01,470 --> 00:36:04,770
extend much more generally so you might

607
00:36:04,770 --> 00:36:07,380
talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> a field that</font><font color="#E5E5E5"> you might</font><font color="#CCCCCC"> name</font>

608
00:36:07,380 --> 00:36:11,100
<font color="#E5E5E5">Monte Carlo linear algebra</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> is the</font>

609
00:36:11,100 --> 00:36:13,680
use<font color="#CCCCCC"> of Monte Carlo</font><font color="#E5E5E5"> methods to solve</font>

610
00:36:13,680 --> 00:36:18,270
<font color="#E5E5E5">linear problems that arise in fields</font>

611
00:36:18,270 --> 00:36:20,610
other than<font color="#E5E5E5"> dynamic programming not only</font>

612
00:36:20,610 --> 00:36:25,290
dynamic programming there is the husband

613
00:36:25,290 --> 00:36:27,270
<font color="#E5E5E5">work in this area it's an old field by</font>

614
00:36:27,270 --> 00:36:30,480
<font color="#E5E5E5">the way he dates Monte Carlo methods for</font>

615
00:36:30,480 --> 00:36:32,790
<font color="#CCCCCC">solving linear equations had had been</font>

616
00:36:32,790 --> 00:36:36,960
advocated by<font color="#CCCCCC"> fond Newman 91950</font><font color="#E5E5E5"> it's an</font>

617
00:36:36,960 --> 00:36:38,880
old idea<font color="#E5E5E5"> to use simulation</font><font color="#CCCCCC"> to solve</font>

618
00:36:38,880 --> 00:36:41,520
<font color="#CCCCCC">linear problems but it has received a</font>

619
00:36:41,520 --> 00:36:45,660
lot of<font color="#CCCCCC"> attention recently</font><font color="#E5E5E5"> and that</font><font color="#CCCCCC"> means</font>

620
00:36:45,660 --> 00:36:52,560
an interesting field for research<font color="#CCCCCC"> ok</font>

621
00:36:52,560 --> 00:36:54,750
now let's focus<font color="#E5E5E5"> on the things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

622
00:36:54,750 --> 00:36:58,260
have covered<font color="#CCCCCC"> we</font><font color="#E5E5E5"> cover met we went</font>

623
00:36:58,260 --> 00:37:00,720
<font color="#E5E5E5">through many methods and I want to tell</font>

624
00:37:00,720 --> 00:37:02,190
you right<font color="#E5E5E5"> ahead of time with certainty</font>

625
00:37:02,190 --> 00:37:03,720
<font color="#CCCCCC">that there is no clear winner</font><font color="#E5E5E5"> there is</font>

626
00:37:03,720 --> 00:37:05,340
no best method if you're looking for a

627
00:37:05,340 --> 00:37:08,010
best method<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> no such thing</font><font color="#E5E5E5"> there</font>

628
00:37:08,010 --> 00:37:10,350
are good methods for some<font color="#E5E5E5"> problems and</font>

629
00:37:10,350 --> 00:37:12,780
<font color="#CCCCCC">it's a variety of methods</font><font color="#E5E5E5"> and it's</font>

630
00:37:12,780 --> 00:37:15,750
important to understand them both

631
00:37:15,750 --> 00:37:20,310
theoretically and<font color="#E5E5E5"> and be aware however</font>

632
00:37:20,310 --> 00:37:23,190
that they do not provide higher on<font color="#CCCCCC"> clad</font>

633
00:37:23,190 --> 00:37:27,270
performance guarantees<font color="#E5E5E5"> you may try a</font>

634
00:37:27,270 --> 00:37:29,820
method<font color="#E5E5E5"> but there's no guarantee it's</font>

635
00:37:29,820 --> 00:37:32,070
going to work<font color="#CCCCCC"> you may have to try</font>

636
00:37:32,070 --> 00:37:34,530
<font color="#CCCCCC">several methods or you may have</font><font color="#E5E5E5"> to be</font>

637
00:37:34,530 --> 00:37:36,600
more creative about<font color="#CCCCCC"> how you</font><font color="#E5E5E5"> apply</font><font color="#CCCCCC"> it or</font>

638
00:37:36,600 --> 00:37:39,360
<font color="#E5E5E5">maybe invent a new method for</font><font color="#CCCCCC"> your</font>

639
00:37:39,360 --> 00:37:43,050
problem all types of methods have major

640
00:37:43,050 --> 00:37:46,880
flaws in approximate policy duration

641
00:37:46,880 --> 00:37:51,120
projected equations particular<font color="#E5E5E5"> you have</font>

642
00:37:51,120 --> 00:37:54,810
the issue<font color="#CCCCCC"> of oscillations in</font><font color="#E5E5E5"> the issue</font>

643
00:37:54,810 --> 00:37:56,350
of exploration

644
00:37:56,350 --> 00:38:00,520
in aggregation you have restrictions<font color="#E5E5E5"> on</font>

645
00:38:00,520 --> 00:38:02,830
<font color="#E5E5E5">the approximation architecture in other</font>

646
00:38:02,830 --> 00:38:04,480
words the basis<font color="#E5E5E5"> functions happy to be</font>

647
00:38:04,480 --> 00:38:05,890
defined in terms<font color="#CCCCCC"> of probability</font>

648
00:38:05,890 --> 00:38:10,810
<font color="#CCCCCC">distribution and that's a restriction if</font>

649
00:38:10,810 --> 00:38:12,580
you want to do approximation in<font color="#CCCCCC"> policy</font>

650
00:38:12,580 --> 00:38:15,580
space optimization<font color="#CCCCCC"> policy space then all</font>

651
00:38:15,580 --> 00:38:18,220
the methods available<font color="#E5E5E5"> for this at flaky</font>

652
00:38:18,220 --> 00:38:21,910
<font color="#E5E5E5">are unreliable gradient methods based on</font>

653
00:38:21,910 --> 00:38:25,830
simulation random search these methods

654
00:38:25,830 --> 00:38:32,860
<font color="#E5E5E5">this may or may not work for you despite</font>

655
00:38:32,860 --> 00:38:37,410
<font color="#E5E5E5">all this discarding and disappointing</font>

656
00:38:37,410 --> 00:38:40,720
picture<font color="#E5E5E5"> there have been impressive</font>

657
00:38:40,720 --> 00:38:44,170
successes with enormous<font color="#CCCCCC"> Lee complex</font>

658
00:38:44,170 --> 00:38:47,080
problems for which often there is no

659
00:38:47,080 --> 00:38:51,100
<font color="#CCCCCC">alternative methodology we are looking</font>

660
00:38:51,100 --> 00:38:53,710
at<font color="#E5E5E5"> difficult problems for which there</font>

661
00:38:53,710 --> 00:38:56,710
<font color="#E5E5E5">are few</font><font color="#CCCCCC"> methods</font><font color="#E5E5E5"> and you should not be</font>

662
00:38:56,710 --> 00:39:00,790
<font color="#E5E5E5">discouraged by the fact</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> that we</font>

663
00:39:00,790 --> 00:39:02,020
don't have a<font color="#E5E5E5"> methodology that's</font>

664
00:39:02,020 --> 00:39:09,370
<font color="#E5E5E5">foolproof we have focused on approximate</font>

665
00:39:09,370 --> 00:39:11,200
policy duration approximate value

666
00:39:11,200 --> 00:39:14,160
duration q-learning

667
00:39:14,160 --> 00:39:17,710
<font color="#E5E5E5">versions amusing few factors but there</font>

668
00:39:17,710 --> 00:39:19,120
are also some other methods that<font color="#E5E5E5"> we have</font>

669
00:39:19,120 --> 00:39:22,090
<font color="#CCCCCC">not covered at</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> we mentioned</font><font color="#E5E5E5"> rollout</font>

670
00:39:22,090 --> 00:39:25,270
which is very simple often successful

671
00:39:25,270 --> 00:39:28,750
and generally reliable<font color="#CCCCCC"> if I had to pick</font>

672
00:39:28,750 --> 00:39:30,460
<font color="#CCCCCC">the</font><font color="#E5E5E5"> most reliable method</font><font color="#CCCCCC"> within this</font>

673
00:39:30,460 --> 00:39:34,810
landscape<font color="#CCCCCC"> but all out is the</font><font color="#E5E5E5"> one it it</font>

674
00:39:34,810 --> 00:39:37,170
doesn't<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not very ambitious but</font>

675
00:39:37,170 --> 00:39:39,910
<font color="#CCCCCC">reliable and often will give you very</font>

676
00:39:39,910 --> 00:39:43,330
<font color="#CCCCCC">good results approximate linear</font>

677
00:39:43,330 --> 00:39:46,350
programming<font color="#CCCCCC"> which uses linear</font>

678
00:39:46,350 --> 00:39:49,300
architectures<font color="#E5E5E5"> to approximate a certain</font>

679
00:39:49,300 --> 00:39:52,570
linear<font color="#E5E5E5"> programming</font><font color="#CCCCCC"> formulation of the</font>

680
00:39:52,570 --> 00:39:57,010
bellman equation<font color="#E5E5E5"> for</font><font color="#CCCCCC"> MVP is</font><font color="#E5E5E5"> is also</font>

681
00:39:57,010 --> 00:39:59,650
<font color="#CCCCCC">another methodology</font><font color="#E5E5E5"> that has its</font>

682
00:39:59,650 --> 00:40:03,580
<font color="#CCCCCC">successors and has received attention</font>

683
00:40:03,580 --> 00:40:04,990
both<font color="#CCCCCC"> fear</font>

684
00:40:04,990 --> 00:40:07,240
<font color="#E5E5E5">it can be</font><font color="#CCCCCC"> impractically</font><font color="#E5E5E5"> it's another</font>

685
00:40:07,240 --> 00:40:13,119
alternative<font color="#E5E5E5"> worth considering</font><font color="#CCCCCC"> I hope I</font>

686
00:40:13,119 --> 00:40:15,010
gave<font color="#CCCCCC"> the message</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> you that even though</font>

687
00:40:15,010 --> 00:40:16,480
this<font color="#E5E5E5"> is a field where there's a lot of</font>

688
00:40:16,480 --> 00:40:18,460
trial<font color="#CCCCCC"> and error</font><font color="#E5E5E5"> theoretical</font>

689
00:40:18,460 --> 00:40:20,710
understanding is very<font color="#E5E5E5"> important in the</font>

690
00:40:20,710 --> 00:40:24,520
fear is non-trivial<font color="#CCCCCC"> you need to to dig</font>

691
00:40:24,520 --> 00:40:27,310
into the theory to<font color="#CCCCCC"> be able to apply</font>

692
00:40:27,310 --> 00:40:31,030
<font color="#E5E5E5">these methods in practice still however</font>

693
00:40:31,030 --> 00:40:33,100
<font color="#E5E5E5">for all the theory that</font><font color="#CCCCCC"> you may know</font>

694
00:40:33,100 --> 00:40:36,970
practice is a challenge<font color="#E5E5E5"> it's an art in a</font>

695
00:40:36,970 --> 00:40:42,580
challenge<font color="#E5E5E5"> to creativity very difficult</font>

696
00:40:42,580 --> 00:40:47,530
problems you should<font color="#E5E5E5"> expect that so</font>

697
00:40:47,530 --> 00:40:50,550
that's it that's all<font color="#E5E5E5"> I have to</font><font color="#CCCCCC"> say and</font>

698
00:40:50,550 --> 00:40:53,020
now it's a good<font color="#E5E5E5"> time to ask</font><font color="#CCCCCC"> questions</font>

699
00:40:53,020 --> 00:40:55,780
<font color="#CCCCCC">and incidentally if someone has a longer</font>

700
00:40:55,780 --> 00:40:59,170
question<font color="#CCCCCC"> perhaps we can discuss</font><font color="#E5E5E5"> it after</font>

701
00:40:59,170 --> 00:41:01,810
the class or during<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> couple of</font>

702
00:41:01,810 --> 00:41:03,400
<font color="#CCCCCC">weeks that</font><font color="#E5E5E5"> I'm going to</font><font color="#CCCCCC"> be here I think</font>

703
00:41:03,400 --> 00:41:07,030
<font color="#CCCCCC">why</font><font color="#E5E5E5"> you may send me an email and try to</font>

704
00:41:07,030 --> 00:41:13,440
make a arrange a meeting so questions

705
00:41:19,940 --> 00:41:20,950
yes

706
00:41:20,950 --> 00:41:24,070
[Music]

707
00:41:27,640 --> 00:41:30,820
[Music]

708
00:41:49,049 --> 00:41:54,500
we knew already<font color="#E5E5E5"> the pro-soviet</font>

709
00:41:56,390 --> 00:42:03,410
so my question is what is the<font color="#E5E5E5"> efficient</font>

710
00:42:06,090 --> 00:42:09,199
[Music]

711
00:42:14,530 --> 00:42:17,780
<font color="#E5E5E5">okay so your question has to do with a</font>

712
00:42:17,780 --> 00:42:19,850
<font color="#CCCCCC">linear programming approach toward</font>

713
00:42:19,850 --> 00:42:23,270
solving dynamic programming problems and

714
00:42:23,270 --> 00:42:26,890
whether this is<font color="#CCCCCC"> an efficient</font><font color="#E5E5E5"> approach</font>

715
00:42:26,890 --> 00:42:30,530
for exact<font color="#CCCCCC"> implementation and</font><font color="#E5E5E5"> also for</font>

716
00:42:30,530 --> 00:42:33,860
approximate implementation okay let me

717
00:42:33,860 --> 00:42:37,310
say a<font color="#E5E5E5"> few things about linear program</font>

718
00:42:37,310 --> 00:42:40,880
this refers to this<font color="#CCCCCC"> Bellman's</font><font color="#E5E5E5"> equation</font>

719
00:42:40,880 --> 00:42:43,430
can<font color="#CCCCCC"> be equivalently written as the</font>

720
00:42:43,430 --> 00:42:45,590
solution of a linear program<font color="#E5E5E5"> and this</font>

721
00:42:45,590 --> 00:42:48,980
linear program involves involves<font color="#CCCCCC"> a large</font>

722
00:42:48,980 --> 00:42:52,910
dimension potentially<font color="#E5E5E5"> there is a</font>

723
00:42:52,910 --> 00:42:57,050
variable for every every<font color="#E5E5E5"> state and</font>

724
00:42:57,050 --> 00:42:59,930
control pair<font color="#E5E5E5"> okay and there's a</font>

725
00:42:59,930 --> 00:43:03,350
constraint<font color="#CCCCCC"> for I'm sorry there's</font><font color="#E5E5E5"> a</font>

726
00:43:03,350 --> 00:43:05,540
variable<font color="#E5E5E5"> for</font><font color="#CCCCCC"> every state and there's a</font>

727
00:43:05,540 --> 00:43:07,190
constraint<font color="#E5E5E5"> for every state and control</font>

728
00:43:07,190 --> 00:43:12,950
pair so so so but it<font color="#CCCCCC"> is a legitimate</font>

729
00:43:12,950 --> 00:43:18,080
<font color="#E5E5E5">method for solving exactly finite state</font>

730
00:43:18,080 --> 00:43:20,120
dynamic programming problems it cannot

731
00:43:20,120 --> 00:43:21,740
be<font color="#CCCCCC"> applied to infinite state dynamic</font>

732
00:43:21,740 --> 00:43:23,930
programming problems because there are

733
00:43:23,930 --> 00:43:26,300
no infinite dimensional linear programs

734
00:43:26,300 --> 00:43:27,530
there are no<font color="#E5E5E5"> algorithms for infinite</font>

735
00:43:27,530 --> 00:43:29,270
dimensional linear programs that are

736
00:43:29,270 --> 00:43:34,820
effective<font color="#CCCCCC"> the</font><font color="#E5E5E5"> actual linear programming</font>

737
00:43:34,820 --> 00:43:36,980
and<font color="#E5E5E5"> policy</font><font color="#CCCCCC"> direction are related</font><font color="#E5E5E5"> in</font>

738
00:43:36,980 --> 00:43:39,080
other words one can show<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the policy</font>

739
00:43:39,080 --> 00:43:41,150
<font color="#CCCCCC">Direction is an</font><font color="#E5E5E5"> execution of some</font>

740
00:43:41,150 --> 00:43:43,280
variant of<font color="#CCCCCC"> the simplex method that</font>

741
00:43:43,280 --> 00:43:45,230
solves the<font color="#E5E5E5"> same linear programming</font>

742
00:43:45,230 --> 00:43:49,780
problem<font color="#CCCCCC"> people have</font><font color="#E5E5E5"> used have looked at</font>

743
00:43:49,780 --> 00:43:52,930
this the issue of comparative efficiency

744
00:43:52,930 --> 00:44:00,080
by complexity analysis<font color="#E5E5E5"> and there has</font>

745
00:44:00,080 --> 00:44:01,970
been some interesting<font color="#CCCCCC"> work I</font><font color="#E5E5E5"> can't</font>

746
00:44:01,970 --> 00:44:04,670
remember<font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> the details</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> linear</font>

747
00:44:04,670 --> 00:44:06,470
programming is a polynomial<font color="#E5E5E5"> algorithm</font>

748
00:44:06,470 --> 00:44:08,690
<font color="#CCCCCC">and people have worked on complex</font>

749
00:44:08,690 --> 00:44:10,369
analysis for<font color="#E5E5E5"> policy direction they have</font>

750
00:44:10,369 --> 00:44:14,480
<font color="#E5E5E5">made</font><font color="#CCCCCC"> comparisons when it comes to</font>

751
00:44:14,480 --> 00:44:17,359
approximations<font color="#CCCCCC"> it's really very</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to</font>

752
00:44:17,359 --> 00:44:20,660
tell which whether approximate linear

753
00:44:20,660 --> 00:44:24,260
<font color="#E5E5E5">programming or</font><font color="#CCCCCC"> approximate policy</font>

754
00:44:24,260 --> 00:44:26,270
<font color="#E5E5E5">direction will work better on a given</font>

755
00:44:26,270 --> 00:44:30,560
problem it's it's just one<font color="#CCCCCC"> of those</font>

756
00:44:30,560 --> 00:44:32,390
things for<font color="#CCCCCC"> which there</font><font color="#E5E5E5"> are no</font><font color="#CCCCCC"> guarantees</font>

757
00:44:32,390 --> 00:44:34,280
<font color="#E5E5E5">in this field you can try both</font><font color="#CCCCCC"> of them</font>

758
00:44:34,280 --> 00:44:36,410
<font color="#E5E5E5">and see which one works better</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> there</font>

759
00:44:36,410 --> 00:44:38,060
are a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> cases that</font><font color="#E5E5E5"> is that argue</font>

760
00:44:38,060 --> 00:44:39,859
<font color="#CCCCCC">for approximate linear programming and</font>

761
00:44:39,859 --> 00:44:43,839
also<font color="#E5E5E5"> case studies that argue against it</font>

762
00:44:43,839 --> 00:44:47,270
so that's all I can<font color="#E5E5E5"> say there is no</font>

763
00:44:47,270 --> 00:44:48,710
clear answer for the case of

764
00:44:48,710 --> 00:44:57,970
approximations some other<font color="#E5E5E5"> questions</font>

765
00:45:03,430 --> 00:45:05,810
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to thank you for your</font>

766
00:45:05,810 --> 00:45:08,540
attendance<font color="#E5E5E5"> and like I said</font><font color="#CCCCCC"> you may</font>

767
00:45:08,540 --> 00:45:12,460
contact<font color="#CCCCCC"> me after the lecture</font>

768
00:45:12,700 --> 00:00:00,000
[Applause]

