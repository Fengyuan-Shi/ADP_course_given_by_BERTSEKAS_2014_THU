1
00:00:08,710 --> 00:00:11,849
[Music]

2
00:00:28,620 --> 00:00:38,239
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> is a new room and</font><font color="#E5E5E5"> a new direction</font>

3
00:00:38,239 --> 00:00:40,290
<font color="#CCCCCC">somewhat different direction in our</font>

4
00:00:40,290 --> 00:00:42,780
class in the<font color="#CCCCCC"> first</font><font color="#E5E5E5"> week the first</font><font color="#CCCCCC"> three</font>

5
00:00:42,780 --> 00:00:47,340
lectures were<font color="#E5E5E5"> primarily directed towards</font>

6
00:00:47,340 --> 00:00:50,970
background and overview<font color="#E5E5E5"> background on</font>

7
00:00:50,970 --> 00:00:53,340
exact dynamic programming with an

8
00:00:53,340 --> 00:00:55,980
emphasis<font color="#E5E5E5"> on discounted infinite horizon</font>

9
00:00:55,980 --> 00:01:00,020
problems and in the third lecture<font color="#E5E5E5"> an</font>

10
00:01:00,020 --> 00:01:03,120
overview of approximate dynamic

11
00:01:03,120 --> 00:01:08,460
programming which<font color="#CCCCCC"> is our subject</font><font color="#E5E5E5"> in this</font>

12
00:01:08,460 --> 00:01:10,740
week<font color="#E5E5E5"> these three lectures today</font>

13
00:01:10,740 --> 00:01:14,430
Wednesday and Friday<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to focus</font>

14
00:01:14,430 --> 00:01:17,160
selectively<font color="#E5E5E5"> on various topics of</font>

15
00:01:17,160 --> 00:01:20,250
approximate dynamic programming<font color="#CCCCCC"> we are</font>

16
00:01:20,250 --> 00:01:21,840
going to go into a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more</font>

17
00:01:21,840 --> 00:01:25,410
detail<font color="#E5E5E5"> but we will by no means exhaust</font>

18
00:01:25,410 --> 00:01:28,080
the subject we<font color="#E5E5E5"> will be very selective</font>

19
00:01:28,080 --> 00:01:30,390
<font color="#CCCCCC">we'll pick some of the important topics</font>

20
00:01:30,390 --> 00:01:33,600
<font color="#CCCCCC">and go a</font><font color="#E5E5E5"> little bit in depth into them</font>

21
00:01:33,600 --> 00:01:36,360
to give you an idea<font color="#CCCCCC"> of how the field</font>

22
00:01:36,360 --> 00:01:39,149
looks like<font color="#E5E5E5"> it will also give you a start</font>

23
00:01:39,149 --> 00:01:41,130
<font color="#E5E5E5">if you are interested to go more</font><font color="#CCCCCC"> deeply</font>

24
00:01:41,130 --> 00:01:44,849
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can get started and</font><font color="#E5E5E5"> expand your</font>

25
00:01:44,849 --> 00:01:47,280
understanding<font color="#E5E5E5"> and background on the</font>

26
00:01:47,280 --> 00:01:50,490
subject<font color="#E5E5E5"> so what we'll spend some</font><font color="#CCCCCC"> time</font>

27
00:01:50,490 --> 00:01:54,209
and review a few slides<font color="#E5E5E5"> and then the</font>

28
00:01:54,209 --> 00:01:56,429
focus<font color="#CCCCCC"> of today's lectures are</font>

29
00:01:56,429 --> 00:01:59,190
approximate value iteration<font color="#E5E5E5"> and policy</font>

30
00:01:59,190 --> 00:02:03,149
direction for discounted problems we

31
00:02:03,149 --> 00:02:05,429
mentioned<font color="#E5E5E5"> earlier that exact value</font>

32
00:02:05,429 --> 00:02:07,860
duration and the exact policy duration

33
00:02:07,860 --> 00:02:13,230
are the two main algorithms for infinite

34
00:02:13,230 --> 00:02:15,680
variety of<font color="#E5E5E5"> discount dynamic programming</font>

35
00:02:15,680 --> 00:02:18,390
now we are<font color="#E5E5E5"> going to introduce</font>

36
00:02:18,390 --> 00:02:22,080
approximations<font color="#E5E5E5"> into value and policy</font>

37
00:02:22,080 --> 00:02:24,750
duration<font color="#E5E5E5"> using the idea</font><font color="#CCCCCC"> of approximation</font>

38
00:02:24,750 --> 00:02:28,110
<font color="#E5E5E5">in value space</font><font color="#CCCCCC"> the approximation value</font>

39
00:02:28,110 --> 00:02:29,920
space means that I have a

40
00:02:29,920 --> 00:02:32,620
action and<font color="#E5E5E5"> I approximate this over a</font>

41
00:02:32,620 --> 00:02:35,380
lower dimensional space<font color="#E5E5E5"> we talked</font><font color="#CCCCCC"> about</font>

42
00:02:35,380 --> 00:02:37,780
how you can<font color="#E5E5E5"> do this by simulation</font><font color="#CCCCCC"> that's</font>

43
00:02:37,780 --> 00:02:39,700
the idea we're going<font color="#E5E5E5"> to be using here</font>

44
00:02:39,700 --> 00:02:42,819
<font color="#E5E5E5">for</font><font color="#CCCCCC"> different functions like the cost</font>

45
00:02:42,819 --> 00:02:44,739
function<font color="#CCCCCC"> or cost function of</font><font color="#E5E5E5"> the problem</font>

46
00:02:44,739 --> 00:02:46,600
<font color="#E5E5E5">or the cost function associated with</font><font color="#CCCCCC"> a</font>

47
00:02:46,600 --> 00:02:52,150
policy and so on<font color="#E5E5E5"> so I think I mentioned</font>

48
00:02:52,150 --> 00:02:54,040
<font color="#CCCCCC">the projected bellman</font><font color="#E5E5E5"> equation we're</font>

49
00:02:54,040 --> 00:02:56,470
going<font color="#CCCCCC"> to focus</font><font color="#E5E5E5"> into that and see how</font><font color="#CCCCCC"> we</font>

50
00:02:56,470 --> 00:03:01,690
can solve it approximately<font color="#E5E5E5"> by using a</font>

51
00:03:01,690 --> 00:03:04,510
matrix<font color="#E5E5E5"> form of the equation how do you</font>

52
00:03:04,510 --> 00:03:07,569
deal with the large inner products in

53
00:03:07,569 --> 00:03:10,090
matrix vector products that<font color="#CCCCCC"> are involved</font>

54
00:03:10,090 --> 00:03:12,120
in<font color="#E5E5E5"> this projected equation by using</font>

55
00:03:12,120 --> 00:03:15,100
simulation<font color="#CCCCCC"> Vietnam where you</font><font color="#E5E5E5"> talk about</font>

56
00:03:15,100 --> 00:03:16,989
<font color="#CCCCCC">a couple of specific methods that are</font>

57
00:03:16,989 --> 00:03:19,690
central methods in the field the<font color="#E5E5E5"> LSPD</font>

58
00:03:19,690 --> 00:03:23,470
<font color="#E5E5E5">and the LSP method these are simulation</font>

59
00:03:23,470 --> 00:03:25,720
<font color="#E5E5E5">based methods for solving the projected</font>

60
00:03:25,720 --> 00:03:29,830
equation optimistic version<font color="#E5E5E5"> of policy</font>

61
00:03:29,830 --> 00:03:32,650
<font color="#CCCCCC">duration then some more advanced topics</font>

62
00:03:32,650 --> 00:03:35,290
<font color="#CCCCCC">on multi-step projected equations and</font>

63
00:03:35,290 --> 00:03:42,609
things<font color="#CCCCCC"> related to</font><font color="#E5E5E5"> that so a few slides</font>

64
00:03:42,609 --> 00:03:45,549
<font color="#E5E5E5">we'll review and you may interrupt me if</font>

65
00:03:45,549 --> 00:03:46,959
there's some question that's<font color="#CCCCCC"> burning</font>

66
00:03:46,959 --> 00:03:50,070
question but that<font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> bring up</font>

67
00:03:50,070 --> 00:03:52,989
it's a smaller<font color="#CCCCCC"> group now</font><font color="#E5E5E5"> so we can do</font>

68
00:03:52,989 --> 00:03:57,579
that we have a finite state system<font color="#E5E5E5"> a</font>

69
00:03:57,579 --> 00:04:01,120
Markov<font color="#CCCCCC"> chain with</font><font color="#E5E5E5"> states 1 up to n and</font>

70
00:04:01,120 --> 00:04:05,440
the finite control set use of<font color="#E5E5E5"> I at state</font>

71
00:04:05,440 --> 00:04:10,239
I the<font color="#CCCCCC"> chain is described by transition</font>

72
00:04:10,239 --> 00:04:13,120
probabilities<font color="#E5E5E5"> whereby if you</font><font color="#CCCCCC"> are at</font>

73
00:04:13,120 --> 00:04:16,570
state I in you apply control<font color="#CCCCCC"> u</font><font color="#E5E5E5"> you go to</font>

74
00:04:16,570 --> 00:04:21,279
state J with probability pIJ<font color="#E5E5E5"> of</font><font color="#CCCCCC"> U so</font>

75
00:04:21,279 --> 00:04:24,310
it's a Markov chain<font color="#E5E5E5"> if you fix the</font>

76
00:04:24,310 --> 00:04:26,440
<font color="#E5E5E5">policy if</font><font color="#CCCCCC"> you fix these controls</font>

77
00:04:26,440 --> 00:04:29,139
<font color="#E5E5E5">it's a Markov chain but it's a control</font>

78
00:04:29,139 --> 00:04:31,090
Markov chain in the sense that we want

79
00:04:31,090 --> 00:04:33,820
<font color="#E5E5E5">to find the good values of U and the</font>

80
00:04:33,820 --> 00:04:37,690
policy<font color="#E5E5E5"> that produce good effects in</font>

81
00:04:37,690 --> 00:04:41,820
terms<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a cost function so give</font>

82
00:04:41,820 --> 00:04:44,070
a policy a sequence of<font color="#E5E5E5"> functions</font><font color="#CCCCCC"> at</font>

83
00:04:44,070 --> 00:04:47,820
every time<font color="#E5E5E5"> step</font><font color="#CCCCCC"> PI we can plug it into</font>

84
00:04:47,820 --> 00:04:50,130
the cost<font color="#E5E5E5"> function which involves a</font>

85
00:04:50,130 --> 00:04:55,080
course at every stage<font color="#CCCCCC"> K</font><font color="#E5E5E5"> discounted by a</font>

86
00:04:55,080 --> 00:04:57,870
factor alpha to the K<font color="#E5E5E5"> with alpha between</font>

87
00:04:57,870 --> 00:05:01,920
0<font color="#CCCCCC"> & 1 take the expected value of</font><font color="#E5E5E5"> that</font>

88
00:05:01,920 --> 00:05:04,050
the limit<font color="#E5E5E5"> as n goes</font><font color="#CCCCCC"> to infinity</font><font color="#E5E5E5"> an</font>

89
00:05:04,050 --> 00:05:05,850
infinite<font color="#CCCCCC"> number of stages</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that gives</font>

90
00:05:05,850 --> 00:05:08,040
you a<font color="#CCCCCC"> number which is the</font><font color="#E5E5E5"> cost of policy</font>

91
00:05:08,040 --> 00:05:12,690
<font color="#CCCCCC">pi</font><font color="#E5E5E5"> starting at state I</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> for every I</font>

92
00:05:12,690 --> 00:05:15,630
for every<font color="#E5E5E5"> state there is a cost and is a</font>

93
00:05:15,630 --> 00:05:17,850
vector<font color="#E5E5E5"> of course and dimensional vector</font>

94
00:05:17,850 --> 00:05:21,930
of course<font color="#E5E5E5"> as associate with a policy and</font>

95
00:05:21,930 --> 00:05:23,670
we recall that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> used a lot the</font>

96
00:05:23,670 --> 00:05:27,180
shorthand notation which is TJ for a

97
00:05:27,180 --> 00:05:30,630
given vector<font color="#E5E5E5"> J TJ is another vector and</font>

98
00:05:30,630 --> 00:05:34,560
dimensional vector with components from

99
00:05:34,560 --> 00:05:38,130
<font color="#CCCCCC">1 to N given by this expression this</font>

100
00:05:38,130 --> 00:05:42,230
part<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> expected cost of</font><font color="#E5E5E5"> the first</font>

101
00:05:42,230 --> 00:05:47,460
stage<font color="#E5E5E5"> this part is the expected cost of</font>

102
00:05:47,460 --> 00:05:49,800
what you will get at<font color="#CCCCCC"> the</font><font color="#E5E5E5"> end of the</font>

103
00:05:49,800 --> 00:05:55,170
first stage measured by J<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so you can</font>

104
00:05:55,170 --> 00:05:58,170
view<font color="#E5E5E5"> this cost of the first stage cost</font>

105
00:05:58,170 --> 00:06:01,260
at the<font color="#E5E5E5"> end of one stage</font><font color="#CCCCCC"> ok and the</font>

106
00:06:01,260 --> 00:06:04,380
minute this is TJ<font color="#E5E5E5"> and T</font><font color="#CCCCCC"> nu J and we have</font>

107
00:06:04,380 --> 00:06:08,670
seen<font color="#E5E5E5"> that is 2 nu J and TJ are central</font>

108
00:06:08,670 --> 00:06:12,030
in expressing the theoretical results in

109
00:06:12,030 --> 00:06:14,700
particular the optimal cost vector is

110
00:06:14,700 --> 00:06:16,380
the unique solution<font color="#E5E5E5"> of this bellman</font>

111
00:06:16,380 --> 00:06:19,410
equation<font color="#E5E5E5"> or equivalently</font><font color="#CCCCCC"> the functional</font>

112
00:06:19,410 --> 00:06:21,810
equation is nonlinear<font color="#E5E5E5"> n equations with n</font>

113
00:06:21,810 --> 00:06:24,870
unknowns<font color="#CCCCCC"> and for a fixed policy is a</font>

114
00:06:24,870 --> 00:06:27,540
corresponding bellman equation<font color="#E5E5E5"> again n</font>

115
00:06:27,540 --> 00:06:31,410
equations with n unknowns<font color="#E5E5E5"> but it's</font>

116
00:06:31,410 --> 00:06:34,800
linear<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> it is linear and therefore</font>

117
00:06:34,800 --> 00:06:40,580
<font color="#E5E5E5">it can</font><font color="#CCCCCC"> be solved by by standard methods</font>

118
00:06:42,449 --> 00:06:45,759
the optimality condition<font color="#CCCCCC"> is but if I can</font>

119
00:06:45,759 --> 00:06:49,900
find<font color="#CCCCCC"> jelly</font><font color="#E5E5E5"> star then by minimizing in</font>

120
00:06:49,900 --> 00:06:52,300
this equation<font color="#E5E5E5"> by minimizing in the</font><font color="#CCCCCC"> right</font>

121
00:06:52,300 --> 00:06:54,610
<font color="#CCCCCC">hand side the bad equation I can get</font><font color="#E5E5E5"> an</font>

122
00:06:54,610 --> 00:06:57,400
optimal<font color="#E5E5E5"> policy in</font><font color="#CCCCCC"> reverse</font><font color="#E5E5E5"> every optimal</font>

123
00:06:57,400 --> 00:07:00,970
policy has to<font color="#E5E5E5"> satisfy has to minimize in</font>

124
00:07:00,970 --> 00:07:06,789
the<font color="#CCCCCC"> right-hand side and the two basic</font>

125
00:07:06,789 --> 00:07:09,789
<font color="#CCCCCC">Alcazar value duration</font><font color="#E5E5E5"> whereby I start</font>

126
00:07:09,789 --> 00:07:12,610
from some J vector<font color="#E5E5E5"> arbitrary J vector</font>

127
00:07:12,610 --> 00:07:16,240
and iterate with it with T do a<font color="#E5E5E5"> dynamic</font>

128
00:07:16,240 --> 00:07:18,340
programming<font color="#E5E5E5"> step on it</font><font color="#CCCCCC"> then another one</font>

129
00:07:18,340 --> 00:07:20,680
and<font color="#E5E5E5"> another one sequentially and in the</font>

130
00:07:20,680 --> 00:07:24,009
limit<font color="#CCCCCC"> I'm guaranteed to get J star the</font>

131
00:07:24,009 --> 00:07:26,349
optimal cost vector<font color="#E5E5E5"> that's why the</font>

132
00:07:26,349 --> 00:07:29,470
direction in policy<font color="#E5E5E5"> Direction iterates</font>

133
00:07:29,470 --> 00:07:32,770
with policies at<font color="#CCCCCC"> the typical</font><font color="#E5E5E5"> step the</font>

134
00:07:32,770 --> 00:07:35,949
case step<font color="#E5E5E5"> I have a policy which is a</font>

135
00:07:35,949 --> 00:07:39,900
control to apply at every step<font color="#CCCCCC"> I</font>

136
00:07:39,900 --> 00:07:42,699
evaluate the policy by solving the

137
00:07:42,699 --> 00:07:45,370
corresponding bellman equation<font color="#E5E5E5"> were in</font>

138
00:07:45,370 --> 00:07:49,120
shorthand like this after<font color="#E5E5E5"> I</font><font color="#CCCCCC"> evaluate it</font>

139
00:07:49,120 --> 00:07:52,300
I plug it in here<font color="#E5E5E5"> and I get a new policy</font>

140
00:07:52,300 --> 00:07:55,320
by minimization and in shortcut is this

141
00:07:55,320 --> 00:07:59,229
now<font color="#E5E5E5"> the policy evaluation is equivalent</font>

142
00:07:59,229 --> 00:08:01,479
<font color="#E5E5E5">to solving a linear system</font><font color="#CCCCCC"> of equations</font>

143
00:08:01,479 --> 00:08:05,259
and by n equations but we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> interested</font>

144
00:08:05,259 --> 00:08:09,280
in huge dimensions<font color="#CCCCCC"> and extremely</font><font color="#E5E5E5"> large</font>

145
00:08:09,280 --> 00:08:12,099
so you would<font color="#E5E5E5"> never</font><font color="#CCCCCC"> think of solving this</font>

146
00:08:12,099 --> 00:08:14,650
equation<font color="#CCCCCC"> by Gaussian elimination or</font>

147
00:08:14,650 --> 00:08:18,099
giving<font color="#E5E5E5"> into MATLAB or whatever you have</font>

148
00:08:18,099 --> 00:08:22,469
<font color="#CCCCCC">to use a</font><font color="#E5E5E5"> different kind of approach and</font>

149
00:08:22,469 --> 00:08:27,909
<font color="#E5E5E5">one possibility is to try a finite</font>

150
00:08:27,909 --> 00:08:32,469
number<font color="#CCCCCC"> of offer well one possibility is</font>

151
00:08:32,469 --> 00:08:34,870
<font color="#CCCCCC">to use approximations and</font><font color="#E5E5E5"> we will see</font>

152
00:08:34,870 --> 00:08:36,849
how approximations come into the picture

153
00:08:36,849 --> 00:08:40,270
<font color="#CCCCCC">for</font><font color="#E5E5E5"> evaluating for solving approximately</font>

154
00:08:40,270 --> 00:08:44,720
this equation<font color="#E5E5E5"> okay</font>

155
00:08:44,720 --> 00:08:47,640
so now I<font color="#E5E5E5"> may approach these optimist</font>

156
00:08:47,640 --> 00:08:51,240
approximation in value<font color="#CCCCCC"> specs</font><font color="#E5E5E5"> there are</font>

157
00:08:51,240 --> 00:08:53,330
these objects of interest<font color="#CCCCCC"> Jade star</font>

158
00:08:53,330 --> 00:08:57,690
<font color="#CCCCCC">ingenue</font><font color="#E5E5E5"> and we want to find something</font>

159
00:08:57,690 --> 00:09:00,390
<font color="#CCCCCC">that's lower</font><font color="#E5E5E5"> dimensional is described by</font>

160
00:09:00,390 --> 00:09:04,110
fewer numbers<font color="#E5E5E5"> and in particular were</font>

161
00:09:04,110 --> 00:09:07,320
interested in<font color="#E5E5E5"> a function J tilde that's</font>

162
00:09:07,320 --> 00:09:10,590
a function<font color="#E5E5E5"> of state but also depends on</font>

163
00:09:10,590 --> 00:09:15,560
some parameter vector R and R is a

164
00:09:15,560 --> 00:09:20,100
vector with M components<font color="#E5E5E5"> actually s</font>

165
00:09:20,100 --> 00:09:23,340
<font color="#E5E5E5">components should be</font><font color="#CCCCCC"> yes</font><font color="#E5E5E5"> okay a type but</font>

166
00:09:23,340 --> 00:09:26,610
<font color="#CCCCCC">a small number</font><font color="#E5E5E5"> of components which</font><font color="#CCCCCC"> you</font>

167
00:09:26,610 --> 00:09:30,750
can tune<font color="#E5E5E5"> you can adjust to</font><font color="#CCCCCC"> achieve a</font>

168
00:09:30,750 --> 00:09:33,780
better<font color="#CCCCCC"> approximation so think</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> M be</font>

169
00:09:33,780 --> 00:09:36,390
huge but s the<font color="#E5E5E5"> number of</font><font color="#CCCCCC"> parameters</font>

170
00:09:36,390 --> 00:09:39,690
being small<font color="#E5E5E5"> and there are many types of</font>

171
00:09:39,690 --> 00:09:41,310
different approximation<font color="#CCCCCC"> architectures</font>

172
00:09:41,310 --> 00:09:44,540
that<font color="#CCCCCC"> I can use polynomial approximations</font>

173
00:09:44,540 --> 00:09:48,120
<font color="#E5E5E5">interpolations</font><font color="#CCCCCC"> domain-specific like the</font>

174
00:09:48,120 --> 00:09:50,240
tetris problem<font color="#CCCCCC"> i discussed last time</font>

175
00:09:50,240 --> 00:09:52,470
<font color="#CCCCCC">depending on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> would</font>

176
00:09:52,470 --> 00:09:55,470
<font color="#E5E5E5">choose a parametric for a general</font>

177
00:09:55,470 --> 00:09:58,380
functional form of dependence of J tilde

178
00:09:58,380 --> 00:10:02,760
on iron<font color="#CCCCCC"> r and the objective</font><font color="#E5E5E5"> is to get a</font>

179
00:10:02,760 --> 00:10:06,200
good<font color="#CCCCCC"> R</font><font color="#E5E5E5"> okay in what sense</font>

180
00:10:06,200 --> 00:10:12,000
well any<font color="#CCCCCC"> are defines some function here</font>

181
00:10:12,000 --> 00:10:15,090
<font color="#CCCCCC">and if this is a good approximation to</font>

182
00:10:15,090 --> 00:10:19,320
<font color="#CCCCCC">jstor then I hope that my minimizing</font><font color="#E5E5E5"> in</font>

183
00:10:19,320 --> 00:10:21,870
this approximate form of the<font color="#CCCCCC"> right hand</font>

184
00:10:21,870 --> 00:10:24,300
side of balance equation<font color="#E5E5E5"> I will get a</font>

185
00:10:24,300 --> 00:10:28,200
good good<font color="#CCCCCC"> suboptimal policy new</font><font color="#E5E5E5"> tilde so</font>

186
00:10:28,200 --> 00:10:31,130
the whole game is<font color="#E5E5E5"> to find a good are</font>

187
00:10:31,130 --> 00:10:33,930
good in the sense that it<font color="#CCCCCC"> gives me</font><font color="#E5E5E5"> a</font>

188
00:10:33,930 --> 00:10:41,580
good<font color="#CCCCCC"> muted</font><font color="#E5E5E5"> now we are going to focus in</font>

189
00:10:41,580 --> 00:10:45,900
<font color="#CCCCCC">this in this lecture</font><font color="#E5E5E5"> exclusively on</font>

190
00:10:45,900 --> 00:10:49,170
linear architectures where the

191
00:10:49,170 --> 00:10:52,649
of<font color="#E5E5E5"> jail killed on our is linear</font><font color="#CCCCCC"> okay so</font>

192
00:10:52,649 --> 00:10:55,110
this is a<font color="#E5E5E5"> linear for a given J this is</font><font color="#CCCCCC"> a</font>

193
00:10:55,110 --> 00:10:57,930
linear function<font color="#CCCCCC"> and more</font><font color="#E5E5E5"> generally the</font>

194
00:10:57,930 --> 00:11:02,880
vector of<font color="#E5E5E5"> these is a matrix a gigantic</font>

195
00:11:02,880 --> 00:11:06,209
<font color="#CCCCCC">row matrix or</font><font color="#E5E5E5"> a dimensional matrix and</font>

196
00:11:06,209 --> 00:11:09,720
small column dimension multiplying<font color="#E5E5E5"> R</font>

197
00:11:09,720 --> 00:11:12,120
which is<font color="#E5E5E5"> a small dimensional vector so</font>

198
00:11:12,120 --> 00:11:15,000
this is a huge vector but R is a small

199
00:11:15,000 --> 00:11:19,829
vector<font color="#CCCCCC"> and v is a matrix</font><font color="#E5E5E5"> of basis</font>

200
00:11:19,829 --> 00:11:23,339
functions<font color="#E5E5E5"> in particular let's recall</font>

201
00:11:23,339 --> 00:11:25,529
what<font color="#CCCCCC"> a</font><font color="#E5E5E5"> linear approximation</font><font color="#CCCCCC"> architecture</font>

202
00:11:25,529 --> 00:11:31,769
is for every state<font color="#E5E5E5"> I there is a vector</font>

203
00:11:31,769 --> 00:11:37,170
Phi sub<font color="#E5E5E5"> I</font><font color="#CCCCCC"> ok small number of</font><font color="#E5E5E5"> terms which</font>

204
00:11:37,170 --> 00:11:41,329
we view as the features of the state I

205
00:11:41,329 --> 00:11:45,390
and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> these features are weighted</font>

206
00:11:45,390 --> 00:11:49,140
with<font color="#E5E5E5"> a vector R and this gives you the</font>

207
00:11:49,140 --> 00:11:52,829
approximation form<font color="#E5E5E5"> Phi I prime is the I</font>

208
00:11:52,829 --> 00:11:57,390
throw of fee sophie has Phi 1 prime Phi

209
00:11:57,390 --> 00:12:02,240
2 prime Phi 3 and so on<font color="#CCCCCC"> and n of those</font>

210
00:12:02,240 --> 00:12:05,820
and alternatively you can write this

211
00:12:05,820 --> 00:12:09,149
entire<font color="#E5E5E5"> vector as a linear combination of</font>

212
00:12:09,149 --> 00:12:11,399
the<font color="#CCCCCC"> columns of</font><font color="#E5E5E5"> fee okay</font>

213
00:12:11,399 --> 00:12:13,220
weighted by the corresponding

214
00:12:13,220 --> 00:12:19,410
coefficients of<font color="#E5E5E5"> R so if I give you</font><font color="#CCCCCC"> R how</font>

215
00:12:19,410 --> 00:12:22,260
do you get<font color="#E5E5E5"> an approximate evaluation of</font>

216
00:12:22,260 --> 00:12:24,089
whatever you are approximating<font color="#E5E5E5"> this J</font>

217
00:12:24,089 --> 00:12:29,190
tilde for a given<font color="#CCCCCC"> state whenever a state</font>

218
00:12:29,190 --> 00:12:32,449
comes to you<font color="#E5E5E5"> you extract its features</font>

219
00:12:32,449 --> 00:12:35,459
numbers that describe in some broth

220
00:12:35,459 --> 00:12:37,829
where a rough but effective<font color="#E5E5E5"> way the</font>

221
00:12:37,829 --> 00:12:40,740
state so<font color="#E5E5E5"> you get this vector Phi sub I</font>

222
00:12:40,740 --> 00:12:44,760
this is a small vector<font color="#CCCCCC"> okay and you</font>

223
00:12:44,760 --> 00:12:48,690
weigh this with the small vector R<font color="#E5E5E5"> and</font>

224
00:12:48,690 --> 00:12:53,329
<font color="#E5E5E5">you get a prop cost approximator</font>

225
00:12:53,570 --> 00:12:56,510
so if you have this linear<font color="#CCCCCC"> map</font>

226
00:12:56,510 --> 00:13:01,070
this<font color="#CCCCCC"> our then</font><font color="#E5E5E5"> and you have congest good</font>

227
00:13:01,070 --> 00:13:08,480
features you're in business<font color="#E5E5E5"> okay now</font>

228
00:13:08,480 --> 00:13:12,350
another<font color="#E5E5E5"> view of approximation is based</font>

229
00:13:12,350 --> 00:13:15,830
on this equation<font color="#CCCCCC"> what this says</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

230
00:13:15,830 --> 00:13:19,330
we are looking for approximations of

231
00:13:19,330 --> 00:13:26,440
<font color="#E5E5E5">whatever in the subspace Phi R where R</font>

232
00:13:26,440 --> 00:13:30,860
lives in<font color="#E5E5E5"> RS is a vector in R s and this</font>

233
00:13:30,860 --> 00:13:35,150
<font color="#E5E5E5">is</font><font color="#CCCCCC"> the the subspace spanned by the</font>

234
00:13:35,150 --> 00:13:41,150
columns of<font color="#E5E5E5"> field so J whatever you are</font>

235
00:13:41,150 --> 00:13:43,580
approximating lives in a gigantic space

236
00:13:43,580 --> 00:13:47,750
okay but there's a smaller space defined

237
00:13:47,750 --> 00:13:50,300
<font color="#E5E5E5">by these features and what we want to do</font>

238
00:13:50,300 --> 00:13:52,880
is approximate<font color="#E5E5E5"> it down into the smaller</font>

239
00:13:52,880 --> 00:13:59,030
space so that's<font color="#E5E5E5"> the idea instead</font><font color="#CCCCCC"> of</font>

240
00:13:59,030 --> 00:14:02,120
<font color="#E5E5E5">computing</font><font color="#CCCCCC"> janie or j star which is</font><font color="#E5E5E5"> huge</font>

241
00:14:02,120 --> 00:14:04,670
dimensional we compute the lower

242
00:14:04,670 --> 00:14:08,300
dimensional<font color="#CCCCCC"> our vector by using lower</font>

243
00:14:08,300 --> 00:14:11,660
dimensional calculations<font color="#E5E5E5"> okay low</font>

244
00:14:11,660 --> 00:14:14,360
dimensional calculations<font color="#E5E5E5"> is not so easy</font>

245
00:14:14,360 --> 00:14:16,670
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> okay you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> collect</font>

246
00:14:16,670 --> 00:14:19,220
<font color="#CCCCCC">information about huge dimensional stuff</font>

247
00:14:19,220 --> 00:14:22,040
in low dimensional calculations that's

248
00:14:22,040 --> 00:14:23,960
<font color="#E5E5E5">where simulation becomes important</font>

249
00:14:23,960 --> 00:14:26,390
<font color="#E5E5E5">that's what simulation will do for us</font>

250
00:14:26,390 --> 00:14:29,720
<font color="#E5E5E5">will allow us to</font><font color="#CCCCCC"> obtain low dimensional</font>

251
00:14:29,720 --> 00:14:31,640
approximation<font color="#E5E5E5"> with low dimensional</font>

252
00:14:31,640 --> 00:14:34,300
calculations

253
00:14:36,970 --> 00:14:41,930
<font color="#E5E5E5">okay so now we will consider the</font><font color="#CCCCCC"> two</font>

254
00:14:41,930 --> 00:14:44,330
basic methods<font color="#E5E5E5"> value direction and policy</font>

255
00:14:44,330 --> 00:14:47,630
direction and make a first attempt at

256
00:14:47,630 --> 00:14:52,149
introducing<font color="#E5E5E5"> approximations into them</font><font color="#CCCCCC"> now</font>

257
00:14:52,269 --> 00:14:54,980
<font color="#CCCCCC">this okay this approximate value</font>

258
00:14:54,980 --> 00:14:56,810
<font color="#CCCCCC">direction sometimes is</font><font color="#E5E5E5"> called also</font>

259
00:14:56,810 --> 00:14:58,820
fitted<font color="#E5E5E5"> dragged with direction</font><font color="#CCCCCC"> you'll</font>

260
00:14:58,820 --> 00:15:00,950
find this term in the literature<font color="#E5E5E5"> and</font>

261
00:15:00,950 --> 00:15:03,769
<font color="#E5E5E5">what it does is</font><font color="#CCCCCC"> very simple value</font>

262
00:15:03,769 --> 00:15:08,329
iteration<font color="#E5E5E5"> calculates J 0 T sub J 0 T</font>

263
00:15:08,329 --> 00:15:12,140
squared<font color="#E5E5E5"> or</font><font color="#CCCCCC"> chain</font><font color="#E5E5E5"> 0 and so on so at every</font>

264
00:15:12,140 --> 00:15:14,810
step of this algorithm<font color="#E5E5E5"> we introduce an</font>

265
00:15:14,810 --> 00:15:16,940
approximation which<font color="#CCCCCC"> involves some</font><font color="#E5E5E5"> kind</font>

266
00:15:16,940 --> 00:15:18,740
of a projection<font color="#E5E5E5"> to a lower dimensional</font>

267
00:15:18,740 --> 00:15:20,240
space<font color="#E5E5E5"> and</font><font color="#CCCCCC"> keep</font><font color="#E5E5E5"> going</font>

268
00:15:20,240 --> 00:15:24,410
so the initial<font color="#E5E5E5"> function J 0 is given</font><font color="#CCCCCC"> may</font>

269
00:15:24,410 --> 00:15:27,260
<font color="#E5E5E5">be some value R 0 and here's the</font>

270
00:15:27,260 --> 00:15:32,420
algorithm we started<font color="#E5E5E5"> J 0 I have the</font>

271
00:15:32,420 --> 00:15:37,040
vector<font color="#E5E5E5"> T sub J 0 and I find some kind of</font>

272
00:15:37,040 --> 00:15:37,880
approximation

273
00:15:37,880 --> 00:15:39,440
onto the lower dimensional subspace of

274
00:15:39,440 --> 00:15:42,589
<font color="#E5E5E5">that so J tilde sub 1 is an</font>

275
00:15:42,589 --> 00:15:46,760
approximation<font color="#E5E5E5"> of TJ 0 now I apply T to</font>

276
00:15:46,760 --> 00:15:49,790
it again<font color="#E5E5E5"> then</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> approximate it down the</font>

277
00:15:49,790 --> 00:15:52,760
lower dimensional space again and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> on</font>

278
00:15:52,760 --> 00:15:56,570
can<font color="#E5E5E5"> i generate a sequence of lower</font>

279
00:15:56,570 --> 00:16:02,420
dimensional vectors<font color="#E5E5E5"> R 0 here R</font><font color="#CCCCCC"> 1 R 2 and</font>

280
00:16:02,420 --> 00:16:07,370
so on<font color="#E5E5E5"> okay if I were to do value</font>

281
00:16:07,370 --> 00:16:08,180
<font color="#E5E5E5">iteration</font>

282
00:16:08,180 --> 00:16:11,029
<font color="#CCCCCC">I've start at this J</font><font color="#E5E5E5"> 0 I would</font><font color="#CCCCCC"> go to TJ</font>

283
00:16:11,029 --> 00:16:14,920
0<font color="#E5E5E5"> T squared J 0 T cube J 0 and so</font><font color="#CCCCCC"> on</font>

284
00:16:14,920 --> 00:16:20,029
<font color="#E5E5E5">here</font><font color="#CCCCCC"> i generate T sub J 0 approximate</font>

285
00:16:20,029 --> 00:16:22,790
that then another<font color="#E5E5E5"> T approximate that</font>

286
00:16:22,790 --> 00:16:26,329
another<font color="#CCCCCC"> T approximate that okay that's</font>

287
00:16:26,329 --> 00:16:28,610
called<font color="#E5E5E5"> fitted value directions are very</font>

288
00:16:28,610 --> 00:16:30,740
very<font color="#CCCCCC"> natural</font><font color="#E5E5E5"> algorithm I have an</font>

289
00:16:30,740 --> 00:16:32,810
iterative algorithm<font color="#CCCCCC"> i</font><font color="#E5E5E5"> approximate every</font>

290
00:16:32,810 --> 00:16:37,300
step of<font color="#E5E5E5"> the algorithm in a lower space</font>

291
00:16:38,690 --> 00:16:42,720
then after I do<font color="#E5E5E5"> a large enough</font><font color="#CCCCCC"> number of</font>

292
00:16:42,720 --> 00:16:45,900
iterations let's say capital<font color="#E5E5E5"> n the final</font>

293
00:16:45,900 --> 00:16:48,600
J tilde is going to be an approximation

294
00:16:48,600 --> 00:16:52,110
<font color="#CCCCCC">to whatever</font><font color="#E5E5E5"> approximating J star here in</font>

295
00:16:52,110 --> 00:16:56,130
<font color="#CCCCCC">particular</font><font color="#E5E5E5"> this can be used with</font><font color="#CCCCCC"> both</font><font color="#E5E5E5"> T</font>

296
00:16:56,130 --> 00:17:00,540
equal<font color="#CCCCCC"> to the minimization mapping</font><font color="#E5E5E5"> or for</font>

297
00:17:00,540 --> 00:17:06,359
a<font color="#CCCCCC"> specific policy can be used and</font><font color="#E5E5E5"> how do</font>

298
00:17:06,359 --> 00:17:10,290
I find this J tilde approximation from

299
00:17:10,290 --> 00:17:13,890
this well one possibility is to use some

300
00:17:13,890 --> 00:17:16,680
<font color="#CCCCCC">kind of approximate projection done with</font>

301
00:17:16,680 --> 00:17:19,520
respect<font color="#CCCCCC"> to some projection</font><font color="#E5E5E5"> norm</font>

302
00:17:19,520 --> 00:17:22,290
<font color="#E5E5E5">typically our Euclidean norm although in</font>

303
00:17:22,290 --> 00:17:24,420
principle<font color="#E5E5E5"> doesn't have to so</font>

304
00:17:24,420 --> 00:17:27,780
approximately what I'm doing is from J

305
00:17:27,780 --> 00:17:32,100
tilde K<font color="#E5E5E5"> I apply T and then I project it</font>

306
00:17:32,100 --> 00:17:34,350
<font color="#CCCCCC">down</font><font color="#E5E5E5"> and that</font><font color="#CCCCCC"> gives me at least</font>

307
00:17:34,350 --> 00:17:38,270
approximately<font color="#E5E5E5"> J</font><font color="#CCCCCC"> tilde K plus</font><font color="#E5E5E5"> 1</font>

308
00:17:43,659 --> 00:17:48,120
it's an old<font color="#E5E5E5"> algorithm very old idea</font>

309
00:17:48,120 --> 00:17:51,880
<font color="#E5E5E5">perhaps</font><font color="#CCCCCC"> it goes</font><font color="#E5E5E5"> back to the to the 60s</font>

310
00:17:51,880 --> 00:17:54,250
or even 50s<font color="#E5E5E5"> people have thought of doing</font>

311
00:17:54,250 --> 00:17:57,130
<font color="#CCCCCC">this</font><font color="#E5E5E5"> it's very</font><font color="#CCCCCC"> natural</font><font color="#E5E5E5"> however you'll</font>

312
00:17:57,130 --> 00:17:58,450
see that it's<font color="#E5E5E5"> not as simple</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> it</font>

313
00:17:58,450 --> 00:18:04,750
<font color="#CCCCCC">appears okay</font><font color="#E5E5E5"> so since we</font><font color="#CCCCCC"> are into the</font>

314
00:18:04,750 --> 00:18:06,130
subject of projections

315
00:18:06,130 --> 00:18:09,759
let's look let<font color="#E5E5E5"> me remind you what we</font>

316
00:18:09,759 --> 00:18:12,789
<font color="#CCCCCC">mean by projection</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the particular</font><font color="#E5E5E5"> the</font>

317
00:18:12,789 --> 00:18:15,700
projections<font color="#E5E5E5"> for today are not going to</font>

318
00:18:15,700 --> 00:18:19,259
be with respect to a<font color="#CCCCCC"> Euclidian norm</font>

319
00:18:19,259 --> 00:18:24,039
<font color="#E5E5E5">however with some weights</font><font color="#CCCCCC"> sigh</font><font color="#E5E5E5"> okay so</font>

320
00:18:24,039 --> 00:18:26,710
if X is<font color="#E5E5E5"> equal</font><font color="#CCCCCC"> to 1 this is the standard</font>

321
00:18:26,710 --> 00:18:28,299
norm square root of the sum of the

322
00:18:28,299 --> 00:18:28,929
squares

323
00:18:28,929 --> 00:18:33,250
however we<font color="#CCCCCC"> introduce excite vector here</font>

324
00:18:33,250 --> 00:18:36,159
with positive components<font color="#CCCCCC"> in</font><font color="#E5E5E5"> fact there</font>

325
00:18:36,159 --> 00:18:37,750
is<font color="#E5E5E5"> no difference</font><font color="#CCCCCC"> there's not without</font>

326
00:18:37,750 --> 00:18:39,700
loss of generality I assume that's<font color="#E5E5E5"> a</font>

327
00:18:39,700 --> 00:18:41,860
probability distribution<font color="#E5E5E5"> the sky vector</font>

328
00:18:41,860 --> 00:18:43,149
is a probability distribution with

329
00:18:43,149 --> 00:18:45,580
positive components and I'm going to

330
00:18:45,580 --> 00:18:49,299
<font color="#E5E5E5">consider our weighted norm and I can</font>

331
00:18:49,299 --> 00:18:51,340
tell you ahead of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> that's important</font>

332
00:18:51,340 --> 00:18:56,019
to consider<font color="#CCCCCC"> why it's here ok now let's</font>

333
00:18:56,019 --> 00:18:58,840
consider projection onto this subspace

334
00:18:58,840 --> 00:19:03,610
with<font color="#E5E5E5"> respect to this</font><font color="#CCCCCC"> weighted</font><font color="#E5E5E5"> norm in</font>

335
00:19:03,610 --> 00:19:07,509
other words we want to<font color="#E5E5E5"> find</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> our</font>

336
00:19:07,509 --> 00:19:11,679
vector of parameters such that Phi sub R

337
00:19:11,679 --> 00:19:14,980
star is<font color="#E5E5E5"> equal</font><font color="#CCCCCC"> to the projection</font><font color="#E5E5E5"> how do</font>

338
00:19:14,980 --> 00:19:17,559
we do that well I want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> find</font><font color="#CCCCCC"> within</font>

339
00:19:17,559 --> 00:19:20,230
this subspace<font color="#E5E5E5"> an approximation in this</font>

340
00:19:20,230 --> 00:19:24,940
sense of the weighted norm of J so given

341
00:19:24,940 --> 00:19:28,049
J our star is<font color="#CCCCCC"> solved by solving this</font>

342
00:19:28,049 --> 00:19:31,480
what this this quadratic<font color="#E5E5E5"> problem shall</font>

343
00:19:31,480 --> 00:19:34,990
be squared problem however<font color="#CCCCCC"> the</font><font color="#E5E5E5"> problem</font>

344
00:19:34,990 --> 00:19:38,169
<font color="#E5E5E5">the difficult is the following J in our</font>

345
00:19:38,169 --> 00:19:40,840
context<font color="#E5E5E5"> it's a huge dimensional vector</font>

346
00:19:40,840 --> 00:19:44,350
so I can't possibly compute it and then

347
00:19:44,350 --> 00:19:48,750
try<font color="#E5E5E5"> to approximate</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> ok so instead I</font>

348
00:19:48,750 --> 00:19:51,220
mentioned in the previous lecture<font color="#CCCCCC"> that</font>

349
00:19:51,220 --> 00:19:52,730
we may<font color="#CCCCCC"> use</font><font color="#E5E5E5"> sin</font>

350
00:19:52,730 --> 00:19:57,200
<font color="#E5E5E5">relation how the simulation go</font><font color="#CCCCCC"> I compute</font>

351
00:19:57,200 --> 00:20:01,700
some values<font color="#E5E5E5"> for some states of this may</font>

352
00:20:01,700 --> 00:20:04,940
<font color="#E5E5E5">be my states are let's say 1 million and</font>

353
00:20:04,940 --> 00:20:09,559
I compute J sub<font color="#E5E5E5"> I for</font><font color="#CCCCCC"> 10,000 states ok</font>

354
00:20:09,559 --> 00:20:12,020
which I generate somehow by sampling<font color="#E5E5E5"> at</font>

355
00:20:12,020 --> 00:20:14,960
<font color="#E5E5E5">sample the state space I calculate this</font>

356
00:20:14,960 --> 00:20:17,299
<font color="#CCCCCC">and then I can make a least squares fit</font>

357
00:20:17,299 --> 00:20:20,570
that<font color="#E5E5E5"> is not as computationally intensive</font>

358
00:20:20,570 --> 00:20:25,610
<font color="#CCCCCC">ok so that's how</font><font color="#E5E5E5"> simulation goes and in</font>

359
00:20:25,610 --> 00:20:29,900
<font color="#CCCCCC">particular</font><font color="#E5E5E5"> I can there's a formula that</font>

360
00:20:29,900 --> 00:20:34,520
<font color="#E5E5E5">I gave last</font><font color="#CCCCCC"> time that the implementation</font>

361
00:20:34,520 --> 00:20:38,210
by<font color="#E5E5E5"> simulation of this projection with</font>

362
00:20:38,210 --> 00:20:41,000
respect to<font color="#CCCCCC"> this norm</font><font color="#E5E5E5"> is done as</font><font color="#CCCCCC"> follows</font>

363
00:20:41,000 --> 00:20:46,929
we sample<font color="#E5E5E5"> J sub I for a set of states I</font>

364
00:20:46,929 --> 00:20:51,380
1 I 2 and so on<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> i saw i</font>

365
00:20:51,380 --> 00:20:55,850
<font color="#E5E5E5">restricted least squares problem</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> this</font>

366
00:20:55,850 --> 00:20:59,330
<font color="#E5E5E5">is the same as</font><font color="#CCCCCC"> ok you can do it in two</font>

367
00:20:59,330 --> 00:21:01,910
<font color="#E5E5E5">ways approximate an expected</font><font color="#CCCCCC"> value or</font>

368
00:21:01,910 --> 00:21:05,510
solve a corresponding problem<font color="#E5E5E5"> however</font>

369
00:21:05,510 --> 00:21:08,540
<font color="#E5E5E5">notice the following that the samples</font>

370
00:21:08,540 --> 00:21:11,330
have to be<font color="#E5E5E5"> collected according</font><font color="#CCCCCC"> to the</font>

371
00:21:11,330 --> 00:21:15,770
distribution<font color="#E5E5E5"> sigh</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> because if you</font>

372
00:21:15,770 --> 00:21:17,120
<font color="#CCCCCC">sample according</font><font color="#E5E5E5"> to a certain</font>

373
00:21:17,120 --> 00:21:19,640
distribution<font color="#E5E5E5"> the corresponding terms</font>

374
00:21:19,640 --> 00:21:22,270
involving<font color="#E5E5E5"> I will appear with different</font>

375
00:21:22,270 --> 00:21:23,890
<font color="#CCCCCC">frequencies the frequencies</font>

376
00:21:23,890 --> 00:21:26,450
corresponding to<font color="#CCCCCC"> sigh</font><font color="#E5E5E5"> that's why the</font>

377
00:21:26,450 --> 00:21:29,270
<font color="#E5E5E5">solution to this approximates the least</font>

378
00:21:29,270 --> 00:21:31,070
square solution with<font color="#CCCCCC"> respect to the</font><font color="#E5E5E5"> sign</font>

379
00:21:31,070 --> 00:21:31,580
<font color="#E5E5E5">norm</font>

380
00:21:31,580 --> 00:21:38,179
<font color="#CCCCCC">ok so what do I gain here first of all</font>

381
00:21:38,179 --> 00:21:41,570
no gigantic calculations<font color="#CCCCCC"> I just need to</font>

382
00:21:41,570 --> 00:21:44,330
be able<font color="#E5E5E5"> to generate samples perhaps</font>

383
00:21:44,330 --> 00:21:48,160
approximate<font color="#E5E5E5"> ok samples of some point and</font>

384
00:21:48,160 --> 00:21:52,790
second the other<font color="#E5E5E5"> thing that I gain is</font>

385
00:21:52,790 --> 00:21:57,770
<font color="#E5E5E5">that is that I am able to control the</font>

386
00:21:57,770 --> 00:22:00,350
norm by sampling according to the

387
00:22:00,350 --> 00:22:03,159
corresponding distribution

388
00:22:04,660 --> 00:22:07,960
that's an important idea for<font color="#CCCCCC"> our context</font>

389
00:22:07,960 --> 00:22:12,040
<font color="#E5E5E5">low dimensional calculations can control</font>

390
00:22:12,040 --> 00:22:15,020
<font color="#E5E5E5">the projection approximation through</font>

391
00:22:15,020 --> 00:22:31,730
sampling any questions yes how can<font color="#CCCCCC"> we</font>

392
00:22:31,730 --> 00:22:35,620
<font color="#CCCCCC">guarantee the accuracy</font><font color="#E5E5E5"> well in</font><font color="#CCCCCC"> practice</font>

393
00:22:35,620 --> 00:22:39,040
<font color="#E5E5E5">it's more of a trial and error</font><font color="#CCCCCC"> process</font>

394
00:22:39,040 --> 00:22:42,640
<font color="#E5E5E5">you can get of course</font><font color="#CCCCCC"> some kind of</font>

395
00:22:42,640 --> 00:22:45,410
confidence<font color="#E5E5E5"> intervals here but they're</font>

396
00:22:45,410 --> 00:22:47,150
not<font color="#CCCCCC"> very useful in</font><font color="#E5E5E5"> practice</font>

397
00:22:47,150 --> 00:22:49,220
I don't think<font color="#CCCCCC"> okay perhaps they are</font>

398
00:22:49,220 --> 00:22:52,190
<font color="#E5E5E5">useful but I don't think that's the main</font>

399
00:22:52,190 --> 00:22:54,560
issue how do you get the accuracy<font color="#CCCCCC"> you</font>

400
00:22:54,560 --> 00:22:57,380
<font color="#CCCCCC">just try to get as many samples</font><font color="#E5E5E5"> as you</font>

401
00:22:57,380 --> 00:22:59,840
<font color="#CCCCCC">can and then your</font><font color="#E5E5E5"> accuracy improves as</font>

402
00:22:59,840 --> 00:23:03,170
much as possible<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> as many samples as</font>

403
00:23:03,170 --> 00:23:04,970
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can give them the computing time</font>

404
00:23:04,970 --> 00:23:08,020
that we can afford

405
00:23:11,890 --> 00:23:17,740
you mean the the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Phi matrix okay</font>

406
00:23:17,740 --> 00:23:20,390
this is<font color="#E5E5E5"> very much problem dependent and</font>

407
00:23:20,390 --> 00:23:24,040
also it<font color="#E5E5E5"> is a separate</font><font color="#CCCCCC"> decision</font><font color="#E5E5E5"> okay you</font>

408
00:23:24,040 --> 00:23:26,660
there are two issues<font color="#E5E5E5"> first select the</font>

409
00:23:26,660 --> 00:23:31,520
approximation subspace<font color="#CCCCCC"> then you then you</font>

410
00:23:31,520 --> 00:23:34,700
<font color="#E5E5E5">try to solve try to find an</font>

411
00:23:34,700 --> 00:23:36,590
approximation with<font color="#E5E5E5"> the subspace</font><font color="#CCCCCC"> the two</font>

412
00:23:36,590 --> 00:23:38,090
are<font color="#CCCCCC"> different of course if you are</font><font color="#E5E5E5"> not</font>

413
00:23:38,090 --> 00:23:39,680
<font color="#CCCCCC">satisfied with the</font><font color="#E5E5E5"> results</font><font color="#CCCCCC"> that you have</font>

414
00:23:39,680 --> 00:23:42,530
<font color="#E5E5E5">you may go</font><font color="#CCCCCC"> back in may add some more</font>

415
00:23:42,530 --> 00:23:45,170
<font color="#CCCCCC">features secret kind</font><font color="#E5E5E5"> of features there</font>

416
00:23:45,170 --> 00:23:47,030
may be a<font color="#CCCCCC"> process</font><font color="#E5E5E5"> of iteration between</font>

417
00:23:47,030 --> 00:23:53,840
approximation and<font color="#CCCCCC"> RT</font><font color="#E5E5E5"> and in modifying</font>

418
00:23:53,840 --> 00:23:57,820
the approximation architecture

419
00:23:58,600 --> 00:24:02,750
<font color="#CCCCCC">- we fix the distribution</font><font color="#E5E5E5"> to decide</font>

420
00:24:02,750 --> 00:24:08,370
<font color="#E5E5E5">okay you okay so if you know the</font>

421
00:24:08,370 --> 00:24:10,830
<font color="#E5E5E5">distribution you can incorporate it into</font>

422
00:24:10,830 --> 00:24:13,350
the sampling now how you choose<font color="#E5E5E5"> the sky</font>

423
00:24:13,350 --> 00:24:15,900
is a major topic for today's lecture

424
00:24:15,900 --> 00:24:28,170
<font color="#E5E5E5">okay so I'm going to get to that okay so</font>

425
00:24:28,170 --> 00:24:30,420
remember<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> talking about this</font>

426
00:24:30,420 --> 00:24:32,700
fitted value direction successive

427
00:24:32,700 --> 00:24:35,040
approximation<font color="#CCCCCC"> and now let's try to</font><font color="#E5E5E5"> use</font>

428
00:24:35,040 --> 00:24:40,740
projection here<font color="#E5E5E5"> here's a naive</font>

429
00:24:40,740 --> 00:24:43,950
implementation of fitted value<font color="#CCCCCC"> direction</font>

430
00:24:43,950 --> 00:24:47,250
<font color="#CCCCCC">I have a large</font><font color="#E5E5E5"> number of state a large</font>

431
00:24:47,250 --> 00:24:50,040
state space let's<font color="#E5E5E5"> select a small subset</font>

432
00:24:50,040 --> 00:24:53,970
of<font color="#E5E5E5"> representative</font><font color="#CCCCCC"> states</font><font color="#E5E5E5"> okay okay I</font>

433
00:24:53,970 --> 00:24:56,580
call<font color="#E5E5E5"> this subset and for every state in</font>

434
00:24:56,580 --> 00:25:00,120
this subset calculate this<font color="#CCCCCC"> expression</font>

435
00:25:00,120 --> 00:25:03,870
here<font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of calculating</font><font color="#CCCCCC"> for</font>

436
00:25:03,870 --> 00:25:06,690
all states<font color="#E5E5E5"> you calculate only</font><font color="#CCCCCC"> for the</font>

437
00:25:06,690 --> 00:25:09,060
small subset<font color="#E5E5E5"> now how do</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> calculate</font>

438
00:25:09,060 --> 00:25:11,760
this okay so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> an expected value</font>

439
00:25:11,760 --> 00:25:16,380
here<font color="#E5E5E5"> this is given</font><font color="#CCCCCC"> okay this is given</font>

440
00:25:16,380 --> 00:25:18,900
<font color="#E5E5E5">this is an expected</font><font color="#CCCCCC"> value so likely</font>

441
00:25:18,900 --> 00:25:22,590
you'll do this<font color="#E5E5E5"> by simulation</font><font color="#CCCCCC"> okay and</font>

442
00:25:22,590 --> 00:25:25,440
you'll do it<font color="#CCCCCC"> for every u and then you</font>

443
00:25:25,440 --> 00:25:27,900
have to<font color="#E5E5E5"> minimize over on you so we're</font>

444
00:25:27,900 --> 00:25:29,640
talking about<font color="#CCCCCC"> a substantial calculation</font>

445
00:25:29,640 --> 00:25:32,880
here for every<font color="#CCCCCC"> I but at least you don't</font>

446
00:25:32,880 --> 00:25:34,770
do it for<font color="#E5E5E5"> all the states are you doing</font>

447
00:25:34,770 --> 00:25:37,020
<font color="#E5E5E5">only</font><font color="#CCCCCC"> for a subset so these are the</font>

448
00:25:37,020 --> 00:25:40,620
samples that we compute<font color="#E5E5E5"> and now we fit</font>

449
00:25:40,620 --> 00:25:46,470
the samples to<font color="#CCCCCC"> the new iterate</font><font color="#E5E5E5"> okay so I</font>

450
00:25:46,470 --> 00:25:50,490
have a<font color="#CCCCCC"> small set of values here and I</font>

451
00:25:50,490 --> 00:25:53,700
use a<font color="#E5E5E5"> form of approximate projection to</font>

452
00:25:53,700 --> 00:26:00,000
fit a new<font color="#E5E5E5"> function J tilde k plus 1 and</font>

453
00:26:00,000 --> 00:26:02,460
if<font color="#E5E5E5"> you use</font><font color="#CCCCCC"> simulations here then you</font>

454
00:26:02,460 --> 00:26:05,130
don't<font color="#CCCCCC"> need</font><font color="#E5E5E5"> a model by the way okay you</font>

455
00:26:05,130 --> 00:26:06,150
don't<font color="#CCCCCC"> need these transition</font>

456
00:26:06,150 --> 00:26:08,040
probabilities<font color="#CCCCCC"> if you can simulate them</font>

457
00:26:08,040 --> 00:26:08,580
by some

458
00:26:08,580 --> 00:26:12,149
the computer and there is some error

459
00:26:12,149 --> 00:26:14,669
bound<font color="#E5E5E5"> that theoretical</font><font color="#CCCCCC"> Arab and that you</font>

460
00:26:14,669 --> 00:26:20,010
can compute for this process<font color="#E5E5E5"> and this</font>

461
00:26:20,010 --> 00:26:29,580
error bound says that if<font color="#E5E5E5"> okay let me go</font>

462
00:26:29,580 --> 00:26:32,909
<font color="#E5E5E5">back to</font><font color="#CCCCCC"> this figure here if this</font>

463
00:26:32,909 --> 00:26:37,470
<font color="#CCCCCC">difference is within Delta</font><font color="#E5E5E5"> okay if these</font>

464
00:26:37,470 --> 00:26:40,049
differences<font color="#E5E5E5"> are within Delta so</font>

465
00:26:40,049 --> 00:26:42,269
presumably you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> chosen intelligently</font>

466
00:26:42,269 --> 00:26:45,600
enough the subspace<font color="#CCCCCC"> so that the iterates</font>

467
00:26:45,600 --> 00:26:48,570
<font color="#E5E5E5">do not differ are not too far away from</font>

468
00:26:48,570 --> 00:26:52,130
<font color="#CCCCCC">this subspace</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> differences are</font>

469
00:26:52,130 --> 00:26:56,580
within<font color="#E5E5E5"> Delta then in the limit of this</font>

470
00:26:56,580 --> 00:27:00,840
process of successive fitting you get a

471
00:27:00,840 --> 00:27:04,350
<font color="#E5E5E5">function which is within this quantity</font>

472
00:27:04,350 --> 00:27:10,880
of the optimum<font color="#E5E5E5"> for all okay for all I so</font>

473
00:27:10,880 --> 00:27:15,000
this looks somewhat nice<font color="#E5E5E5"> okay that</font><font color="#CCCCCC"> is</font>

474
00:27:15,000 --> 00:27:16,710
some guarantee<font color="#E5E5E5"> even though this this</font>

475
00:27:16,710 --> 00:27:19,679
alpha here which appears<font color="#E5E5E5"> squared 1 minus</font>

476
00:27:19,679 --> 00:27:21,779
<font color="#CCCCCC">off</font><font color="#E5E5E5"> in the denominator which is a little</font>

477
00:27:21,779 --> 00:27:24,240
discouraging nonetheless it's not as if

478
00:27:24,240 --> 00:27:28,409
<font color="#CCCCCC">okay some result</font><font color="#E5E5E5"> however there is a</font>

479
00:27:28,409 --> 00:27:31,019
<font color="#E5E5E5">potential problem with this and I'll</font>

480
00:27:31,019 --> 00:27:32,639
show<font color="#CCCCCC"> you what the problem is in the next</font>

481
00:27:32,639 --> 00:27:34,100
<font color="#E5E5E5">slide</font>

482
00:27:34,100 --> 00:27:38,909
because it may be<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you cannot</font>

483
00:27:38,909 --> 00:27:41,639
<font color="#CCCCCC">guarantee that</font><font color="#E5E5E5"> this holds uniformly</font>

484
00:27:41,639 --> 00:27:44,820
<font color="#E5E5E5">there's a delta</font><font color="#CCCCCC"> that holds uniformly for</font>

485
00:27:44,820 --> 00:27:48,929
all<font color="#CCCCCC"> K okay here's an</font><font color="#E5E5E5"> example a</font><font color="#CCCCCC"> very</font>

486
00:27:48,929 --> 00:27:50,639
simple example<font color="#CCCCCC"> what is this algorithm</font>

487
00:27:50,639 --> 00:27:54,029
fails completely suppose that<font color="#E5E5E5"> you have</font>

488
00:27:54,029 --> 00:27:57,320
just<font color="#E5E5E5"> two states</font><font color="#CCCCCC"> okay Stage</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> two</font>

489
00:27:57,320 --> 00:28:02,100
okay<font color="#E5E5E5"> two states and there's only one</font>

490
00:28:02,100 --> 00:28:03,929
policy so let's forget about

491
00:28:03,929 --> 00:28:06,210
minimization<font color="#CCCCCC"> there's only one policy we</font>

492
00:28:06,210 --> 00:28:07,740
just try to approximate<font color="#E5E5E5"> the cost</font>

493
00:28:07,740 --> 00:28:11,370
<font color="#CCCCCC">function of that policy now let's assume</font>

494
00:28:11,370 --> 00:28:14,100
that this Markov<font color="#E5E5E5"> chain from</font><font color="#CCCCCC"> State</font><font color="#E5E5E5"> word</font>

495
00:28:14,100 --> 00:28:17,090
goes<font color="#E5E5E5"> directly to state to that</font>

496
00:28:17,090 --> 00:28:19,400
and if it is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> state to just state</font>

497
00:28:19,400 --> 00:28:22,370
that<font color="#E5E5E5"> state</font><font color="#CCCCCC"> to you can't get any simpler</font>

498
00:28:22,370 --> 00:28:24,760
than<font color="#E5E5E5"> this okay</font><font color="#CCCCCC"> two states</font>

499
00:28:24,760 --> 00:28:27,710
<font color="#E5E5E5">deterministically from</font><font color="#CCCCCC"> wanted to</font><font color="#E5E5E5"> or stay</font>

500
00:28:27,710 --> 00:28:31,000
within<font color="#E5E5E5"> two and with no cost</font>

501
00:28:31,000 --> 00:28:35,300
<font color="#E5E5E5">okay so trivially the cost function as</font>

502
00:28:35,300 --> 00:28:37,220
the cost vector<font color="#CCCCCC"> associated with</font><font color="#E5E5E5"> its</font>

503
00:28:37,220 --> 00:28:40,250
Markov chain is zero and zero<font color="#E5E5E5"> there's no</font>

504
00:28:40,250 --> 00:28:41,240
cost<font color="#E5E5E5"> okay</font>

505
00:28:41,240 --> 00:28:43,970
<font color="#CCCCCC">your</font><font color="#E5E5E5"> humilate zero</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> every step</font><font color="#CCCCCC"> no</font>

506
00:28:43,970 --> 00:28:46,490
matter<font color="#CCCCCC"> what you do</font><font color="#E5E5E5"> well there's only</font><font color="#CCCCCC"> one</font>

507
00:28:46,490 --> 00:28:48,490
<font color="#E5E5E5">thing to do but</font><font color="#CCCCCC"> your accumulator</font>

508
00:28:48,490 --> 00:28:53,059
so my desire<font color="#E5E5E5"> object is the zero vector</font>

509
00:28:53,059 --> 00:28:56,750
<font color="#CCCCCC">and</font><font color="#E5E5E5"> i want to approximate</font><font color="#CCCCCC"> it within some</font>

510
00:28:56,750 --> 00:29:00,040
subspace and<font color="#E5E5E5"> i will choose the sub space</font>

511
00:29:00,040 --> 00:29:05,420
that is spanned by<font color="#CCCCCC"> this vector here so</font>

512
00:29:05,420 --> 00:29:07,220
let's<font color="#E5E5E5"> consider the value iteration</font>

513
00:29:07,220 --> 00:29:10,190
scheme<font color="#E5E5E5"> that approximates</font><font color="#CCCCCC"> that</font>

514
00:29:10,190 --> 00:29:12,200
approximates the<font color="#E5E5E5"> tracks approximation</font>

515
00:29:12,200 --> 00:29:16,309
<font color="#E5E5E5">start with in this subspace so this</font>

516
00:29:16,309 --> 00:29:18,080
subspace is described by a<font color="#E5E5E5"> single</font>

517
00:29:18,080 --> 00:29:23,390
parameter R and the subspace are all the

518
00:29:23,390 --> 00:29:25,610
vectors that<font color="#E5E5E5"> are multiples of</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and</font>

519
00:29:25,610 --> 00:29:29,870
<font color="#E5E5E5">two okay</font><font color="#CCCCCC"> so Jake</font><font color="#E5E5E5"> star is 0 it is a</font>

520
00:29:29,870 --> 00:29:34,420
<font color="#E5E5E5">subspace here spanned by a single line</font>

521
00:29:34,420 --> 00:29:38,179
now<font color="#E5E5E5"> 0 belongs to</font><font color="#CCCCCC"> the subspace</font><font color="#E5E5E5"> so you</font>

522
00:29:38,179 --> 00:29:40,809
have here<font color="#E5E5E5"> even the luxury</font><font color="#CCCCCC"> that JH star</font>

523
00:29:40,809 --> 00:29:43,179
the object that you're looking<font color="#E5E5E5"> for</font>

524
00:29:43,179 --> 00:29:46,940
<font color="#E5E5E5">belongs can be approximated exactly</font><font color="#CCCCCC"> okay</font>

525
00:29:46,940 --> 00:29:50,620
with<font color="#E5E5E5"> zero error so it's a favorable case</font>

526
00:29:50,620 --> 00:29:53,120
now let's see how<font color="#CCCCCC"> this fitted value</font>

527
00:29:53,120 --> 00:29:57,650
duration scheme is going to work what do

528
00:29:57,650 --> 00:30:00,020
<font color="#E5E5E5">we do well we have a vector in the</font>

529
00:30:00,020 --> 00:30:02,210
approximation subspace<font color="#E5E5E5"> a vector of this</font>

530
00:30:02,210 --> 00:30:07,580
line defined by<font color="#E5E5E5"> RK and we find a new</font>

531
00:30:07,580 --> 00:30:11,270
vector on this line<font color="#CCCCCC"> according to this</font>

532
00:30:11,270 --> 00:30:15,890
<font color="#E5E5E5">projection which I be the weight of the</font>

533
00:30:15,890 --> 00:30:18,530
projection<font color="#E5E5E5"> though the norm so that's</font>

534
00:30:18,530 --> 00:30:20,870
that's that's the fitted<font color="#E5E5E5"> value</font><font color="#CCCCCC"> direction</font>

535
00:30:20,870 --> 00:30:23,450
I have a line<font color="#CCCCCC"> I have some point in the</font>

536
00:30:23,450 --> 00:30:24,140
line

537
00:30:24,140 --> 00:30:25,460
and I go to another<font color="#E5E5E5"> point in the line</font>

538
00:30:25,460 --> 00:30:27,890
<font color="#CCCCCC">another</font><font color="#E5E5E5"> point in the</font><font color="#CCCCCC"> line and ideally</font>

539
00:30:27,890 --> 00:30:31,610
<font color="#CCCCCC">you'd like to go</font><font color="#E5E5E5"> to zero so how do you</font>

540
00:30:31,610 --> 00:30:34,730
do that well you<font color="#E5E5E5"> approximate this vector</font>

541
00:30:34,730 --> 00:30:38,120
R to R you try to find a least squares

542
00:30:38,120 --> 00:30:42,290
fit to these<font color="#E5E5E5"> values here now this values</font>

543
00:30:42,290 --> 00:30:48,710
are<font color="#CCCCCC"> RK + 2</font><font color="#E5E5E5"> RK so it's a very simple</font>

544
00:30:48,710 --> 00:30:51,590
calculation here<font color="#E5E5E5"> it's a linear least</font>

545
00:30:51,590 --> 00:30:54,370
squares problem with a single parameter

546
00:30:54,370 --> 00:30:56,960
<font color="#CCCCCC">I'm not going</font><font color="#E5E5E5"> to go to the mechanics of</font>

547
00:30:56,960 --> 00:30:58,760
solving this problem<font color="#CCCCCC"> I'll just give you</font>

548
00:30:58,760 --> 00:31:02,330
<font color="#E5E5E5">the solution the</font><font color="#CCCCCC"> solution is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> RK</font>

549
00:31:02,330 --> 00:31:07,549
<font color="#E5E5E5">plus 1 is alpha times beta R K</font><font color="#CCCCCC"> so RK is</font>

550
00:31:07,549 --> 00:31:09,919
a point<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the line RK plus 1 is another</font>

551
00:31:09,919 --> 00:31:12,740
<font color="#E5E5E5">point on</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> line</font><font color="#CCCCCC"> a multiple of R K by</font>

552
00:31:12,740 --> 00:31:18,650
alpha beta alpha is the discount factor

553
00:31:18,650 --> 00:31:24,520
<font color="#E5E5E5">less than 1 and beta depends on the size</font>

554
00:31:24,520 --> 00:31:28,850
<font color="#CCCCCC">okay this comes from</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> calculation</font>

555
00:31:28,850 --> 00:31:31,700
this minimization<font color="#E5E5E5"> so I have this weight</font>

556
00:31:31,700 --> 00:31:34,010
<font color="#CCCCCC">vector and notice if you look at this</font>

557
00:31:34,010 --> 00:31:36,470
weight vector<font color="#E5E5E5"> notice that's always</font>

558
00:31:36,470 --> 00:31:43,070
greater than<font color="#CCCCCC"> 1 so</font><font color="#E5E5E5"> alpha is</font><font color="#CCCCCC"> some number</font>

559
00:31:43,070 --> 00:31:45,470
less than<font color="#E5E5E5"> 1 is multiplied by a number</font>

560
00:31:45,470 --> 00:31:48,049
<font color="#E5E5E5">greater than 1 and</font><font color="#CCCCCC"> the product could</font><font color="#E5E5E5"> be</font>

561
00:31:48,049 --> 00:31:50,690
<font color="#E5E5E5">greater or less than</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> if it's less than</font>

562
00:31:50,690 --> 00:31:53,660
<font color="#CCCCCC">1 then I have</font><font color="#E5E5E5"> converters but if this</font>

563
00:31:53,660 --> 00:31:56,870
beta<font color="#E5E5E5"> is larger than 1 over alpha then we</font>

564
00:31:56,870 --> 00:32:02,600
get divergence<font color="#E5E5E5"> okay so for</font><font color="#CCCCCC"> example okay</font>

565
00:32:02,600 --> 00:32:04,690
<font color="#CCCCCC">so if alpha is greater</font><font color="#E5E5E5"> than 1 over beta</font>

566
00:32:04,690 --> 00:32:08,210
<font color="#E5E5E5">for example if this if you</font><font color="#CCCCCC"> choose just</font>

567
00:32:08,210 --> 00:32:12,919
<font color="#CCCCCC">the uniform norm</font><font color="#E5E5E5"> okay so is</font><font color="#CCCCCC"> equal</font><font color="#E5E5E5"> to 1</font>

568
00:32:12,919 --> 00:32:15,290
<font color="#E5E5E5">or</font><font color="#CCCCCC"> maybe 1/2 to make it a problem</font>

569
00:32:15,290 --> 00:32:19,700
<font color="#E5E5E5">distribution then you can see that this</font>

570
00:32:19,700 --> 00:32:23,390
number<font color="#E5E5E5"> here</font><font color="#CCCCCC"> this number here becomes</font>

571
00:32:23,390 --> 00:32:26,030
greater than<font color="#E5E5E5"> 1 and</font><font color="#CCCCCC"> you get divergence</font>

572
00:32:26,030 --> 00:32:29,630
<font color="#CCCCCC">the method just diverges</font><font color="#E5E5E5"> so the error</font>

573
00:32:29,630 --> 00:32:31,059
bar that I gave you<font color="#CCCCCC"> in the previous</font>

574
00:32:31,059 --> 00:32:34,429
slide<font color="#CCCCCC"> and does</font><font color="#E5E5E5"> not hold because you</font>

575
00:32:34,429 --> 00:32:35,299
don't have<font color="#E5E5E5"> given for</font>

576
00:32:35,299 --> 00:32:39,049
approximation<font color="#CCCCCC"> here's the zero</font><font color="#E5E5E5"> reckon you</font>

577
00:32:39,049 --> 00:32:44,739
just keep going<font color="#CCCCCC"> off and there is no</font>

578
00:32:45,039 --> 00:32:48,350
there's no<font color="#E5E5E5"> this table is in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> method</font>

579
00:32:48,350 --> 00:32:54,590
fails now it's a kind<font color="#CCCCCC"> of a devastating</font>

580
00:32:54,590 --> 00:32:57,710
example and<font color="#CCCCCC"> stop provoking because it</font>

581
00:32:57,710 --> 00:33:00,159
says<font color="#CCCCCC"> that you just can't arbitrarily</font>

582
00:33:00,159 --> 00:33:02,840
<font color="#E5E5E5">simulate project approximate and things</font>

583
00:33:02,840 --> 00:33:05,929
will work<font color="#CCCCCC"> out very</font><font color="#E5E5E5"> easily you can get</font>

584
00:33:05,929 --> 00:33:08,389
things<font color="#E5E5E5"> not</font><font color="#CCCCCC"> to work you have to</font><font color="#E5E5E5"> be very</font>

585
00:33:08,389 --> 00:33:11,809
<font color="#E5E5E5">careful about what you do notice</font><font color="#CCCCCC"> that if</font>

586
00:33:11,809 --> 00:33:14,720
<font color="#CCCCCC">you choose the size properly</font><font color="#E5E5E5"> in</font>

587
00:33:14,720 --> 00:33:16,879
particular if you choose side<font color="#CCCCCC"> too much</font>

588
00:33:16,879 --> 00:33:21,109
<font color="#E5E5E5">larger than 1 then this becomes less</font>

589
00:33:21,109 --> 00:33:23,809
<font color="#CCCCCC">than 1 and</font><font color="#E5E5E5"> you get</font><font color="#CCCCCC"> convergence</font><font color="#E5E5E5"> so the</font>

590
00:33:23,809 --> 00:33:25,249
trick is<font color="#CCCCCC"> to choose properly the</font>

591
00:33:25,249 --> 00:33:30,710
<font color="#CCCCCC">distribution here of sampling</font><font color="#E5E5E5"> and more</font>

592
00:33:30,710 --> 00:33:34,070
<font color="#E5E5E5">fundamentally</font><font color="#CCCCCC"> the difficulty is that yes</font>

593
00:33:34,070 --> 00:33:36,950
the<font color="#E5E5E5"> T mapping is a contraction</font><font color="#CCCCCC"> as we</font>

594
00:33:36,950 --> 00:33:39,909
have seen in iterating with T

595
00:33:39,909 --> 00:33:41,119
<font color="#E5E5E5">convergence</font>

596
00:33:41,119 --> 00:33:45,889
however what we do here is we apply PI T

597
00:33:45,889 --> 00:33:49,190
and it's not<font color="#E5E5E5"> necessarily true that the</font>

598
00:33:49,190 --> 00:33:52,519
projection composed with T is a

599
00:33:52,519 --> 00:33:55,210
contraction

600
00:34:02,929 --> 00:34:05,450
<font color="#E5E5E5">who this happening here is what's called</font>

601
00:34:05,450 --> 00:34:08,809
<font color="#E5E5E5">the norm</font><font color="#CCCCCC"> mismatch problem and let me</font>

602
00:34:08,809 --> 00:34:13,489
look at the<font color="#CCCCCC"> picture again remember that</font>

603
00:34:13,489 --> 00:34:17,299
this fitted value<font color="#E5E5E5"> duration start with</font>

604
00:34:17,299 --> 00:34:20,750
some<font color="#E5E5E5"> j 0 applies</font><font color="#CCCCCC"> t 2 it projects down</font>

605
00:34:20,750 --> 00:34:23,899
<font color="#E5E5E5">with respect</font><font color="#CCCCCC"> to this projection</font><font color="#E5E5E5"> norm</font>

606
00:34:23,899 --> 00:34:27,649
<font color="#E5E5E5">again projects down and so on so you</font>

607
00:34:27,649 --> 00:34:33,230
<font color="#E5E5E5">generate a sequence</font><font color="#CCCCCC"> of vectors J tilde 1</font>

608
00:34:33,230 --> 00:34:36,730
J tilde to J<font color="#CCCCCC"> tilde 3 and so on</font><font color="#E5E5E5"> by</font>

609
00:34:36,730 --> 00:34:41,659
iterating with the mapping<font color="#CCCCCC"> PI T and the</font>

610
00:34:41,659 --> 00:34:43,699
problem is<font color="#E5E5E5"> that Phi T may not be a</font>

611
00:34:43,699 --> 00:34:46,010
projection may not be a contraction<font color="#E5E5E5"> even</font>

612
00:34:46,010 --> 00:34:48,109
though T is a contraction<font color="#E5E5E5"> if you didn't</font>

613
00:34:48,109 --> 00:34:50,119
have intermediate<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> projection</font>

614
00:34:50,119 --> 00:34:52,250
<font color="#E5E5E5">there would be no problem but because</font><font color="#CCCCCC"> of</font>

615
00:34:52,250 --> 00:34:55,389
the intermediate projection<font color="#E5E5E5"> you can get</font>

616
00:34:55,389 --> 00:34:58,400
divergence because<font color="#E5E5E5"> there is a norm</font>

617
00:34:58,400 --> 00:35:03,020
mismatch<font color="#CCCCCC"> C is a contraction</font><font color="#E5E5E5"> sum up sum</font>

618
00:35:03,020 --> 00:35:06,319
norm<font color="#E5E5E5"> but Phi it's not the contraction</font>

619
00:35:06,319 --> 00:35:08,299
projections are not contractions but

620
00:35:08,299 --> 00:35:12,559
<font color="#E5E5E5">they are</font><font color="#CCCCCC"> non expensive non expensive non</font>

621
00:35:12,559 --> 00:35:15,260
expensive means that if they iterate<font color="#E5E5E5"> on</font>

622
00:35:15,260 --> 00:35:17,660
<font color="#E5E5E5">two vectors and you project those two</font>

623
00:35:17,660 --> 00:35:19,789
<font color="#CCCCCC">vectors</font><font color="#E5E5E5"> then the distance between the</font>

624
00:35:19,789 --> 00:35:23,720
projection is no larger than<font color="#CCCCCC"> the</font>

625
00:35:23,720 --> 00:35:26,059
<font color="#CCCCCC">distance between</font><font color="#E5E5E5"> the originals</font><font color="#CCCCCC"> okay I</font>

626
00:35:26,059 --> 00:35:29,000
have two vectors<font color="#E5E5E5"> projecting down the</font>

627
00:35:29,000 --> 00:35:32,029
projections are<font color="#E5E5E5"> closer together than the</font>

628
00:35:32,029 --> 00:35:36,700
original<font color="#E5E5E5"> okay so</font>

629
00:35:37,600 --> 00:35:41,270
if<font color="#CCCCCC"> T is a contraction</font><font color="#E5E5E5"> with respect to</font>

630
00:35:41,270 --> 00:35:44,420
the<font color="#CCCCCC"> way</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> norm this weighted norm</font>

631
00:35:44,420 --> 00:35:46,010
<font color="#E5E5E5">then there</font><font color="#CCCCCC"> is no</font><font color="#E5E5E5"> problem</font>

632
00:35:46,010 --> 00:35:50,690
<font color="#E5E5E5">P contracts vectors and projection does</font>

633
00:35:50,690 --> 00:35:53,390
not pull<font color="#E5E5E5"> them apart</font><font color="#CCCCCC"> so you still</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> a</font>

634
00:35:53,390 --> 00:35:55,750
contraction<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you get convergence</font>

635
00:35:55,750 --> 00:35:58,940
<font color="#E5E5E5">however if you have T being a</font>

636
00:35:58,940 --> 00:36:01,460
contraction with respect to one norm<font color="#E5E5E5"> and</font>

637
00:36:01,460 --> 00:36:03,140
the projection<font color="#CCCCCC"> B with respect</font><font color="#E5E5E5"> to another</font>

638
00:36:03,140 --> 00:36:06,200
norm<font color="#E5E5E5"> you may get a</font><font color="#CCCCCC"> normed mismatch</font><font color="#E5E5E5"> and</font>

639
00:36:06,200 --> 00:36:10,670
create a divergence in<font color="#CCCCCC"> the iteration</font><font color="#E5E5E5"> so</font>

640
00:36:10,670 --> 00:36:13,550
what does this say<font color="#E5E5E5"> it says that we need</font>

641
00:36:13,550 --> 00:36:17,930
<font color="#CCCCCC">a special</font><font color="#E5E5E5"> side ax I that works together</font>

642
00:36:17,930 --> 00:36:20,780
with T in order<font color="#CCCCCC"> to get a method that</font>

643
00:36:20,780 --> 00:36:23,690
works<font color="#CCCCCC"> just choosing an X I arbitrarily</font>

644
00:36:23,690 --> 00:36:25,850
<font color="#CCCCCC">if the</font><font color="#E5E5E5"> sampling distribution is</font>

645
00:36:25,850 --> 00:36:28,640
arbitrary<font color="#E5E5E5"> then you can get a real</font>

646
00:36:28,640 --> 00:36:33,590
<font color="#CCCCCC">problem so that's the norm</font><font color="#E5E5E5"> mismatch</font>

647
00:36:33,590 --> 00:36:38,780
problem finding a distribution<font color="#CCCCCC"> X I such</font>

648
00:36:38,780 --> 00:36:40,580
<font color="#E5E5E5">that projection with respect to that</font>

649
00:36:40,580 --> 00:36:44,440
distribution<font color="#E5E5E5"> composed with T is a</font>

650
00:36:44,440 --> 00:36:47,960
contraction<font color="#E5E5E5"> in particular find a magic</font>

651
00:36:47,960 --> 00:36:49,220
way that<font color="#E5E5E5"> normal</font>

652
00:36:49,220 --> 00:36:51,770
under which T<font color="#E5E5E5"> is a contraction</font><font color="#CCCCCC"> and use</font>

653
00:36:51,770 --> 00:36:58,640
<font color="#E5E5E5">that for sampling now it's a very</font>

654
00:36:58,640 --> 00:37:01,100
central issue in approximation<font color="#E5E5E5"> with the</font>

655
00:37:01,100 --> 00:37:02,870
<font color="#E5E5E5">codex</font><font color="#CCCCCC"> often</font><font color="#E5E5E5"> and programming and</font>

656
00:37:02,870 --> 00:37:05,030
simulation and we'll come<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to this</font>

657
00:37:05,030 --> 00:37:06,560
issue<font color="#CCCCCC"> because it also appears in</font>

658
00:37:06,560 --> 00:37:08,600
approximate policy<font color="#E5E5E5"> direction here we saw</font>

659
00:37:08,600 --> 00:37:11,150
it we<font color="#CCCCCC"> Michalek top approximated election</font>

660
00:37:11,150 --> 00:37:13,460
<font color="#E5E5E5">it also appears in</font><font color="#CCCCCC"> the context of</font>

661
00:37:13,460 --> 00:37:18,110
approximate policy direction<font color="#E5E5E5"> many</font>

662
00:37:18,110 --> 00:37:21,940
questions<font color="#E5E5E5"> can clarify this a little bit</font>

663
00:37:23,250 --> 00:37:25,320
it's important to<font color="#E5E5E5"> have the product</font><font color="#CCCCCC"> of is</font>

664
00:37:25,320 --> 00:37:28,170
to be a contraction<font color="#CCCCCC"> and to choose Sai</font>

665
00:37:28,170 --> 00:37:38,240
properly for this to happen<font color="#E5E5E5"> okay so</font>

666
00:37:38,450 --> 00:37:42,690
maybe we<font color="#CCCCCC"> take a little</font><font color="#E5E5E5"> break like like</font>

667
00:37:42,690 --> 00:37:45,210
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> minutes just to digest this and then</font>

668
00:37:45,210 --> 00:37:46,470
we'll go<font color="#CCCCCC"> into approximate polish</font>

669
00:37:46,470 --> 00:37:47,580
<font color="#E5E5E5">direction which will take a little</font>

670
00:37:47,580 --> 00:00:00,000
longer<font color="#E5E5E5"> to go to go through</font>

